{"version":3,"sources":["webpack://flat-js-next/./web/components/debugger-value.vue?e0dd","webpack://flat-js-next/./web/components/debugger.vue?2701","webpack://flat-js-next/./web/components/monaco.vue?515e","webpack://flat-js-next/./web/index.vue?d6db","webpack://flat-js-next/./src/compiler.ts","webpack://flat-js-next/./src/index.ts","webpack://flat-js-next/./src/runtime.ts","webpack://flat-js-next/./web/index.ts","webpack://flat-js-next/./node_modules/typescript/lib|sync","webpack://flat-js-next/./web/components/debugger-value.vue","webpack://flat-js-next/./web/components/debugger.vue","webpack://flat-js-next/./web/components/monaco.vue","webpack://flat-js-next/./web/index.vue","webpack://flat-js-next/./web/components/debugger-value.vue?6bd8","webpack://flat-js-next/./web/components/debugger.vue?a97a","webpack://flat-js-next/./web/components/monaco.vue?9394","webpack://flat-js-next/./web/index.vue?470e","webpack://flat-js-next/./web/components/debugger-value.vue?1882","webpack://flat-js-next/./web/components/debugger.vue?29ba","webpack://flat-js-next/./web/components/monaco.vue?694a","webpack://flat-js-next/./web/index.vue?d36c"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","vue_1","EntryType","default","extend","name","props","initialExpand","type","Boolean","isError","displayKey","String","forcedProp","refreshKey","Number","expand","computed","undefined","JSON","stringify","keys","Reflect","ownKeys","entries","key","desc","getOwnPropertyDescriptor","push","stringKeyProp","wrapIdentifier","stringKeyGetSet","err","stringKeyError","symbolKeyProp","toString","symbolKeyError","proto","getPrototypeOf","prototype","methods","str","test","debugger_value_vue_1","id","map","WeakMap","components","DebuggerValue","stackContainer","stack","data","refreshKeyInternal","Math","random","top","length","slice","reverse","getKey","obj","has","newId","set","get","isGlobalThis","v","globalThis","__createBinding","create","o","m","k","k2","enumerable","__setModuleDefault","__importStar","result","hasOwnProperty","call","monaco","readonly","highlights","Array","watch","newVal","editor","getValue","setValue","updateOptions","readOnly","currentDecorations","deltaDecorations","r1","c1","r2","c2","range","Range","options","inlineClassName","$refs","language","scrollBeyondLastLine","automaticLayout","onDidChangeModelContent","ev","$emit","src_1","monaco_vue_1","debugger_vue_1","fakeGlobalThis","names","configurable","makeGlobalThis","Monaco","Debugger","text","replText","state","debugInfo","sourceMap","internals","container","$nextTick","scrollHeight","offsetHeight","scrollTop","stepIn","execution","getPos","currentPosition","originalPos","join","getCurrentStackLength","filter","it","maxStack","skipping","firstIgnored","min","done","printError","prevPos","Promise","r","setTimeout","programData","textData","compile","program","getExecution","print","val","clear","__proto__","pause","runExecution","evalMode","run","getNameOfKind","isSmallNumber","TEXT_DADA_MASK","ts","a","abort","msg","Error","findAncient","node","parentMap","predicate","parent","extractVariable","isIdentifier","isArrayBindingPattern","n","list","el","elements","isObjectBindingPattern","propertyName","searchFunctionAndScope","functions","scopes","findFunction","isSourceFile","isFunctionLike","isCallSignatureDeclaration","isConstructSignatureDeclaration","isMethodSignature","isIndexSignatureDeclaration","isTypeNode","isScopeRoot","add","Map","kind","SyntaxKind","Block","pair","isConstructorDeclaration","isFunctionDeclaration","isFunctionExpression","isArrowFunction","isMethodDeclaration","isAccessor","ForStatement","ForInStatement","SwitchStatement","CaseBlock","forEachChild","headOf","arr","match","op","preData","internal","offset","generateVariableList","variables","markInternals","flat","concat","size","generateEnterScope","generateLeaveScope","nextOps","continueOps","ops","markInternal","generateSegment","withPos","withEval","withStrict","bodyNodes","functionDeclarations","extractQuote","isParenthesizedExpression","expression","generateLeft","flag","res","rawNode","ThisKeyword","isPropertyAccessExpression","generate","isElementAccessExpression","argumentExpression","generateLeft_","source","end","start","getStart","TrueKeyword","FalseKeyword","NullKeyword","EmptyStatement","isVariableDeclarationList","declaration","declarations","initializer","flags","NodeFlags","Const","Let","isVariableStatement","declarationList","isStringLiteral","isExpressionStatement","isNumericLiteral","isConditionalExpression","condition","positive","whenTrue","negative","whenFalse","isBlock","statements","s","isReturnStatement","isPrefixUnaryExpression","operand","operator","MinusToken","PlusToken","PlusPlusToken","MinusMinusToken","expr","ExclamationToken","TildeToken","isCallExpression","self","args","arguments","leftOps","isEval","isNewExpression","isArrayLiteralExpression","index","isSpreadElement","OmittedExpression","isObjectLiteralExpression","properties","item","isShorthandPropertyAssignment","isComputedPropertyName","isPropertyAssignment","isRegularExpressionLiteral","replace","isForStatement","nextOp","continueOp","incrementor","hasScope","entry0","entry1","exit","conditionS","update0","update1","body","statement","isIfStatement","thenStatement","whenFalsy","elseStatement","isBinaryExpression","operatorToken","AmpersandAmpersandToken","left","right","BarBarToken","isVoidExpression","CommaToken","PlusEqualsToken","MinusEqualsToken","SlashEqualsToken","AsteriskEqualsToken","EqualsToken","InstanceOfKeyword","CaretToken","AmpersandToken","BarToken","GreaterThanToken","GreaterThanGreaterThanToken","GreaterThanGreaterThanGreaterThanToken","GreaterThanEqualsToken","LessThanToken","LessThanLessThanToken","LessThanEqualsToken","EqualsEqualsToken","EqualsEqualsEqualsToken","ExclamationEqualsToken","ExclamationEqualsEqualsToken","InKeyword","AsteriskToken","SlashToken","PercentToken","remain","isTypeOfExpression","unwrapped","isPostfixUnaryExpression","isDebuggerStatement","isThrowStatement","isTryStatement","tryStatements","tryBlock","exitTry","catchStatement","catchClause","block","exitCatch","finallyStatement","finallyBlock","exitFinally","exitAll","catchIdentifier","variableDeclaration","Identifier","isSwitchStatement","switchHead","bodies","c","caseBlock","clauses","isCaseClause","rule","entry","hasVariables","connectedBodyHead","connectedBodyRules","connectedBody","connectedBodyExit","connectedBodyEnd","nextSegment","switchTail","isBreakStatement","label","crossedTryCatch","scopeCount","target","nextNode","fill","exitStub","isContinueStatement","forHasScope","isWhileStatement","head","isDoStatement","tail","isForInStatement","hasVariable","BlockScoped","variableIsConst","variableName","enter","leave","getLhs","continueOrLeave","isDeleteExpression","generate_","functionDeclarationNodes","parameters","dotDotDotToken","results","pos","src","debug","Set","scopeChild","sourceNode","createSourceFile","ScriptTarget","ESNext","ScriptKind","TS","locationMap","row","col","i","servicesHost","getScriptFileNames","getScriptKind","getScriptVersion","useCaseSensitiveFileNames","getDefaultLibFileName","getCurrentDirectory","getCanonicalFileName","getSourceFile","diagnostics","createProgram","getSyntacticDiagnostics","errorMessages","code","messageText","SyntaxError","isArray","markParent","d","blockScoped","parentFn","scope","resolveScopes","linkScopes","functionToSegment","generated","SourceFile","flattened","nodes","seg","genOffset","OpCode","console","error","fnRootToSegment","ptr","nodePtr","opPtr","func","FunctionDeclaration","FunctionExpression","ArrowFunction","GetAccessor","SetAccessor","Constructor","MethodDeclaration","oldIndex","indexOf","generateData","compileAndRun","compiler_1","compiler_2","runtime_1","runtime_2","CALL","Function","APPLY","apply","BIND","bind","REGEXP","RegExp","is_not_defined","getEmptyObject","functionDescriptors","environments","WeakSet","bindInfo","variableDescriptors","entryPoint","invokeData","getDebugFunction","compileFunction","currentProgram","currentTextData","initialFrame","read","getCurrentFrame","peak","defineVariableInternal","tdz","immutable","descriptor","ReferenceError","TypeError","defineVariable","getVariableDescriptor","MyArgument","defineFunction","scopeClone","pr","txt","des","fn","run_","__pos__","findScope","ctx","env","currentGlobal","evalResult","commandPtr","redirectedFunctions","EVAL_FUNCTION","eval","emulateEval","includesLocalScope","currentPtr","command","currentFrame","returnsExternal","returnValue","executeReturn","frame","returnAddr","pop","initiateReturn","finallyAddr","executeThrow","initiateThrow","exitAddr","catchAddr","newScope","addCatchScope","executeBreak","depth","loop","nextFrame","popCurrentFrameStack","pushCurrentFrameStack","arg","rightVal","leftValue","b","writable","hit","functionType","variableCount","argumentNameCount","argumentNames","parameterCount","unshift","invokeType","getArgumentObject","callee","setPrototypeOf","createArgumentObject","bindingLength","newTarget","envOrRecord","newFn","newSelf","newParameters","parameterArrayLike","parameterLength","info","bindFn","additionalArgs","bindInternal","newFrame","fnToCall","construct","functionFrame","prevFrame","catchName","breakAddr","initiateBreak","prevState","prevResolveType","prevValue","finallyPtr","next","old","currentValue","debugFn","warn","evalValue","evalResultInstead","index_vue_1","log","document","getElementById","render","h","webpackEmptyContext","req","e","resolve","module","component","__file","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","_e","serialized","on","click","$event","_l","childEntries","attrs","key1","staticRenderFns","_withStripped","ref","class","running","directives","rawName","model","callback","$$v","runAndPause","resume","stepExecution","stop","placeholder","domProps","keydown","_k","keyCode","runRepl","input","composing"],"mappings":"iHACA,IAAIA,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMC,EAAQR,EAAgB,EAAQ,MACtC,IAAIS,GACJ,SAAWA,GACPA,EAAUA,EAAyB,cAAI,GAAK,gBAC5CA,EAAUA,EAA2B,gBAAI,GAAK,kBAC9CA,EAAUA,EAA0B,eAAI,GAAK,iBAC7CA,EAAUA,EAAyB,cAAI,GAAK,gBAC5CA,EAAUA,EAA2B,gBAAI,GAAK,kBAC9CA,EAAUA,EAA0B,eAAI,GAAK,iBAC7CA,EAAUA,EAAqB,UAAI,GAAK,YAP5C,CAQGA,IAAcA,EAAY,KAC7BH,EAAQI,QAAUF,EAAME,QAAQC,OAAO,CACnCC,KAAM,gBACNC,MAAO,CACHC,cAAe,CACXC,KAAMC,QACNN,SAAS,GAEbO,QAAS,CACLF,KAAMC,QACNN,SAAS,GAEbQ,WAAY,CACRH,KAAMI,OACNT,QAAS,MAEbU,WAAY,CACRL,KAAMC,QACNN,SAAS,GAEbW,WAAY,CACRN,KAAMO,OACNZ,QAAS,GAEbH,MAAO,IAEX,OACI,MAAO,CACHgB,OAAQtB,KAAKa,cACbL,cAGRe,SAAU,CACN,OAEI,OADAvB,KAAKoB,WACEpB,KAAKgB,QAAU,QAAyB,OAAfhB,KAAKM,MAAiB,cAAgBN,KAAKM,OAE/E,aAEI,OADAN,KAAKoB,WACDpB,KAAKgB,QACEE,OAAOlB,KAAKM,YACJkB,IAAfxB,KAAKM,MACE,YACQ,OAAfN,KAAKM,MACE,OACe,iBAAfN,KAAKM,MACL,YACe,mBAAfN,KAAKM,MACL,WACe,iBAAfN,KAAKM,MACLY,OAAOlB,KAAKM,OAChBmB,KAAKC,UAAU1B,KAAKM,QAE/B,eAEI,GADAN,KAAKoB,WACa,WAAdpB,KAAKc,MAAmC,aAAdd,KAAKc,KAC/B,MAAO,GAEX,MAAMa,EAAOC,QAAQC,QAAQ7B,KAAKM,OAC5BwB,EAAU,GAChB,IAAK,IAAIC,KAAOJ,EAAM,CAClB,MAAMK,EAAOJ,QAAQK,yBAAyBjC,KAAKM,MAAOyB,GAC1D,GAAmB,iBAARA,EACP,IACQ,UAAWC,GAAQhC,KAAKmB,WACxBW,EAAQI,KAAK,CAAC1B,EAAU2B,cAAenC,KAAKoC,eAAeL,GAAM/B,KAAKM,MAAMyB,KAG5ED,EAAQI,KAAK,CAAC1B,EAAU6B,gBAAiB,WAAarC,KAAKoC,eAAeL,GAAMC,IAGxF,MAAOM,GACC,UAAWN,GAAQhC,KAAKmB,WACxBW,EAAQI,KAAK,CAAC1B,EAAU+B,eAAgBvC,KAAKoC,eAAeL,GAAMb,OAAOoB,KAGzER,EAAQI,KAAK,CAAC1B,EAAU+B,eAAgB,WAAavC,KAAKoC,eAAeL,GAAMb,OAAOoB,UAK9F,IACQ,UAAWN,GAAQhC,KAAKmB,WACxBW,EAAQI,KAAK,CAAC1B,EAAUgC,cAAexC,KAAKoC,eAAeL,EAAIU,YAAazC,KAAKM,MAAMyB,KAGvFD,EAAQI,KAAK,CAAC1B,EAAU6B,gBAAiB,WAAarC,KAAKoC,eAAeL,EAAIU,YAAaT,IAGnG,MAAOM,GACC,UAAWN,GAAQhC,KAAKmB,WACxBW,EAAQI,KAAK,CAAC1B,EAAUkC,eAAgB1C,KAAKoC,eAAeL,EAAIU,YAAavB,OAAOoB,KAGpFR,EAAQI,KAAK,CAAC1B,EAAUkC,eAAgB,WAAa1C,KAAKoC,eAAeL,EAAIU,YAAavB,OAAOoB,MAKjH,MAAMK,EAAQf,QAAQgB,eAAe5C,KAAKM,OAI1C,OAHa,MAATqC,GACAb,EAAQI,KAAK,CAAC1B,EAAUqC,UAAW,gBAAiBF,IAEjDb,IAGfgB,QAAS,CACLV,eAAeW,GACN,eAAeC,KAAKD,GAGlBtB,KAAKC,UAAUqB,GAFXA,M,kCC3HvB,IAAIhD,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMC,EAAQR,EAAgB,EAAQ,MAChCkD,EAAuBlD,EAAgB,EAAQ,MACrD,IAAImD,EAAK,EACLC,EAAM,IAAIC,QAQd/C,EAAQI,QAAUF,EAAME,QAAQC,OAAO,CACnC2C,WAAY,CACRC,cAAeL,EAAqBxC,SAExCG,MAAO,CACH2C,eAAgB,CACZzC,KAAMX,OACNM,QAAO,KACI,CAAE+C,MAAO,MAGxBpC,WAAY,CACRN,KAAMO,OACNZ,QAAS,IAGjBgD,KAAI,KACO,CACHC,mBAAoBC,KAAKC,WAGjCrC,SAAU,CACN,SACI,MAAMiC,EAAQxD,KAAKuD,eAAeC,MAC5BK,EAAML,EAAMA,EAAMM,OAAS,GACjC,OAAOD,EAAMA,EAAI,GAAgBE,MAAM,GAAGC,UAAY,KAG9DlB,QAAS,CACLmB,OApCQC,IACZ,IAAKf,EAAIgB,IAAID,GAAM,CACf,MAAME,EAAQlB,IACdC,EAAIkB,IAAIH,EAAKE,GAEjB,OAAOjB,EAAImB,IAAIJ,IAgCXK,aAAaC,GACFA,IAAMC,e,iCC9CzB,IAAIC,EAAmB1E,MAAQA,KAAK0E,kBAAqBvE,OAAOwE,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EvD,IAAPuD,IAAkBA,EAAKD,GAC3B3E,OAAOC,eAAewE,EAAGG,EAAI,CAAEC,YAAY,EAAMV,IAAK,WAAa,OAAOO,EAAEC,OAC3E,SAAUF,EAAGC,EAAGC,EAAGC,QACTvD,IAAPuD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,KAEVG,EAAsBjF,MAAQA,KAAKiF,qBAAwB9E,OAAOwE,OAAS,SAAUC,EAAGJ,GACxFrE,OAAOC,eAAewE,EAAG,UAAW,CAAEI,YAAY,EAAM1E,MAAOkE,KAC9D,SAASI,EAAGJ,GACbI,EAAW,QAAIJ,IAEfU,EAAgBlF,MAAQA,KAAKkF,cAAiB,SAAUjF,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIkF,EAAS,GACb,GAAW,MAAPlF,EAAa,IAAK,IAAI6E,KAAK7E,EAAe,YAAN6E,GAAmB3E,OAAO0C,UAAUuC,eAAeC,KAAKpF,EAAK6E,IAAIJ,EAAgBS,EAAQlF,EAAK6E,GAEtI,OADAG,EAAmBE,EAAQlF,GACpBkF,GAEPpF,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMgF,EAASJ,EAAa,EAAQ,OAC9B3E,EAAQR,EAAgB,EAAQ,MAItCM,EAAQI,QAAUF,EAAME,QAAQC,OAAO,CACnCE,MAAO,CACHN,MAAO,CACHQ,KAAMI,OACNT,QAAS,IAEb8E,SAAU,CACNzE,KAAMC,QACNN,SAAS,GAEb+E,WAAY,CACR1E,KAAM2E,MACNhF,QAAO,IACI,KAInB,OACI,OArBiBgD,EAqBM,GApBpB,IAAMA,KADjB,IAAyBA,GAuBrBlC,SAAU,CACN,sBACI,OAAOE,KAAKC,UAAU1B,KAAKwF,cAGnCE,MAAO,CACH,MAAMC,GACF,MAAMC,EAAS5F,KAAK4F,OACJA,EAAOC,aACPF,GACZC,EAAOE,SAASH,IAGxB,SAASA,GACL3F,KAAK4F,OAAOG,cAAc,CACtBC,SAAUL,KAGlB,sBACI3F,KAAKiG,mBAAqBjG,KAAK4F,OAAOM,iBAAiBlG,KAAKiG,mBAAoBjG,KAAKwF,WAAWrC,KAAI,EAAEgD,EAAIC,EAAIC,EAAIC,MAAQ,CACtHC,MAAO,IAAIjB,EAAOkB,MAAML,EAAIC,EAAIC,EAAIC,GACpCG,QAAS,CAAEC,gBAAiB,2BAIxC,UACI1G,KAAKiG,mBAAqB,GAC1B,MAAML,EAAS5F,KAAK4F,OAASN,EAAOM,OAAOjB,OAAO3E,KAAK2G,MAAMf,OAAQ,CACjEtF,MAAON,KAAKM,MACZsG,SAAU,aACVC,sBAAsB,EACtBC,iBAAiB,IAErBlB,EAAOmB,yBAAwBC,IACbpB,EAAOC,aACP7F,KAAKM,OACfN,KAAKiH,MAAM,QAASrB,EAAOC,eAG/B7F,KAAKuF,UACLvF,KAAK4F,OAAOG,cAAc,CACtBC,UAAU,IAGdhG,KAAKwF,WAAW1B,OAAS,IACzB9D,KAAKiG,mBAAqBjG,KAAK4F,OAAOM,iBAAiBlG,KAAKiG,mBAAoBjG,KAAKwF,WAAWrC,KAAI,EAAEgD,EAAIC,EAAIC,EAAIC,MAAQ,CACtHC,MAAO,IAAIjB,EAAOkB,MAAML,EAAIC,EAAIC,EAAIC,GACpCG,QAAS,CAAEC,gBAAiB,8B,iCC/F5C,IAAI3G,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAM4G,EAAQ,EAAQ,MAChB3G,EAAQR,EAAgB,EAAQ,MAChCoH,EAAepH,EAAgB,EAAQ,OACvCqH,EAAiBrH,EAAgB,EAAQ,OAyE/C,MAAMsH,EArEN,WACI,MAAMC,EAAQ,CACV,WACA,MACA,YACA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,QACA,cACA,UACA,WACA,OACA,QACA,YACA,eACA,eACA,WACA,YACA,aACA,aACA,MACA,SACA,SACA,UACA,QACA,aACA,iBACA,SACA,MACA,oBACA,SACA,SACA,cACA,YACA,aACA,oBACA,cACA,cACA,WACA,UACA,UACA,UACA,OACA,UACA,SACA,WACA,OACA,QAEEpD,EAAM,GACZ,IAAK,IAAIvD,KAAQ2G,EACT1F,QAAQuC,IAAIM,WAAY9D,KACxBuD,EAAIvD,GAAQ8D,WAAW9D,IAQ/B,OALAiB,QAAQxB,eAAe8D,EAAK,aAAc,CACtCc,YAAY,EACZuC,cAAc,EACdjH,MAAO4D,IAEJA,EAEYsD,GACvBnH,EAAQI,QAAUF,EAAME,QAAQC,OAAO,CACnC2C,WAAY,CACRoE,OAAQN,EAAa1G,QACrBiH,SAAUN,EAAe3G,SAE7B,OACI,OA/EiBgD,EA+EM,CACnBkE,KAAM,kiBAuCNxC,OAAQ,GACRyC,SAAU,GACVrE,eAAgB,CACZC,MAAO,IAEXqE,MAAO,OACPzG,WAAYuC,KAAKC,SACjBkE,UAAW,CAAEC,UAAW,GAAIC,UAAW,IACvCxC,WAAY,IA9Hb,IAAM/B,KADjB,IAAyBA,GAkIrBiC,MAAO,CACH,eACI,MAAMuC,EAAYjI,KAAK2G,MAAMxB,aACvBnF,KAAKkI,YACPD,EAAUE,aAAeF,EAAUG,aAAeH,EAAUI,YAC5DJ,EAAUI,UAAYJ,EAAUE,aAAeF,EAAUG,gBAIrEtF,QAAS,CACL,WAAWR,GACPtC,KAAKmF,QAAUjE,OAAOoB,GAAO,KAClB,MAAPA,GAA8B,iBAARA,GAClB,UAAWA,IACXtC,KAAKmF,QAAU7C,EAAIkB,MAAQ,OAIvC,cAAc8E,GAAS,GACnB,MAAMC,EAAYvI,KAAKuI,UACvB,IAMIpD,EANA3B,EAAQ+E,EAAU,IACtBvI,KAAKuD,eAAiB,CAClB,YACI,OAAOC,IAIf,IACI,MAAMgF,EAAS,KACX,MAAMC,EAAkBF,EAAU,IAClC,OAAOvI,KAAK8H,UAAUC,UAAUU,IAE9BC,EAAcF,IAASG,KAAK,KAC5BC,EAAwB,IAAML,EAAU,IAAgBM,QAAOC,GAA2B,IAArBA,EAAG,KAAoChF,OAClH,IAAIiF,EAAWH,IACXI,GAAW,EACXC,GAAe,EACnB,GACI9D,EAASoD,EAAU,KAAe,GAC7BS,GAIIC,GAAgBL,KAA2BG,EAC5CE,GAAe,EAEVA,IACLA,GAAe,EACfD,GAAW,GARfA,GAAWV,GAAiBM,IAA0BG,EAW1DA,EAAWpF,KAAKuF,IAAIH,EAAUH,YACxBJ,IAASG,KAAK,OAASD,GAC7B1I,KAAK8H,UAAUE,UAAUO,EAAU,MACnCS,KACI7D,EAAOgE,MACfnJ,KAAKoB,WAAauC,KAAKC,SACvB,MAAOuC,EAAIC,EAAIC,EAAIC,GAAMkC,IACzBxI,KAAKwF,WAAa,CAAC,CAACW,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,IAC7CnB,EAAOgE,OACPnJ,KAAK6H,MAAQ,QAEE,SAAf7H,KAAK6H,QACL7H,KAAKwF,WAAa,IAG1B,MAAOlD,GACHtC,KAAKoJ,WAAW9G,GAChBtC,KAAK6H,MAAQ,OACb7H,KAAKwF,WAAa,KAG1B,qBACIxF,KAAK6H,MAAQ,OACb,MAAMU,EAAYvI,KAAKuI,UACvB,IAMIpD,EANA3B,EAAQxD,KAAKuI,UAAU,IAC3BvI,KAAKuD,eAAiB,CAClB,YACI,OAAOC,IAIf,MAAMgF,EAAS,KACX,MAAMC,EAAkBF,EAAU,IAClC,OAAOvI,KAAK8H,UAAUC,UAAUU,IAEpC,IAAIY,EAAUb,IAASG,KAAK,IAC5B,IACI,EAAG,CAEC,GADAxD,EAASoD,EAAU,KAAe,GAC9BC,IAASG,KAAK,MAAQU,IAAYrJ,KAAK8H,UAAUE,UAAUO,EAAU,KAAgB,CACrF,IAAI/E,EAAQ+E,EAAU,IACtBvI,KAAKuD,eAAiB,CAClB,YACI,OAAOC,IAGfxD,KAAKoB,WAAauC,KAAKC,SACvB,MAAOuC,EAAIC,EAAIC,EAAIC,GAAMkC,IACzBxI,KAAKwF,WAAa,CAAC,CAACW,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,UAC3C,IAAIgD,SAAQC,GAAKC,WAAWD,EAAG,OAEzCF,EAAUb,IAASG,KAAK,UACJ,SAAf3I,KAAK6H,QAAqB1C,EAAOgE,MAC1C,GAAmB,WAAfnJ,KAAK6H,MAAoB,CACzB,MAAO1B,EAAIC,EAAIC,EAAIC,GAAMkC,IACzBxI,KAAKwF,WAAa,CAAC,CAACW,EAAK,EAAGC,EAAK,EAAGC,EAAK,EAAGC,EAAK,IAEjDnB,EAAOgE,OACPnJ,KAAK6H,MAAQ,QAEE,SAAf7H,KAAK6H,QACL7H,KAAKwF,WAAa,IAG1B,MAAOlD,GACHtC,KAAKoJ,WAAW9G,GAChBtC,KAAK6H,MAAQ,OACb7H,KAAKwF,WAAa,KAG1B,MAOI,IAAIiE,EAAaC,EAAU5B,EAC3B,KACK2B,EAAaC,EAAU5B,GAAaZ,EAAMyC,QAAQ3J,KAAK2H,KAAM,CAAEpB,OAAO,IAE3E,MAAOjE,GAEH,YADAtC,KAAKoJ,WAAW9G,GAGpBtC,KAAK8H,UAAYA,EACjB9H,KAAK4J,QAAUH,EACfzJ,KAAKuI,UAAYrB,EAAM2C,aAAaJ,EAAaC,EAAU,EAAGrC,EAAgB,CAAC,CAAEyC,MAblEC,IACX/J,KAAKmF,QAAU1D,KAAKC,UAAUqI,OAAKvI,EAAW,GAAK,MAYiCwI,MAhBzED,IACX/J,KAAKmF,OAAS,IAe6E8E,UAAW,YAASzI,EAAW,IAAI,IAAM,IAAMxB,KAAKkK,SAAShD,EAAMyC,SAClK3J,KAAKmK,gBAET,cAOI,IAAIV,EAAaC,EAAU5B,EAC3B,KACK2B,EAAaC,EAAU5B,GAAaZ,EAAMyC,QAAQ3J,KAAK2H,KAAM,CAAEpB,OAAO,IAE3E,MAAOjE,GAEH,YADAtC,KAAKoJ,WAAW9G,GAGpBtC,KAAK8H,UAAYA,EACjB9H,KAAK4J,QAAUH,EACfzJ,KAAKuI,UAAYrB,EAAM2C,aAAaJ,EAAaC,EAAU,EAAGrC,EAAgB,CAAC,CAAEyC,MAblEC,IACX/J,KAAKmF,QAAU1D,KAAKC,UAAUqI,OAAKvI,EAAW,GAAK,MAYiCwI,MAhBzED,IACX/J,KAAKmF,OAAS,IAe6E8E,UAAW,YAASzI,EAAW,IAAI,IAAM,IAAMxB,KAAKkK,SAAShD,EAAMyC,SAClK3J,KAAKkK,SAET,QACIlK,KAAK6H,MAAQ,SAEb,IAAIrE,EAAQxD,KAAKuI,UAAU,IAC3BvI,KAAKuD,eAAiB,CAClB,YACI,OAAOC,IAGfxD,KAAKoB,WAAauC,KAAKC,UAE3B,SACI5D,KAAKmK,gBAET,OACInK,KAAKwF,WAAa,GAClBxF,KAAK6H,MAAQ,QAEjB,UACI,MAAMF,EAAO3H,KAAK4H,SAElB,IAAI6B,EAAaC,EADjB1J,KAAK4H,SAAW,GAEhB5H,KAAKmF,QAAU,KAAOwC,EAAO,KAC7B,KACK8B,EAAaC,GAAYxC,EAAMyC,QAAQhC,EAAM,CAAEyC,UAAU,IAE9D,MAAO9H,GAEH,YADAtC,KAAKoJ,WAAW9G,GAGpB,IACI,MAAM6C,EAAS+B,EAAMmD,IAAIZ,EAAaC,EAAU,EAAGrC,EAAgB,IAAIrH,KAAKuI,UAAU,KACtFvI,KAAKmF,QAAUA,EAAS,KAE5B,MAAO7C,GACHtC,KAAKoJ,WAAW9G,S,kCC9UhC,IAAIoC,EAAmB1E,MAAQA,KAAK0E,kBAAqBvE,OAAOwE,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EvD,IAAPuD,IAAkBA,EAAKD,GAC3B3E,OAAOC,eAAewE,EAAGG,EAAI,CAAEC,YAAY,EAAMV,IAAK,WAAa,OAAOO,EAAEC,OAC3E,SAAUF,EAAGC,EAAGC,EAAGC,QACTvD,IAAPuD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,KAEVG,EAAsBjF,MAAQA,KAAKiF,qBAAwB9E,OAAOwE,OAAS,SAAUC,EAAGJ,GACxFrE,OAAOC,eAAewE,EAAG,UAAW,CAAEI,YAAY,EAAM1E,MAAOkE,KAC9D,SAASI,EAAGJ,GACbI,EAAW,QAAIJ,IAEfU,EAAgBlF,MAAQA,KAAKkF,cAAiB,SAAUjF,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIkF,EAAS,GACb,GAAW,MAAPlF,EAAa,IAAK,IAAI6E,KAAK7E,EAAe,YAAN6E,GAAmB3E,OAAO0C,UAAUuC,eAAeC,KAAKpF,EAAK6E,IAAIJ,EAAgBS,EAAQlF,EAAK6E,GAEtI,OADAG,EAAmBE,EAAQlF,GACpBkF,GAEXhF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsJ,QAAUtJ,EAAQiK,cAAgBjK,EAAQkK,cAAgBlK,EAAQmK,oBAAiB,EAC3F,MAAMC,EAAKvF,EAAa,EAAQ,OAChC7E,EAAQmK,eAAiB,WAIzBnK,EAAQkK,cAHeG,GACC,iBAANA,IAAwB,EAAJA,KAAWA,GAAwC,IAAhCA,EAAIrK,EAAQmK,gBAGrE,MAAMG,EAASC,IACX,MAAM,IAAIC,MAAMD,IAEpB,SAASE,EAAYC,EAAMC,EAAWC,GAClC,IAAIC,EAASF,EAAU1G,IAAIyG,IAAOA,KAClC,UAAkBvJ,IAAX0J,GAAsB,CACzB,GAAID,EAAUC,GACV,OAAOA,EAEXA,EAASF,EAAU1G,IAAI4G,IAASH,MAgCxC,SAASI,EAAgBJ,GACrB,GAAIN,EAAGW,aAAaL,GAChB,MAAO,CAACA,GAEZ,GAAIN,EAAGY,sBAAsBN,GAAO,CAChC,MAAMO,EAAIP,EACV,IAAIQ,EAAO,GACX,IAAK,MAAMC,KAAMF,EAAEG,SACXhB,EAAGW,aAAaI,IAChBD,EAAKrJ,KAAKsJ,IAEVf,EAAGiB,uBAAuBF,IAAOf,EAAGY,sBAAsBG,MAC1DD,EAAO,IAAIA,KAASJ,EAAgBK,KAG5C,OAAOD,EAEX,GAAId,EAAGiB,uBAAuBX,GAAO,CACjC,MAAMO,EAAIP,EACV,IAAIQ,EAAO,GACX,IAAK,MAAMC,KAAMF,EAAEG,SAEXhB,EAAGW,aAAaI,EAAG7K,YACKa,IAApBgK,EAAGG,cACHJ,EAAKrJ,KAAKsJ,EAAG7K,MAGjB6K,EAAGG,eACClB,EAAGW,aAAaI,EAAG7K,OACnB4K,EAAKrJ,KAAKsJ,EAAG7K,OAEb8J,EAAGiB,uBAAuBF,EAAG7K,OAAS8J,EAAGY,sBAAsBG,EAAG7K,SAClE4K,EAAO,IAAIA,KAASJ,EAAgBK,EAAG7K,SAInD,OAAO4K,EAEX,MAAO,GAEX,SAASK,EAAuBb,EAAMC,EAAWa,EAAWC,IACxD,SAASC,EAAahB,GAKlB,OAvDR,SAAqBA,GACjB,OAAON,EAAGuB,aAAajB,IAClBN,EAAGwB,eAAelB,KACXN,EAAGyB,2BAA2BnB,KAC9BN,EAAG0B,gCAAgCpB,KACnCN,EAAG2B,kBAAkBrB,KACrBN,EAAG4B,4BAA4BtB,KAC/BN,EAAG6B,WAAWvB,GA4ClBwB,CAAYxB,KACZc,EAAUW,IAAIzB,GACde,EAAOzH,IAAI0G,EAAM,IAAI0B,MAEjB1B,EAAK2B,MACT,KAAKjC,EAAGkC,WAAWC,MACf,IAAIC,EAAO7B,EAAU1G,IAAIyG,GACzB,GAAI8B,GACgB,SAAbA,EAAK9K,MACJ0I,EAAGqC,yBAAyBD,EAAK9B,OACjCN,EAAGsC,sBAAsBF,EAAK9B,OAC9BN,EAAGuC,qBAAqBH,EAAK9B,OAC7BN,EAAGwC,gBAAgBJ,EAAK9B,OACxBN,EAAGyC,oBAAoBL,EAAK9B,OAC5BN,EAAG0C,WAAWN,EAAK9B,OACvB,MAER,KAAKN,EAAGkC,WAAWS,aACnB,KAAK3C,EAAGkC,WAAWU,eACnB,KAAK5C,EAAGkC,WAAWW,gBACnB,KAAK7C,EAAGkC,WAAWY,UACfzB,EAAOzH,IAAI0G,EAAM,IAAI0B,KAE7B1B,EAAKyC,aAAazB,GAEtBA,CAAahB,GAuGjB,SAAS0C,EAAOC,GACZ,GAAmB,IAAfA,EAAI5J,OACJ,MAAM,IAAI+G,MAAM,eAEpB,OAAO6C,EAAI,GAEf,SAASpD,EAAcoC,GACnB,IAAI/L,EAAO8J,EAAGkC,WAAWD,GACzB,GAAI/L,EAAKgN,MAAM,gBACX,IAAK,IAAK7I,EAAGN,KAAMrE,OAAO2B,QAAQ2I,EAAGkC,YACjC,GAAInI,IAAMkI,GAAQ5H,IAAMnE,EACpB,OAAOmE,EAInB,OAAOnE,EAGX,SAASiN,EAAGA,EAAI9J,EAAS,EAAG+J,EAAU,IAClC,MAAO,CACHD,KACA9J,SACA+J,UACApK,KAAM,GACNqK,UAAU,EACVC,QAAS,GAGjB,SAASC,EAAqBjD,EAAMe,GAChC,MAAMmC,EAAYnC,EAAOxH,IAAIyG,GAC7B,OAAOmD,EAAc,IAAID,GAAW9K,KAAI,EAAExC,EAAMG,KAAU,CACtD8M,EAAG,EAAiB,EAAG,CAACjN,IACxBiN,EAAG,EAAiB,EAAG,CAAC9M,EAAKA,UAC9BqN,OAAOC,OAAO,CACbR,EAAG,EAAiB,EAAG,CAACK,EAAUI,UAG1C,SAASC,EAAmBvD,EAAMe,GAC9B,MAAM3G,EAAS,IACR6I,EAAqBjD,EAAMe,GAC9B8B,EAAG,KAEP,GAAIzI,EAAOrB,QAAU,EACjB,MAAM,IAAI+G,MAAM,iCAEpB,OAAOqD,EAAc/I,GAEzB,SAASoJ,EAAmBxD,GACxB,OAAOmD,EAAc,CACjBN,EAAG,MAhCXvN,EAAQiK,cAAgBA,EAmCxB,MAAMkE,EAAU,IAAI/B,IACdgC,EAAc,IAAIhC,IAClByB,EAAiBQ,IACnB,IAAK,IAAId,KAAMc,EACXd,EAAGE,UAAW,EAElB,OAAOY,GAELC,EAAgBf,IAClBA,EAAGE,UAAW,EACPF,GAEX,SAASgB,EAAgB7D,EAAMe,EAAQd,EAAWa,GAAW,QAAEgD,GAAU,EAAK,SAAEC,GAAW,EAAK,WAAEC,GAAa,GAAU,IACrH,IAulCIC,EAvlCAC,EAAuB,GAC3B,SAASC,EAAanE,GAClB,OAAIN,EAAG0E,0BAA0BpE,GACtBA,EAAKqE,WAGLrE,EAGf,SAASsE,EAAatE,EAAMuE,GACxB,MAAMC,EAcV,SAAuBxE,EAAMuE,GACzB,MAAME,EAAUN,EAAanE,GAC7B,GAAIyE,EAAQ9C,OAASjC,EAAGkC,WAAW8C,YAC/B,MAAO,CACH7B,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,YAGhC,GAAInD,EAAGW,aAAaoE,GAChB,MAAO,CACH5B,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC4B,EAAQ7H,QAGxC,GAAI8C,EAAGiF,2BAA2BF,IAAY/E,EAAGW,aAAaoE,EAAQ7O,MAClE,MAAO,IACAgP,EAASH,EAAQJ,WAAYE,GAChC1B,EAAG,EAAiB,EAAG,CAAC4B,EAAQ7O,KAAKgH,QAG7C,GAAI8C,EAAGmF,0BAA0BJ,GAC7B,MAAO,IACAG,EAASH,EAAQJ,WAAYE,MAC7BK,EAASH,EAAQK,mBAAoBP,IAGhD,MAAM,IAAIzE,MAAM,4BAA8BP,EAAckF,EAAQ9C,OAxCxDoD,CAAc/E,EAAMuE,GAChC,GAAIT,EACA,IAAK,MAAMjB,KAAM2B,GACI,MAAb3B,EAAGmC,QACAnC,EAAGmC,OAAOC,IAAMpC,EAAGmC,OAAOE,MAAQlF,EAAKiF,IAAMjF,EAAKmF,cACrDtC,EAAGmC,OAAS,CACRE,MAAOlF,EAAKmF,WACZF,IAAKjF,EAAKiF,MAK1B,OAAOT,EA8BX,SAASI,EAAS5E,EAAMuE,GACpB,MAAMC,EAcV,SAAmBxE,EAAMuE,GACrB,OAAQvE,EAAK2B,MACT,KAAKjC,EAAGkC,WAAWwD,YACf,MAAO,CAACvC,EAAG,EAAiB,EAAG,EAAC,KACpC,KAAKnD,EAAGkC,WAAWyD,aACf,MAAO,CAACxC,EAAG,EAAiB,EAAG,EAAC,KACpC,KAAKnD,EAAGkC,WAAW0D,YACf,MAAO,CAACzC,EAAG,IACf,KAAKnD,EAAGkC,WAAW2D,eACf,MAAO,CAAC1C,EAAG,EAAa,IAC5B,KAAKnD,EAAGkC,WAAW8C,YACf,MAAO,CACH7B,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,WACxBA,EAAG,KAGf,GAAInD,EAAGW,aAAaL,IAAuB,cAAdA,EAAKpD,KAC9B,MAAO,CAACiG,EAAG,IAEf,GAAInD,EAAG8F,0BAA0BxF,GAAO,CACpC,MAAM2D,EAAM,GACZ,IAAK,IAAI8B,KAAezF,EAAK0F,aAAc,CACvC,IAAKhG,EAAGW,aAAaoF,EAAY7P,MAC7B,MAAM,IAAIkK,MAAM,2BAEhB2F,EAAYE,aACZhC,EAAIxM,QAAQmN,EAAamB,EAAY7P,KAAM2O,IAC3CZ,EAAIxM,QAAQyN,EAASa,EAAYE,YAAapB,IAC9CZ,EAAIxM,KAAK0L,EAAG,KACZc,EAAIxM,KAAK0L,EAAG,KACR7C,EAAK4F,MAAQlG,EAAGmG,UAAUC,OAC1BnC,EAAIxM,QAAQgM,EAAc,IACnBmB,EAAamB,EAAY7P,KAAM2O,GAClC1B,EAAG,IACHA,EAAG,IACHA,EAAG,QAIN7C,EAAK4F,MAAQlG,EAAGmG,UAAUE,KAE/BpC,EAAIxM,QAAQmN,EAAamB,EAAY7P,KAAM2O,GAAO1B,EAAG,IAAiBA,EAAG,IAAeA,EAAG,KAOnG,OAAOc,EAEX,GAAIjE,EAAGsG,oBAAoBhG,GACvB,OAAO4E,EAAS5E,EAAKiG,gBAAiB1B,GAE1C,GAAI7E,EAAGwG,gBAAgBlG,GACnB,MAAO,CAAC6C,EAAG,EAAiB,EAAG,CAAC7C,EAAKpD,QAEzC,GAAI8C,EAAGyG,sBAAsBnG,GACzB,OAAW,EAAPuE,KAAgC,EAAPA,GAClB,IACAK,EAAS5E,EAAKqE,WAAYE,GAC7B1B,EAAG,IACHA,EAAG,KAIA,IACA+B,EAAS5E,EAAKqE,WAAYE,GAC7B1B,EAAG,KAIf,GAAInD,EAAG0G,iBAAiBpG,GACpB,MAAO,CAAC6C,EAAG,EAAiB,EAAG,CAACvM,OAAO0J,EAAKpD,SAEhD,GAAI8C,EAAGwC,gBAAgBlC,GACnB,MAAO,CACH6C,EAAG,EAAiB,EAAG,CAAC,KACxBA,EAAG,EAAoB,EAAG,CAAC7C,IAC3B6C,EAAG,EAA0B,EAAG,CAAC7C,IACjC6C,EAAG,KAGX,GAAInD,EAAG2G,wBAAwBrG,GAAO,CAClC,MAAMsG,EAAY1B,EAAS5E,EAAKsG,UAAW/B,GACrCgC,EAAW,CAAC1D,EAAG,EAAa,MAAO+B,EAAS5E,EAAKwG,SAAUjC,IAC3DkC,EAAW,CAAC5D,EAAG,EAAa,MAAO+B,EAAS5E,EAAK0G,UAAWnC,IAC5DU,EAAM,CAACpC,EAAG,EAAa,IAC7B,MAAO,CACHA,EAAG,EAAoB,EAAG,CAACH,EAAO+D,QAC/BH,EACHzD,EAAG,MACA0D,EACH1D,EAAG,EAAoB,EAAG,CAACH,EAAOuC,KAClCpC,EAAG,MACA4D,KACAxB,GAGX,GAAIvF,EAAGuC,qBAAqBjC,GACxB,MAAO,CACH6C,EAAG,EAAiB,EAAG,CAAC7C,EAAKpK,MAAMgH,MAAQ,KAC3CiG,EAAG,EAAoB,EAAG,CAAC7C,IAC3B6C,EAAG,EAA0B,EAAG,CAAC7C,IACjC6C,EAAG,KAIX,GAAInD,EAAGsC,sBAAsBhC,GAEzB,OADAkE,EAAqB/M,KAAK6I,GACnB,GAEX,GAAIN,EAAGiH,QAAQ3G,GAAO,CAElB,OADsBe,EAAOxH,IAAIyG,IAAOsD,MAAQ,GAC5B,EACT,IACAC,EAAmBvD,EAAMe,MACzBf,EAAK4G,WAAWxO,KAAIyO,GAAKjC,EAASiC,EAAGtC,KAAOnB,UAC5CI,KAIA,CACHX,EAAG,EAAa,MACb7C,EAAK4G,WAAWxO,KAAIyO,GAAKjC,EAASiC,EAAGtC,KAAOnB,QAI3D,GAAI1D,EAAGW,aAAaL,GAChB,MAAO,CACH6C,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC7C,EAAKpD,OAC7BiG,EAAG,KAGX,GAAInD,EAAGoH,kBAAkB9G,GACrB,YAAwBvJ,IAApBuJ,EAAKqE,WACE,IACAO,EAAS5E,EAAKqE,WAAYE,GACI1B,EAAzB,EAAP0B,EAAmC,GAAuC,KAIxE,CACH1B,EAAG,GAC8BA,EAAzB,EAAP0B,EAAmC,GAAuC,KAIvF,GAAI7E,EAAGqH,wBAAwB/G,GAAO,CAClC,GAAIN,EAAG0G,iBAAiBpG,EAAKgH,SAAU,CACnC,GAAIhH,EAAKiH,WAAavH,EAAGkC,WAAWsF,WAChC,MAAO,CACHrE,EAAG,EAAiB,EAAG,EAAEvM,OAAO0J,EAAKgH,QAAQpK,SAGhD,GAAIoD,EAAKiH,WAAavH,EAAGkC,WAAWuF,UACrC,MAAO,CACHtE,EAAG,EAAiB,EAAG,EAAEvM,OAAO0J,EAAKgH,QAAQpK,SAKzD,OAAQoD,EAAKiH,UACT,KAAKvH,EAAGkC,WAAWwF,cACf,MAAO,IACA9C,EAAatE,EAAKgH,QAASzC,GAC9B1B,EAAG,KAEX,KAAKnD,EAAGkC,WAAWyF,gBACf,MAAO,IACA/C,EAAatE,EAAKgH,QAASzC,GAC9B1B,EAAG,KAEX,QACoB7C,EAAKiH,SAG7B,MAAMK,EAAO1C,EAAS5E,EAAKgH,QAASzC,GACpC,OAAQvE,EAAKiH,UACT,KAAKvH,EAAGkC,WAAWuF,UACf,MAAO,IAAIG,EAAMzE,EAAG,KACxB,KAAKnD,EAAGkC,WAAWsF,WACf,MAAO,IAAII,EAAMzE,EAAG,KACxB,KAAKnD,EAAGkC,WAAW2F,iBACf,MAAO,IAAID,EAAMzE,EAAG,KACxB,KAAKnD,EAAGkC,WAAW4F,WACf,MAAO,IAAIF,EAAMzE,EAAG,KACxB,QACI,MAAM,IAAI/C,MAAM,wBAA0BJ,EAAGkC,WAAW5B,EAAKiH,YAGzE,GAAIvH,EAAG+H,iBAAiBzH,GAAO,CAC3B,MAAM0H,EAAOvD,EAAanE,EAAKqE,YACzBsD,EAAO3H,EAAK4H,UAAUxP,KAAIuH,GAAKiF,EAASjF,EAAG4E,KAAOnB,OACxD,GAAI1D,EAAGmF,0BAA0B6C,IAAShI,EAAGiF,2BAA2B+C,IAAShI,EAAGW,aAAaqH,GAAO,CACpG,MAAMG,EAAUvD,EAAaoD,EAAMnD,GAC7BuD,EAASpI,EAAGW,aAAaqH,IAAuB,SAAdA,EAAK9K,KAC7C,MAAO,IACAiL,KACAF,EACH9E,EAAG,EAAiB,EAAG,CAAC7C,EAAK4H,UAAU7O,SAC9B8J,EAATiF,EAAY,GAA0B,KAK1C,MAAO,IADWlD,EAAS8C,EAAMnD,MAG1BoD,EACH9E,EAAG,EAAiB,EAAG,CAAC7C,EAAK4H,UAAU7O,SACvC8J,EAAG,KAIf,GAAInD,EAAGqI,gBAAgB/H,GAAO,CAC1B,MAAM0H,EAAOvD,EAAanE,EAAKqE,YACzBsD,EAAO3H,EAAK4H,WAAWxP,KAAIuH,GAAKiF,EAASjF,EAAG4E,KAAOnB,QAAU,GAEnE,MAAO,IADWwB,EAAS8C,EAAMnD,MAG1BoD,EACH9E,EAAG,EAAiB,EAAG,CAAC7C,EAAK4H,WAAW7O,QAAU,IAClD8J,EAAG,KAGX,GAAInD,EAAGsI,yBAAyBhI,GAAO,CACnC,MAAMwE,EAAM,CACR3B,EAAG,KAEDrC,EAAOR,EAAKU,SAClB,IAAK,IAAKuH,EAAOxH,KAAOD,EAAKzJ,UAAW,CACpC,GAAI2I,EAAGwI,gBAAgBzH,GACnB,MAAM,IAAIX,MAAM,yBAEhBW,EAAGkB,OAASjC,EAAGkC,WAAWuG,oBAC1B3D,EAAIrN,KAAK0L,EAAG,EAAiB,EAAG,CAACoF,KACjCzD,EAAIrN,QAAQyN,EAASnE,EAAI8D,IACzBC,EAAIrN,KAAK0L,EAAG,MAGpB,OAAO2B,EAEX,GAAI9E,EAAG0I,0BAA0BpI,GAAO,CACpC,MAAMwE,EAAM,CACR3B,EAAG,KAEDrC,EAAOR,EAAKqI,WAClB,IAAK,IAAIC,KAAQ9H,EACb,GAAId,EAAG6I,8BAA8BD,GACjC9D,EAAIrN,KAAK0L,EAAG,EAAiB,EAAG,CAACyF,EAAK1S,KAAKgH,QAC3C4H,EAAIrN,QAAQyN,EAAS0D,EAAK1S,KAAM2O,IAChCC,EAAIrN,KAAK0L,EAAG,SAEX,CACD,IAAKyF,EAAK1S,KACN,MAAM,IAAIkK,MAAM,2BAEpB,GAAIJ,EAAG8I,uBAAuBF,EAAK1S,MAC/B4O,EAAIrN,QAAQyN,EAAS0D,EAAK1S,KAAKyO,WAAYE,SAE1C,GAAI7E,EAAGW,aAAaiI,EAAK1S,MAC1B4O,EAAIrN,KAAK0L,EAAG,EAAiB,EAAG,CAACyF,EAAK1S,KAAKgH,YAE1C,KAAI8C,EAAGwG,gBAAgBoC,EAAK1S,QAC1B8J,EAAG0G,iBAAiBkC,EAAK1S,MAI5B,MAAM,IAAIkK,MAAM,iBAHhB0E,EAAIrN,QAAQyN,EAAS0D,EAAK1S,KAAM2O,IAKpC,GAAI7E,EAAGyC,oBAAoBmG,GACvB9D,EAAIrN,KAAK0L,EAAG,KACZ2B,EAAIrN,KAAK0L,EAAG,EAAoB,EAAG,CAACyF,KACpC9D,EAAIrN,KAAK0L,EAAG,EAA0B,EAAG,CAACyF,KAC1C9D,EAAIrN,KAAK0L,EAAG,KACZ2B,EAAIrN,KAAK0L,EAAG,SAEX,KAAInD,EAAG+I,qBAAqBH,GAK7B,MAAM,IAAIxI,MAAM,iBAJhB0E,EAAIrN,QAAQyN,EAAS0D,EAAK3C,YAAapB,IACvCC,EAAIrN,KAAK0L,EAAG,MAOxB,OAAO2B,EAEX,GAAI9E,EAAGgJ,2BAA2B1I,GAAO,CACrC,MAAMgF,EAAShF,EAAKpD,KAAK+L,QAAQ,kBAAmB,MAC9C/C,EAAQ5F,EAAKpD,KAAK+L,QAAQ,kBAAmB,MACnD,MAAO,CACH9F,EAAG,EAAiB,EAAG,CAACmC,IACxBnC,EAAG,EAAiB,EAAG,CAAC+C,IACxB/C,EAAG,KAGX,GAAInD,EAAGkJ,eAAe5I,GAAO,CACzB,MAAM6I,EAAShG,EAAG,EAAa,GAC/BY,EAAQnK,IAAI0G,EAAM6I,GAClB,MAAMC,EAAajG,EAAG,EAAa,GACnCa,EAAYpK,IAAI0G,EAAM8I,GACtB,IAAInD,EAAc3F,EAAK2F,YACnBW,EAAYtG,EAAKsG,UACjByC,EAAc/I,EAAK+I,YACnBC,EAAWjI,EAAO3H,IAAI4G,IAASe,EAAOxH,IAAIyG,GAAMsD,KAAO,EAQ3D,IAAI2F,EAASD,EACPzF,EAAmBvD,EAAMe,GACzB,CAAC8B,EAAG,EAAa,IACnBqG,EAASvD,EACPjG,EAAG8F,0BAA0BG,GACzBf,EAASe,EAAapB,GACtB,IACKK,EAASe,EAAapB,GACzB1B,EAAG,KAET,CAACA,EAAG,EAAa,IACnBsG,EAAOH,EACLxF,IACA,CAACX,EAAG,EAAa,IACnBuG,EAAa9C,EACX,CACEzD,EAAG,EAAoB,EAAG,CAACH,EAAOyG,QAC/BvE,EAAS0B,EAAW/B,GACvB1B,EAAG,IAEL,CACEA,EAAG,EAAa,IAEpBwG,EAAU,GACd,GAAIL,GAAYtJ,EAAG8F,0BAA0BG,GAAc,CACvD,IAAK,IAAI2C,KAAQ3C,EAAYD,aAAc,CACvC,IAAKhG,EAAGW,aAAaiI,EAAK1S,MACtB,MAAM,IAAIkK,MAAM,eAEpBuJ,EAAQlS,KAAK0L,EAAG,EAAiB,EAAG,CAACyF,EAAK1S,KAAKgH,OAAQiG,EAAG,IAAqBA,EAAG,EAAiB,EAAG,CAACyF,EAAK1S,KAAKgH,OAAQiG,EAAG,IAAeA,EAAG,EAAiB,EAAG,CAAC,GAAkB8C,EAAYC,MAAQlG,EAAGmG,UAAUC,MAAS,EAAiB,MAEpPuD,EAAQlS,KAAK0L,EAAG,EAAiB,EAAG,CAAC8C,EAAYD,aAAa3M,YAAayK,OAA6BD,EAAmBvD,EAAMe,GAAS8B,EAAG,IAAqBA,EAAG,KACrK,IAAK,IAAIyF,KAAQ3C,EAAYD,aACzB,IAAKhG,EAAGW,aAAaiI,EAAK1S,MACtB,MAAM,IAAIkK,MAAM,eAI5B,IAAIwJ,EAAUP,EACR,IACKnE,EAASmE,EAAaxE,GACzB1B,EAAG,IACHA,EAAG,EAAoB,EAAG,CAACH,EAAO0G,KAClCvG,EAAG,IAEL,CACEA,EAAG,EAAoB,EAAG,CAACH,EAAO0G,KAClCvG,EAAG,IAEP0G,EAAO3E,EAAS5E,EAAKwJ,UAAWjF,GACpC,MAAO,IACApB,EAAc8F,MACdC,KACAE,KACAG,EACHT,KACG3F,EAAckG,MACdC,KACAH,EACHN,GAGR,GAAInJ,EAAG+J,cAAczJ,GAAO,CAOxB,MAAMmJ,EAAO,CACTtG,EAAG,EAAa,IAEd2D,EAAW,CACb3D,EAAG,EAAa,MACb+B,EAAS5E,EAAK0J,cAAenF,GAChC1B,EAAG,EAAoB,EAAG,CAACH,EAAOyG,KAClCtG,EAAG,IAED8G,EAAY,CACd9G,EAAG,EAAa,WACWpM,IAAvBuJ,EAAK4J,cAA8BhF,EAAS5E,EAAK4J,cAAerF,GAAQ,IAOhF,MAAO,IALW,CACd1B,EAAG,EAAoB,EAAG,CAACH,EAAOiH,QAC/B/E,EAAS5E,EAAKqE,WAAYE,GAC7B1B,EAAG,OAEkB2D,KAAamD,KAAcR,GAGxD,GAAIzJ,EAAGmK,mBAAmB7J,GACtB,OAAQA,EAAK8J,cAAcnI,MACvB,KAAKjC,EAAGkC,WAAWmI,wBACf,MAAMC,EAAOpF,EAAS5E,EAAKgK,KAAMzF,GAC3B0F,EAAQrF,EAAS5E,EAAKiK,MAAO1F,GAC7B4E,EAAO,CAACtG,EAAG,EAAa,IAW9B,MAAO,CACHA,EAAG,EAAoB,EAAG,CAACH,EAAOyG,QAC/Ba,EACHnH,EAAG,IACHA,EAAG,OACAoH,KACAd,GAOnB,GAAIzJ,EAAGmK,mBAAmB7J,GACtB,OAAQA,EAAK8J,cAAcnI,MACvB,KAAKjC,EAAGkC,WAAWsI,YACf,MAAMF,EAAOpF,EAAS5E,EAAKgK,KAAMzF,GAC3B0F,EAAQrF,EAAS5E,EAAKiK,MAAO1F,GAC7B4E,EAAO,CAACtG,EAAG,EAAa,IAW9B,MAAO,CACHA,EAAG,EAAoB,EAAG,CAACH,EAAOyG,QAC/Ba,EACHnH,EAAG,GACHA,EAAG,OACAoH,KACAd,GAMnB,GAAIzJ,EAAGyK,iBAAiBnK,GACpB,MAAO,IACA4E,EAAS5E,EAAKqE,WAAYE,GAC7B1B,EAAG,IACHA,EAAG,IAIX,GAAInD,EAAGmK,mBAAmB7J,GACtB,OAAQA,EAAK8J,cAAcnI,MACvB,KAAKjC,EAAGkC,WAAWwI,WACf,MAAO,IACAxF,EAAS5E,EAAKgK,KAAMzF,GACvB1B,EAAG,OACA+B,EAAS5E,EAAKiK,MAAO1F,IAOxC,GAAI7E,EAAGmK,mBAAmB7J,GAAO,CAC7B,MAAM2B,EAAO3B,EAAK8J,cAAcnI,KAChC,OAAQA,GACJ,KAAKjC,EAAGkC,WAAWyI,gBACnB,KAAK3K,EAAGkC,WAAW0I,iBACnB,KAAK5K,EAAGkC,WAAW2I,iBACnB,KAAK7K,EAAGkC,WAAW4I,oBACnB,KAAK9K,EAAGkC,WAAW6I,YACf,MAAMT,EAAO7F,EAAanE,EAAKgK,MAC/B,OAAItK,EAAGiF,2BAA2BqF,IAC9BtK,EAAGmF,0BAA0BmF,IAC7BtK,EAAGW,aAAa2J,IAChBA,EAAKrI,OAASjC,EAAGkC,WAAW8C,YACrB,IACAJ,EAAatE,EAAKgK,KAAMzF,MACxBK,EAAS5E,EAAKiK,MAAO1F,GACxB1B,EAAGlB,IAASjC,EAAGkC,WAAW6I,YAAc,GACpC9I,IAASjC,EAAGkC,WAAWyI,gBAAkB,GACrC1I,IAASjC,EAAGkC,WAAW0I,iBAAmB,GACtC3I,IAASjC,EAAGkC,WAAW2I,iBAAmB,GACtC5I,IAASjC,EAAGkC,WAAW4I,oBAAsB,GACzC5K,EAAM,oBAIvB,IACAgF,EAASoF,EAAMzF,GAClB1B,EAAG,EAAiB,EAAG,CAAC,yCACxBA,EAAG,MAOvB,GAAInD,EAAGmK,mBAAmB7J,GAAO,CAC7B,MAAM2D,EAAM,IACLiB,EAAS5E,EAAKgK,KAAMzF,MACpBK,EAAS5E,EAAKiK,MAAO1F,IAE5B,OAAQvE,EAAK8J,cAAcnI,MACvB,KAAKjC,EAAGkC,WAAW8I,kBACf/G,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWuF,UACfxD,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWsF,WACfvD,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAW+I,WACfhH,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWgJ,eACfjH,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWiJ,SACflH,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWkJ,iBACfnH,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWmJ,4BACfpH,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWoJ,uCACfrH,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWqJ,uBACftH,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWsJ,cACfvH,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWuJ,sBACfxH,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWwJ,oBACfzH,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWyJ,kBACf1H,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAW0J,wBACf3H,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAW2J,uBACf5H,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAW4J,6BACf7H,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAW6J,UACf9H,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAW8J,cACf/H,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAW+J,WACfhI,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,KAAKnD,EAAGkC,WAAWgK,aACfjI,EAAIxM,KAAK0L,EAAG,KACZ,MACJ,QACI,MAAMgJ,EAAS7L,EAAK8J,cAAcnI,KAClC,MAAM,IAAI7B,MAAM,iBAAmBP,EAAcsM,IAEzD,OAAOlI,EAEX,GAAIjE,EAAGoM,mBAAmB9L,GAAO,CAC7B,MAAM+L,EAAY5H,EAAanE,EAAKqE,YACpC,OAAI3E,EAAGW,aAAa0L,GACT,CACHlJ,EAAG,IACHA,EAAG,EAAiB,EAAG,CAACkJ,EAAUnP,OAClCiG,EAAG,KAIA,IACA+B,EAAS5E,EAAKqE,WAAYE,GAC7B1B,EAAG,KAIf,GAAInD,EAAGsM,yBAAyBhM,GAC5B,OAAQA,EAAKiH,UACT,KAAKvH,EAAGkC,WAAWwF,cACf,MAAO,IACA9C,EAAatE,EAAKgH,QAASzC,GAC9B1B,EAAG,KAEX,KAAKnD,EAAGkC,WAAWyF,gBACf,MAAO,IACA/C,EAAatE,EAAKgH,QAASzC,GAC9B1B,EAAG,KAEX,QACoB7C,EAAKiH,SAGjC,GAAIvH,EAAGiF,2BAA2B3E,IAASN,EAAGmF,0BAA0B7E,GACpE,MAAO,IACAsE,EAAatE,EAAMuE,GACtB1B,EAAG,KAGX,GAAInD,EAAG0E,0BAA0BpE,GAC7B,OAAO4E,EAAS5E,EAAKqE,WAAYE,GAErC,GAAI7E,EAAGuM,oBAAoBjM,GACvB,MAAO,CAAC6C,EAAG,KAEf,GAAInD,EAAGwM,iBAAiBlM,GAAO,CAC3B,MAAM2D,EAAM,GAQZ,OAPAA,EAAIxM,QAAQyN,EAAS5E,EAAKqE,WAAYE,IAC3B,EAAPA,EACAZ,EAAIxM,KAAK0L,EAAG,KAGZc,EAAIxM,KAAK0L,EAAG,KAETc,EAEX,GAAIjE,EAAGyM,eAAenM,GAAO,CAEzB,MAAMoM,EAAgBxH,EAAS5E,EAAKqM,SAAW9H,EAAe,EAAPA,EAAiC,GAClF+H,EAAU,CACZzJ,EAAG,KAID0J,EAAiBvM,EAAKwM,YACtB5H,EAAS5E,EAAKwM,YAAYC,MAAQlI,EAAe,EAAPA,EAAiC,GAC3E,CAAC1B,EAAG,EAAa,IACjB6J,EAAY,CACd7J,EAAG,KAID8J,EAAmB3M,EAAK4M,aACxBhI,EAAS5E,EAAK4M,aAAerI,EAAe,EAAPA,EAAiC,GACtE,CAAC1B,EAAG,EAAa,IACjBgK,EAAc,CAChBhK,EAAG,KAGDiK,EAAU,CAACjK,EAAG,EAAa,IAC3BkK,EAAkB/M,EAAKwM,aAAaQ,qBAAqBpX,KAC/D,GAAImX,GAAmBA,EAAgBpL,OAASjC,EAAGkC,WAAWqL,WAC1D,MAAM,IAAInN,MAAM,sCAepB,MAAO,IAbM,CACT+C,EAAG,EAAoB,EAAG,CAACH,EAAOoK,KAClC9M,EAAKwM,YACC3J,EAAG,EAAoB,EAAG,CAACH,EAAO6J,KAClC1J,EAAG,EAAiB,EAAG,EAAE,IAC/B7C,EAAK4M,aACC/J,EAAG,EAAoB,EAAG,CAACH,EAAOiK,KAClC9J,EAAG,EAAiB,EAAG,EAAE,IAC/B7C,EAAKwM,aAAaQ,oBACZnK,EAAG,EAAiB,EAAG,CAACkK,GAAiBnQ,OACzCiG,EAAG,GACTA,EAAG,QAIAuJ,KACAE,KACAtM,EAAKwM,YACF,IACKD,KACAG,GAEL,MACH1M,EAAK4M,aACF,IACKD,KACAE,GAEL,MACHC,GAGX,GAAIpN,EAAGwN,kBAAkBlN,GAAO,CAC5B,IAAI6I,EAAShG,EAAG,EAAa,GAC7BY,EAAQnK,IAAI0G,EAAM6I,GAClB,MAAMsE,EAAa,CACftK,EAAG,EAAiB,EAAG,CAAC,aACxBA,EAAG,EAAiB,EAAG,CAAC,IACxBA,EAAG,EAAiB,EAAG,CAAC,IACxBA,EAAG,IACHA,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,gBACrB+B,EAAS5E,EAAKqE,WAAYE,GAC7B1B,EAAG,IACHA,EAAG,KAEDuK,EAAS,GACf,IAAK,IAAIC,KAAKrN,EAAKsN,UAAUC,QACzB,GAAI7N,EAAG8N,aAAaH,GAAI,CACpB,MAAMI,EAAO,CACT5K,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,aACxBA,EAAG,OACA+B,EAASyI,EAAEhJ,WAAYE,GAC1B1B,EAAG,KAED0G,EAAO,CACT1G,EAAG,EAAa,MACbwK,EAAEzG,WAAWxO,KAAI2F,GAAM6G,EAAS7G,EAAIwG,KAAOnB,QAElDgK,EAAOjW,KAAK,CACRuW,MAAO7K,EAAG,EAAa,GACvB4K,OACAlE,aAGH,CACD,MAAMA,EAAO8D,EAAEzG,WAAWxO,KAAI2F,GAAM6G,EAAS7G,EAAIwG,KAAOnB,OACxDgK,EAAOjW,KAAK,CACRuW,MAAO7K,EAAG,EAAa,GACvB0G,SAIZ,MAAMoE,EAAe5M,EAAOxH,IAAIyG,EAAKsN,WAAWhK,KAAO,EACjDsK,EAAoBD,EAAepK,EAAmBvD,EAAKsN,UAAWvM,GAAU,GAChF8M,EAAqB,GACrBC,EAAgB,GAChBC,EAAoBlL,EAAG,EAAa,GACpCmL,EAAmBL,EAAenK,EAAmBxD,EAAKsN,WAAa,CAACzK,EAAG,EAAa,IAC9F,IAAK,MAAOoF,EAAOK,KAAS8E,EAAOrW,UAC/B+W,EAAc3W,QAAQmR,EAAKiB,MAE/B,IAAK,MAAOtB,EAAOK,KAAS8E,EAAOrW,UAAW,CAC1C,MAAMkX,EAAcb,EAAOnF,GAAOsB,KAAK,GACvCsE,EAAmB1W,KAAK0L,EAAG,EAAoB,EAAG,CAACoL,KAClC,MAAb3F,EAAKmF,MACLI,EAAmB1W,QAAQmR,EAAKmF,MAChCI,EAAmB1W,KAAK0L,EAAG,KAG3BgL,EAAmB1W,KAAK0L,EAAG,IAE/BiL,EAAc3W,QAAQmR,EAAKiB,MAE/BsE,EAAmB1W,KAAK0L,EAAG,EAAoB,EAAG,CAACkL,KACnDF,EAAmB1W,KAAK0L,EAAG,IAC3B,MAAMqL,EAAa,CACfrL,EAAG,KAEP,MAAO,IACAsK,KACAS,KACAC,KACAC,EACHC,KACGC,KACAE,EACHrF,GAGR,GAAInJ,EAAGyO,iBAAiBnO,IAAuB,MAAdA,EAAKoO,MAAe,CAEjD,IAAIC,EAAkB,EAClBC,EAAa,EACjB,MAAMC,EAASxO,EAAYC,EAAMC,GAAYD,IAIzC,IAHKe,EAAOxH,IAAIyG,IAAOsD,MAAQ,GAAK,GAChCgL,IAEA7K,EAAQrK,IAAI4G,GACZ,OAAO,EAEX,GAAIc,EAAU1H,IAAI4G,GACd,MAAM,IAAIF,MAAM,aAMpB,OAJIJ,EAAGyM,eAAenM,KAClBqO,IACAC,EAAa,IAEV,KAEX,GAAc,MAAVC,EACA,MAAM,IAAIzO,MAAM,4BAEpB,MAAM0O,EAAW/K,EAAQlK,IAAIgV,GAC7B,GAAgB,MAAZC,EACA,MAAM,IAAI1O,MAAM,wBAEpB,GAAwB,IAApBuO,EACA,MAAO,IACA,IAAI3T,MAAM4T,GAAYG,KAAK,GAAGrW,KAAI2F,GAAM8E,EAAG,MAC9CA,EAAG,EAAoB,EAAG,CAAC2L,IAC3B3L,EAAG,IAGN,CACD,MAAM6L,EAAW,CACb7L,EAAG,EAAa,MACb,IAAInI,MAAM4T,GAAYG,KAAK,GAAGrW,KAAI2F,GAAM8E,EAAG,MAC9CA,EAAG,EAAoB,EAAG,CAAC2L,IAC3B3L,EAAG,IAOP,MAAO,IALc,CACjBA,EAAG,EAAiB,EAAG,CAACwL,IACxBxL,EAAG,EAAoB,EAAG,CAAC6L,EAAS,KACpC7L,EAAG,QAIA6L,IAIf,GAAIhP,EAAGiP,oBAAoB3O,IAAuB,MAAdA,EAAKoO,MAAe,CACpD,IAAIE,EAAa,EACjB,MAAMC,EAASxO,EAAYC,EAAMC,GAAYD,KACpCe,EAAOxH,IAAIyG,IAAOsD,MAAQ,GAAK,GAChCgL,MAEA5K,EAAYtK,IAAI4G,KAGhBN,EAAGyM,eAAenM,IAClBJ,EAAM,0CACH,MAEX,GAAc,MAAV2O,EACA,MAAM,IAAIzO,MAAM,+BAEpB,MAAM0O,EAAW9K,EAAYnK,IAAIgV,GACjC,GAAgB,MAAZC,EACA,MAAM,IAAI1O,MAAM,wBAEpB,MAAM8O,EAAkD,KAAnC7N,EAAOxH,IAAIgV,IAASjL,MAAQ,GACjD,MAAO,IACA,IAAI5I,MAAMkU,EAAcN,EAAa,EAAIA,GAAYG,KAAK,GAAGrW,KAAI2F,GAAM8E,EAAG,MAC7EA,EAAG,EAAoB,EAAG,CAAC2L,IAC3B3L,EAAG,IAGX,GAAInD,EAAGmP,iBAAiB7O,GAAO,CAC3B,MAAM6I,EAAShG,EAAG,EAAa,GAC/BY,EAAQnK,IAAI0G,EAAM6I,GAClB,MAAMC,EAAajG,EAAG,EAAa,GACnCa,EAAYpK,IAAI0G,EAAM8I,GACtB,MAAMK,EAAO,CACTtG,EAAG,EAAa,IAEdiM,EAAO,CACTjM,EAAG,EAAoB,EAAG,CAACsG,EAAK,QAC7BvE,EAAS5E,EAAKqE,WAAYE,GAC7B1B,EAAG,IAED0G,EAAO,IACN3E,EAAS5E,EAAKwJ,UAAWjF,GAC5B1B,EAAG,EAAoB,EAAG,CAACiM,EAAK,KAChCjM,EAAG,IAEP,MAAO,CACHiG,KACGgG,KACAvF,KACAJ,EACHN,GAGR,GAAInJ,EAAGqP,cAAc/O,GAAO,CACxB,MAAM6I,EAAShG,EAAG,EAAa,GAC/BY,EAAQnK,IAAI0G,EAAM6I,GAClB,MAAMC,EAAajG,EAAG,EAAa,GACnCa,EAAYpK,IAAI0G,EAAM8I,GACtB,MAAMS,EAAO3E,EAAS5E,EAAKwJ,UAAWjF,GAChCyK,EAAO,CACTnM,EAAG,EAAoB,EAAG,CAAC0G,EAAK,QAC7B3E,EAAS5E,EAAKqE,WAAYE,GAC7B1B,EAAG,IAEP,MAAO,CACHiG,KACGS,KACAyF,EACHnG,GAGR,GAAInJ,EAAGuP,iBAAiBjP,GAAO,CAC3B,MAAM6I,EAAShG,EAAG,EAAa,GAC/BY,EAAQnK,IAAI0G,EAAM6I,GAClB,MAAMC,EAAajG,EAAG,EAAa,GACnCa,EAAYpK,IAAI0G,EAAM8I,GACtB,MAAMoG,EAAcxP,EAAG8F,0BAA0BxF,EAAK2F,cAAiB3F,EAAK2F,YAAYC,MAAQlG,EAAGmG,UAAUsJ,YACvGC,EAAkB1P,EAAG8F,0BAA0BxF,EAAK2F,aACnD3F,EAAK2F,YAAYC,MAAQlG,EAAGmG,UAAUC,MACvC,EACAuJ,EAAe3P,EAAG8F,0BAA0BxF,EAAK2F,aACjDjG,EAAGW,aAAaL,EAAK2F,YAAYD,aAAa,GAAG9P,MAC7CoK,EAAK2F,YAAYD,aAAa,GAAG9P,KAAKgH,KACtCgD,EAAM,oBACV,GACA0P,EAAQ/L,EAAmBvD,EAAMe,GACjCwO,EAAQ/L,IACRgM,EAAS,IACP9P,EAAG8F,0BAA0BxF,EAAK2F,aAC3BrB,EAAatE,EAAK2F,YAAYD,aAAa,GAAG9P,KAAM2O,GAGpDD,EAAatE,EAAK2F,YAAapB,GAGxCuK,EAAO,CACTjM,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,cAEjB+B,EAAS5E,EAAKqE,WAAYE,GAC7B1B,EAAG,IAEPA,EAAG,IACHA,EAAG,KAEDyD,EAAY,CACdzD,EAAG,EAAoB,EAAG,CAAC0M,EAAM,KAGzB1M,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,YAEpBA,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,WACxBA,EAAG,IACHA,EAAG,IAEPA,EAAG,IAEPA,EAAG,IAEPA,EAAG,MACA2M,IAEC3M,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,YACxBA,EAAG,IACHA,EAAG,IAEPA,EAAG,IACHA,EAAG,OACCuM,EACE,IACKI,IACH3M,EAAG,IACHA,EAAG,IACHA,EAAG,KAEL,IAEJ0G,EAAO3E,EAAS5E,EAAKwJ,UAAWjF,GAChCkL,EAAkBP,EAAc,CAClCrM,EAAG,EAAiB,EAAG,CAAC,WACxBA,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,WACxBA,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,IACxBA,EAAG,EAAiB,EAAG,CAACwM,IACxBxM,EAAG,IACHA,EAAG,EAAiB,EAAG,CAACwM,IACxBxM,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,IAExBA,EAAG,EAAiB,EAAG,CAAC,OACrBW,OACAD,EAAmBvD,EAAMe,GAC5B8B,EAAG,IACHA,EAAG,IACHA,EAAG,EAAoB,EAAG,CAACH,EAAO4D,KAClCzD,EAAG,IAED,CACEA,EAAG,EAAiB,EAAG,CAAC,WACxBA,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,WACxBA,EAAG,IACHA,EAAG,EAAiB,EAAG,CAAC,IAExBA,EAAG,EAAiB,EAAG,CAAC,OACrBW,OACAD,EAAmBvD,EAAMe,GAC5B8B,EAAG,IACHA,EAAG,IACHA,EAAG,EAAoB,EAAG,CAACH,EAAO4D,KAClCzD,EAAG,IAEX,MAAO,IACAyM,KACAR,KACAxI,KACAiD,EACHT,KACG2G,KACAF,EACH1G,GAGR,GAAInJ,EAAGgQ,mBAAmB1P,GAAO,CAC7B,MAAM+L,EAAY5H,EAAanE,EAAKqE,YACpC,OAAI3E,EAAGiF,2BAA2BoH,IAAcrM,EAAGmF,0BAA0BkH,GAClE,IACAzH,EAAatE,EAAKqE,WAAYE,GACjC1B,EAAG,KAKA,IACA+B,EAAS5E,EAAKqE,WAAYE,GAC7B1B,EAAG,IACHA,EAAG,EAAiB,EAAG,EAAC,KAIpC,MAAM,IAAI/C,MAAM,gBAAgBP,EAAcS,EAAK2B,SAhiCvCgO,CAAU3P,EAAMuE,GAC5B,GAAIT,EACA,IAAK,MAAMjB,KAAM2B,GACI,MAAb3B,EAAGmC,QACAnC,EAAGmC,OAAOC,IAAMpC,EAAGmC,OAAOE,MAAQlF,EAAKiF,IAAMjF,EAAKmF,cACrDtC,EAAGmC,OAAS,CACRE,MAAOlF,EAAKmF,WACZF,IAAKjF,EAAKiF,MAK1B,OAAOT,EAuhCX,GAAI9E,EAAGuB,aAAajB,GAAO,CAEvBiE,EADmB,IAAIjE,EAAK4G,YACLxO,KAAIyO,GAAKjC,EAASiC,EAAG9C,EAAW,EAAe,KAAIX,OACrEC,OAAOF,EAAc,CAACN,EAAG,GAA2BA,EAAG,YAE3D,GAAiBpM,MAAbuJ,EAAKuJ,MAAqB7J,EAAGiH,QAAQ3G,EAAKuJ,MAAO,CAEtDtF,EADmB,IAAIjE,EAAKuJ,KAAK3C,YACVxO,KAAIyO,GAAKjC,EAASiC,EAAG,KAAIzD,OAC3CC,OAAOF,EAAc,CAACN,EAAG,GAA2BA,EAAG,YAG5DoB,EAAY,IACLW,EAAS5E,EAAKuJ,KAAM,GACvB3F,EAAaf,EAAG,MAGxB,MAAM+M,EAA2B1L,EAAqB9L,KAAImI,GAAK,CAC3DsC,EAAG,IACHA,EAAG,EAAiB,EAAG,CAACtC,EAAE3K,MAAMgH,OAChCiG,EAAG,EAAiB,EAAG,CAACtC,EAAE3K,MAAMgH,OAChCiG,EAAG,EAAoB,EAAG,CAACtC,IAC3BsC,EAAG,EAA0B,EAAG,CAACtC,IACjCsC,EAAG,IACHA,EAAG,IACHA,EAAG,OACJO,OACGsK,EAAQ,GACd,GAAIhO,EAAGuB,aAAajB,GAChB0N,EAAMvW,KAAK0L,EAAG,EAAiB,EAAG,CAAC,SAElC,CACD,IAAK,IAAIyF,IAAQ,IAAItI,EAAK6P,YAAY5W,UAAW,CAC7C,IAAKyG,EAAGW,aAAaiI,EAAK1S,OAAgC,MAAvB0S,EAAKwH,eACpC,MAAM,IAAIhQ,MAAM,mBAEpB4N,EAAMvW,KAAK0L,EAAG,EAAiB,EAAG,CAACyF,EAAK1S,KAAKgH,QAEjD8Q,EAAMvW,KAAK0L,EAAG,EAAiB,EAAG,CAAC7C,EAAK6P,WAAW9W,UAEvD2U,EAAMvW,QAAQ8L,EAAqBjD,EAAMe,IACrCrB,EAAGuB,aAAajB,KAAUgE,EAC1B0J,EAAMvW,KAAK0L,EAAG,EAAiB,EAAG,CAAC,KAGnC6K,EAAMvW,KAAK0L,EAAG,EAA0B,EAAG,CAAC7C,KAEhD0N,EAAMvW,KAAK0L,EAAG,KACdM,EAAcuK,GACd,MAAMqC,EAAU,IACTrC,KACAkC,KACA3L,GAEP,GAAIH,EACA,IAAK,MAAMjB,KAAMkN,GACI,MAAblN,EAAGmC,QACAnC,EAAGmC,OAAOC,IAAMpC,EAAGmC,OAAOE,MAAQlF,EAAKiF,IAAMjF,EAAKgQ,OACrDnN,EAAGmC,OAAS,CACRE,MAAOlF,EAAKgQ,IACZ/K,IAAKjF,EAAKiF,MAK1B,OAAO8K,EAuKXza,EAAQsJ,QApGR,SAAiBqR,GAAK,MAAEC,GAAQ,EAAK,MAAE1U,GAAQ,EAAK,SAAE6D,GAAW,GAAU,IACvE,MAAMY,EAAY,IAAIyB,IAChBX,EAAS,IAAIW,IACbZ,EAAY,IAAIqP,IAChBC,EAAa,IAAI1O,IACjB2O,EAAa3Q,EAAG4Q,iBAAiB,YAAaL,EAAKvQ,EAAG6Q,aAAaC,QAAQ,EAAM9Q,EAAG+Q,WAAWC,IAC/FC,EAAc,IAAIjP,IACxB,CACI,IAAIkP,EAAM,EACNC,EAAM,EACV,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAIlX,OAAS,EAAG+X,IAChCH,EAAYrX,IAAIwX,EAAG,CAACF,EAAKC,IACV,OAAXZ,EAAIa,IACJF,GAAO,EACPC,EAAM,GAGNA,IAKZ,CACI,MAAME,EAAe,CACjBC,mBAAoB,IAAM,CAAC,aAC3BC,cAAe,IAAMvR,EAAG+Q,WAAWC,GACnCQ,iBAAkB,IAAM,IACxBC,0BAA2B,KAAM,EACjCC,sBAAuB,IAAM,WAC7BC,oBAAqB,IAAM,QAC3BC,qBAAuBtZ,GAAQA,EAC/BuZ,cAAe,IAAMlB,GAGnBmB,EADU9R,EAAG+R,cAAc,CAAC,aAAc,GAAIV,GACxBW,wBAAwBrB,GACpD,GAAImB,EAAYzY,OAAS,EAAG,CACxB,MAAM4Y,EAAgBH,EAAYpZ,KAAI2F,GAAM,MAAM4S,EAAYpX,IAAIwE,EAAGmH,QAAQ9M,KAAI0Y,GAAKA,EAAI,KAAIlT,KAAK,OAAS,eAAeG,EAAG6T,QAAQ7T,EAAG8T,gBAAejU,KAAK,QAC7J,MAAM,IAAIkU,YAAYH,KAxgDlC,SAAoB3R,EAAMC,IACtB,SAASe,EAAahB,GAClB,IAAK,IAAKhJ,EAAKyC,KAAMrE,OAAO2B,QAAQiJ,GAChC,GAAY,WAARhJ,EAEJ,GAAI0D,MAAMqX,QAAQtY,GACd,IAAK,IAAI6O,KAAQ7O,EACA,OAAT6O,GAAiC,iBAATA,GAAyC,iBAAbA,EAAK3G,MACzD1B,EAAU3G,IAAIgP,EAAM,CAAEtR,MAAKgJ,cAIxB,OAANvG,GAA2B,iBAANA,GAAmC,iBAAVA,EAAEkI,MACrD1B,EAAU3G,IAAIG,EAAG,CAAEzC,MAAKgJ,SAGhCA,EAAKyC,aAAazB,GAEtBA,CAAahB,GAy/CbgS,CAAW3B,EAAYpQ,GACvBY,EAAuBwP,EAAYpQ,EAAWa,EAAWC,GA16C7D,SAAuBf,EAAMC,EAAWa,EAAWC,IAC/C,SAASC,EAAahB,GAClB,GAAIN,EAAG8F,0BAA0BxF,GAAO,CACpC,MAAMkD,EAAYlD,EAAK0F,aAAatN,KAAI6Z,GAAK7R,EAAgB6R,EAAErc,QAAOwN,OAChE8O,EAAclS,EAAK4F,MAAQlG,EAAGmG,UAAUsJ,YAC9C,IAAI1C,EAOJ,GALIA,EAAQ1M,EAAYC,EAAMC,EAD1BiS,EACqClS,GAAQe,EAAO3H,IAAI4G,GAGnBA,GAAQc,EAAU1H,IAAI4G,SAEjDvJ,IAAVgW,EACA,MAAM,IAAI3M,MAAM,yBAEpB,IAAK,MAAMrG,KAAKyJ,EACZnC,EAAOxH,IAAIkT,GAAOnT,IAAIG,EAAEmD,KAAM,CAC1B7G,KAAMiK,EAAK4F,MAAQlG,EAAGmG,UAAUC,MAAQ,EACpC9F,EAAK4F,MAAQlG,EAAGmG,UAAUE,IAAM,EAC5B,IAYpB,GARIrG,EAAGuP,iBAAiBjP,KACpBe,EAAOxH,IAAIyG,GAAM1G,IAAI,SAA6B,CAC9CvD,KAAM,IAEVgL,EAAOxH,IAAIyG,GAAM1G,IAAI,UAA+B,CAChDvD,KAAM,KAGV2J,EAAGsC,sBAAsBhC,GAAO,CAChC,MAAMmS,EAAWpS,EAAYC,EAAMC,GAAWD,GAAQc,EAAU1H,IAAI4G,KACpE,QAAiBvJ,IAAb0b,EACA,MAAM,IAAIrS,MAAM,yBAEpBiB,EAAOxH,IAAI4Y,GAAU7Y,IAAI0G,EAAKpK,KAAKgH,KAAM,CACrC7G,KAAM,EACNiK,KAAMA,IAGd,GAAIN,EAAGwB,eAAelB,GAClB,IAAK,MAAMS,KAAMT,EAAK6P,WAAY,CAC9B,MAAM3M,EAAY9C,EAAgBK,EAAG7K,MAC/Bwc,EAAQrR,EAAOxH,IAAIyG,GACzB,QAAcvJ,IAAV2b,EACA,MAAM,IAAItS,MAAM,yBAEpB,IAAK,MAAMrG,KAAKyJ,EACZkP,EAAM9Y,IAAIG,EAAEmD,KAAM,CACd7G,KAAM,IAKtBiK,EAAKyC,aAAazB,GAEtBA,CAAahB,GAk3CbqS,CAAchC,EAAYpQ,EAAWa,EAAWC,GAh3CpD,SAAoBf,EAAMC,EAAWc,EAAQqP,IACzC,SAASpP,EAAahB,GAClB,MAAMsI,EAAOvH,EAAOxH,IAAIyG,GACxB,GAAIsI,GAAQA,EAAKhF,KAAO,EAAG,CACvB,MAAMnD,EAASJ,EAAYC,EAAMC,GAAWD,IAASe,EAAOxH,IAAIyG,IAAOsD,MAAQ,GAAK,IAChFnD,GACAiQ,EAAW9W,IAAI6G,EAAQ,IAAIgQ,IAAI,CAACnQ,KAAUoQ,EAAW7W,IAAI4G,IAAW,IAAIgQ,OAGhFnQ,EAAKyC,aAAazB,GAEtBA,CAAahB,GAs2CbsS,CAAWjC,EAAYpQ,EAAWc,EAAQqP,GAC1C,MAAMvR,EAAU,GACV0T,EAAoB,IAAI7Q,IAC9B,IAAK,IAAI4G,KAAQxH,EAAW,CACxB,MAAM0R,EAAY3O,EAAgByE,EAAMvH,EAAQd,EAAWa,EAAW,CAClEgD,QAAStI,EACTuI,SAAWuE,EAAK3G,OAASjC,EAAGkC,WAAW6Q,YAAepT,IAE1DR,EAAQ1H,KAAKqb,GACbD,EAAkBjZ,IAAIgP,EAAMkK,GAEhC,MAAME,EAAY7T,EAAQuE,QAvH9B,SAAmBuP,GACf,IAAI3P,EAAS,EACb,IAAK,IAAI4P,KAAOD,EACZC,EAAI5P,OAASA,EACbA,GAAU4P,EAAI7Z,OAoHlB8Z,CAAUH,GAENxC,GAA2B,oBAAX4C,QAChBC,QAAQC,MAAMN,EAAUta,KAAI2F,IAExB,IAAIyG,EAAM,GAAGzG,EAAGiF,OAAS,GAAK,KAAOjF,EAAGiF,OAASjF,EAAGiF,OAAS,IAAM,IAAMjF,EAAGiF,OAASjF,EAAGiF,UAAU8P,OAAO/U,EAAG8E,OAS5G,OARA2B,GAAOzG,EAAG+E,QAAQ,IACZ/E,EAAG+E,QAAQ,GAAGnB,KACVpC,EAAcxB,EAAG+E,QAAQ,GAAGnB,MAEhCjL,KAAKC,UAAUoH,EAAG+E,QAAQ,IAC5BtH,IACAgJ,GAAO,KAAOzG,EAAGiH,OAAS,IAAI2L,EAAYpX,IAAIwE,EAAGiH,OAAOE,UAAUyL,EAAYpX,IAAIwE,EAAGiH,OAAOC,OAAS,KAElGT,KACR5G,KAAK,SAEZ,MAAMe,EAAW,GACXD,EAAc,GACd1B,EAAY,GACZC,EAAY,GAClB,GAAIzB,EACA,IAAK,IAAIuC,KAAM2U,EAAW,CACtB,MAAMxN,EAAQnH,EAAGiF,OACXiC,EAAMlH,EAAGiF,OAASjF,EAAGhF,OAC3B,IAAK,IAAIkP,EAAQ/C,EAAO+C,EAAQhD,EAAKgD,IACjCjL,EAAUiL,GAAS,IAAI0I,EAAYpX,IAAIwE,EAAGiH,OAAOE,UAAWyL,EAAYpX,IAAIwE,EAAGiH,OAAOC,MACtFhI,EAAUgL,GAASlK,EAAGgF,UACL,KAAVhF,EAAG8E,IACO,KAAV9E,EAAG8E,IACO,IAAV9E,EAAG8E,IACO,KAAV9E,EAAG8E,IACO,KAAV9E,EAAG8E,IACO,IAAV9E,EAAG8E,IACO,IAAV9E,EAAG8E,IACO,IAAV9E,EAAG8E,IACO,IAAV9E,EAAG8E,IACO,KAAV9E,EAAG8E,IACO,IAAV9E,EAAG8E,GAKtB,OA5JJ,SAAsB+P,EAAKK,EAAiBvU,EAAaC,GACrD,IAAK,MAAMkE,KAAM+P,EACb,GAAkB,IAAd/P,EAAG9J,aAGF,GAAkB,IAAd8J,EAAG9J,OACR2F,EAAYvH,KAAK0L,EAAGA,SAEnB,GAAc,IAAVA,EAAGA,GAA2B,CACnC,MAAMqQ,EAAMrQ,EAAGC,QAAQ,GAEvB,GADApE,EAAYvH,KAAK,QACAV,IAAbyc,EAAIvR,KAAoB,CACxB,MAAMwR,EAAUD,EAChBxU,EAAYvH,KAAKuL,EAAOuQ,EAAgB1Z,IAAI4Z,IAAUnQ,YAErD,CACD,MAAMoQ,EAAQF,EACdxU,EAAYvH,KAAKic,EAAMpQ,cAG1B,GAAc,IAAVH,EAAGA,GAAiC,CACzC,MAAMwQ,EAAOxQ,EAAGC,QAAQ,GACxBpE,EAAYvH,KAAK,GACjB,MAAMpB,EAAO,CACT,CAAC2J,EAAGkC,WAAW6Q,YAAa,EAC5B,CAAC/S,EAAGkC,WAAW0R,qBAAsB,EACrC,CAAC5T,EAAGkC,WAAW2R,oBAAqB,EACpC,CAAC7T,EAAGkC,WAAW4R,eAAgB,EAC/B,CAAC9T,EAAGkC,WAAW6R,aAAc,EAC7B,CAAC/T,EAAGkC,WAAW8R,aAAc,EAC7B,CAAChU,EAAGkC,WAAW+R,aAAc,EAC7B,CAACjU,EAAGkC,WAAWgS,mBAAoB,GAEvClV,EAAYvH,KAAKpB,EAAKsd,EAAK1R,YAI3B,OADAjD,EAAYvH,KAAK0L,EAAGA,IACZA,EAAGA,IACP,KAAK,EACD,GAAIvN,EAAQkK,cAAcqD,EAAGC,QAAQ,IACjCpE,EAAYvH,KAAK0L,EAAGC,QAAQ,QAE3B,CACD,MAAM+Q,EAAWlV,EAASmV,QAAQjR,EAAGC,QAAQ,IACzC+Q,GAAY,EACZnV,EAAYvH,KAAK7B,EAAQmK,eAAiBoU,GAG1CnV,EAAYvH,KAAK7B,EAAQmK,eAAkBd,EAASxH,KAAK0L,EAAGC,QAAQ,IAAM,GAGlF,MACJ,QACI,MAAM,IAAIhD,MAAM,aAAa+C,EAAGA,OAsGhDkR,CAAarB,EAAWH,EAAmB7T,EAAaC,GACjD,CAACD,EAAaC,EAAU,CAAE3B,YAAWC,gB,4BC5mDhD7H,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0e,cAAgB1e,EAAQwJ,aAAexJ,EAAQgK,IAAMhK,EAAQsJ,aAAU,EAC/E,MAAMqV,EAAa,EAAQ,MAC3B,IAAIC,EAAa,EAAQ,MACzB9e,OAAOC,eAAeC,EAAS,UAAW,CAAE2E,YAAY,EAAMV,IAAK,WAAc,OAAO2a,EAAWtV,WACnG,MAAMuV,EAAY,EAAQ,MAC1B,IAAIC,EAAY,EAAQ,MACxBhf,OAAOC,eAAeC,EAAS,MAAO,CAAE2E,YAAY,EAAMV,IAAK,WAAc,OAAO6a,EAAU9U,OAC9FlK,OAAOC,eAAeC,EAAS,eAAgB,CAAE2E,YAAY,EAAMV,IAAK,WAAc,OAAO6a,EAAUtV,gBAKvGxJ,EAAQ0e,cAJR,SAAuB/D,GACnB,MAAOvR,EAAaC,GAAYsV,EAAWrV,QAAQqR,EAAK,CAAE5Q,UAAU,IACpE,OAAO8U,EAAU7U,IAAIZ,EAAaC,EAAU,EAAGjF,WAAY,M,0BCX/DtE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgK,IAAMhK,EAAQwJ,kBAAe,EAGrC,MAAMW,EAAiB,WAKjB4U,EAAOC,SAASxc,UAAUwC,KAC1Bia,EAAQD,SAASxc,UAAU0c,MAC3BC,EAAOH,SAASxc,UAAU4c,KAC1BC,EAASC,OACTC,EAAiB,kBAEjBC,EAAiB1f,OAAOwE,OAAO8a,KAAKtf,OAAQ,KAAM,IAClD2f,EAAsB,IAAI1c,QAC1B2c,EAAe,IAAIC,QACnBC,EAAW,IAAI7c,QACf8c,EAAsB,IAAI9c,QAC1ByG,EAAe,CAACD,EAASF,EAAUyW,EAAa,EAAG1b,EAAYqH,EAAS,GAAIsU,EAAa,CAC3F,EAAgB,EAChB,QAAqB5e,EACrB,EAAgB,GAChB,QAAiBA,GAClBkR,EAAO,GAAI2N,EAAmB,KAAM,MAAMC,EAAkB,KAAI5N,KAAW,MAAM,IAAI7H,MAAM,sBAC1F,IAAI0V,EAAiB3W,EACjB4W,EAAkB9W,EACtB,MAAM+W,EAAe,CACjB,EAAgB,EAChB,EAAkB3U,EAClB,EAAsB,CAEW,IAA7BsU,EAAW,GAAkCA,EAAW,IAAiBA,EAAW,IACpFA,EAAW,IACXA,EAAW,GACXA,EAAW,MACR1N,EACHA,EAAK5O,QAET,GAAuBsc,EAAW,GAClC,GAAmB,EACnB,GAA2BG,EAC3B,GAAwBC,EACxB,GAAuB/b,GAE3Bsb,EAAavT,IAAIiU,GACjB,MAAMjd,EAAQ,CAACid,GACf,IAAIxC,EAAMkC,EACV,MAAMO,EAAO,IAAMH,EAAetC,KAC5B0C,EAAkB,IAAMnd,EAAMA,EAAMM,OAAS,GAC7C8c,EAAO,CAAClT,EAAKK,EAAS,IAAML,EAAIA,EAAI5J,OAASiK,GAC7C8S,EAAyB,CAAC1D,EAAOxc,EAAMmgB,EAAKC,KACzCb,EAAoB/b,IAAIgZ,IACzB+C,EAAoB7b,IAAI8Y,EAAO,IAAI1Q,KAEvC,MAAMuU,EAAa,CACf,EAAeF,EACf,GAAsBC,EACtB,QAAkBvf,GAEtB0e,EAAoB5b,IAAI6Y,GAAO9Y,IAAI1D,EAAMqgB,GACzCpf,QAAQxB,eAAe+c,EAAOxc,EAAM,CAChC4G,cAAc,EACd,MACI,GAAIyZ,EAAW,GACX,MAAM,IAAIC,eAAetgB,EAAOif,GAEpC,OAAOoB,EAAW,KAEtB,IAAIxc,GACA,GAAIwc,EAAW,GACX,MAAM,IAAIC,eAAetgB,EAAOif,GAEpC,GAAIoB,EAAW,IACX,MAAM,IAAIE,UAAUvgB,EA7DlB,kBA+DNqgB,EAAW,IAAkBxc,MAInC2c,EAAiB,CAAChE,EAAOxc,EAAMG,KACjC,OAAQA,GACJ,KAAK,EAGL,KAAK,EACD,OAAO+f,EAAuB1D,EAAOxc,GAAM,GAAM,GACrD,KAAK,EACL,KAAK,EACL,KAAK,EAED,OAAOkgB,EAAuB1D,EAAOxc,GAAM,GAAO,KAGxDygB,EAAwB,CAACjE,EAAOxc,KAClC,MAAMwC,EAAM+c,EAAoB5b,IAAI6Y,GACpC,GAAIha,EACA,OAAOA,EAAImB,IAAI3D,IAGjB0gB,EAAa,aAMbC,EAAiB,CAAC7c,EAAYqH,EAAQnL,EAAMG,EAAMiN,KAEpD,MAAMwT,EAAa,IAAIzV,GACjB0V,EAAKjB,EACLkB,EAAMjB,EACNkB,EAAM,CACR,EAAgB/gB,EAChB,EAAgBG,EAChB,GAAmBiN,EACnB,EAAkBwT,EAClB,GAA2BC,EAC3B,GAAwBC,EACxB,GAAuBhd,GAErBkd,EAAK,YAAuBjP,GAC9B,OAAOkP,EAAKJ,EAAIC,EAAK1T,EAAQ2T,EAAI,IAAsB,IAAIH,cACrD,CACE,EAAgB,EAChB,GAAqBI,EACrB,EAAgBhhB,EAChB,eAEF,CACE,EAAgB,EAChB,GAAqBghB,EACrB,EAAgBhhB,EAChB,GAAiBX,MAClB0S,EAAM2N,IAIjB,OAFAsB,EAAGE,QAAU9T,EACb+R,EAAoBzb,IAAIsd,EAAID,GACrBC,GAgBLG,EAAY,CAACC,EAAKphB,KACpB,IAAK,IAAIkb,EAAIkG,EAAI,GAAgBje,OAAS,EAAG+X,GAAK,EAAGA,IACjD,GAAIlb,KAAQohB,EAAI,GAAgBlG,GAC5B,OAAOkG,EAAI,GAAgBlG,GAGnC,OAAIlb,KAAQohB,EAAI,IACLA,EAAI,IAER,MAELlc,EAAW,CAACkc,EAAKphB,KACnB,GAAKof,EAAa5b,IAAI4d,GAGjB,CACD,MAAMC,EAAMD,EACN5E,EAAQ2E,EAAUE,EAAKrhB,GAC7B,GAAIwc,EACA,OAAOA,EAAMxc,GAEZ,CACD,MAAMshB,EAAgBD,EAAI,IAC1B,GAAa,WAATrhB,EACA,OAAOshB,EAEN,GAAIthB,KAAQshB,EACb,OAAOA,EAActhB,GAGrB,MAAM,IAAIsgB,eAAetgB,EAAOif,IAjBxC,OAAOmC,EAAIphB,IAsBbmF,EAAW,CAACic,EAAKphB,EAAML,KACzB,GAAKyf,EAAa5b,IAAI4d,GAGjB,CACD,MACM5E,EAAQ2E,EADFC,EACiBphB,GAC7B,GAAIwc,EACA,OAAQA,EAAMxc,GAAQL,EAGtB,MAAM,IAAI2gB,eAAetgB,EAAOif,GATpC,OAAQmC,EAAIphB,GAAQL,GAa5B,IAAI4hB,EACAC,EAAa,EACjB,MAAMC,EAAsB,IAAIhf,QAa1Bif,EAAgBC,KAChBC,EAAc,CAACxf,EAAKyf,KACtBzf,EAAM7B,OAAO6B,GACb,MAAO0G,EAAaC,GAAY4W,EAAgBvd,EAAK,CAAEqH,UAAU,IAEjE,OADeC,EAAIZ,EAAaC,EAAU,EAAGiX,IAAkB,IAAsB6B,EAAqB,IAAI7B,IAAkB,IAAmB,KA6oCvJ,MAAO,CACH,SACI,OAAOwB,GAEX,SACI,OAAO3e,GAEX,QACI,OAAOod,EAAKpd,GAAO,IAEvB,GAppCS,CAACyX,GAAQ,KAElB,MAAMwH,EAAaN,EAAalE,EAC1ByE,EAAUhC,IACViC,EAAehC,IACrB,GAAIgC,EAAa,IAAyB7e,SAAWyc,EAAezc,OAChE,SAKJ,IAAI8e,GAAkB,EAClBC,EAAc,KAClB,MAMMC,EAAiBxiB,IACnB,MAAMqiB,EAAe/B,EAAKpd,GAE1B,OAAQmf,EAAa,IACjB,KAAK,EACD,CACI,MAAMI,EAAQJ,EAERK,EAAaD,EAAM,GACzB,GAAIC,EAAa,EAIb,OAFAJ,GAAkB,EAClBC,EAAcviB,EACPA,EAGPkD,EAAMyf,MACNhF,EAAM+E,EACNzC,EAAiBK,EAAKpd,GAAO,IAC7Bgd,EAAkBI,EAAKpd,GAAO,IACK,IAA/Buf,EAAM,KACQ,OAAVziB,GAAmC,iBAAVA,GACT,mBAAVA,EACVsgB,EAAKpd,GAAO,GAAoBtB,KAAK5B,GAGrCsgB,EAAKpd,GAAO,GAAoBtB,KAAK2D,EAASkd,EAAO,WAIjE,MACJ,KAAK,EAEiBJ,EAER,GAAoBzgB,KAAK5B,GAC/B4iB,MAKVA,EAAiB,KACnB,MAAMH,EAAQnC,EAAKpd,GACblD,EAAQyiB,EAAM,GAAoBE,MAClCE,EAAcJ,EAAM,GAE1BA,EAAM,GAAkBA,EAAM,GAAqBhf,MAAM,GACzD,MAAM8D,EAAQkb,EAAM,IACpB,OAAQlb,GACJ,KAAK,EACL,KAAK,EAEG,KAAIsb,GAAe,GASf,OAFA3f,EAAMyf,WACNH,EAAcxiB,GAPdyiB,EAAM,IAAkB,EACxBA,EAAM,IAAwB,EAC9BA,EAAM,IAAkBziB,EACxB2d,EAAMkF,EAQd,MACJ,KAAK,EAIG,OAFA3f,EAAMyf,WACNH,EAAcxiB,GAItB,WAIF8iB,EAAgB9iB,IACZ,OAAa,CACf,GAAqB,IAAjBkD,EAAMM,OACN,MAAMxD,EAEV,MAAMqiB,EAAe/B,EAAKpd,GAC1B,OAAQmf,EAAa,IACjB,KAAK,EAEGnf,EAAMyf,MAEV,MACJ,KAAK,EAED,GAA8B,IADhBN,EACJ,IAON,OAFAA,EAAa,GAAoBzgB,KAAK5B,QACtC+iB,IALA7f,EAAMyf,OAWtB,MAAM3iB,GAEJ+iB,EAAgB,KAClB,MAAMN,EAAQnC,EAAKpd,GACblD,EAAQyiB,EAAM,GAAoBE,MAClCK,EAAWP,EAAM,IACjBI,EAAcJ,EAAM,GACpBQ,EAAYR,EAAM,GAExBA,EAAM,GAAkBA,EAAM,GAAqBhf,MAAM,GACzD,MAAM8D,EAAQkb,EAAM,IACpB,OAAQlb,GACJ,KAAK,EAEGkb,EAAM,IAAwB,EAC9BA,EAAM,IAAkBziB,EACpBijB,GAAa,GACbR,EAAM,IAAkB,OACQvhB,IAA5BuhB,EAAM,IA9HR,EAACA,EAAOpiB,EAAML,KAChC,MAAMkjB,EAAW,GACjBrC,EAAeqC,EAAU7iB,EAAM,GAC/B6iB,EAAS7iB,GAAQL,EACjByiB,EAAM,GAAgB7gB,KAAKshB,IA2HPC,CAAcV,EAAOA,EAAM,GAAmBziB,GAElD2d,EAAMsF,EACNhD,EAAiBwC,EAAM,IACvBvC,EAAkBuC,EAAM,KAEnBI,GAAe,GACpBJ,EAAM,IAAkB,EACxB9E,EAAMkF,EACN5C,EAAiBwC,EAAM,IACvBvC,EAAkBuC,EAAM,MAGxB9E,EAAMqF,EACN/C,EAAiBwC,EAAM,IACvBvC,EAAkBuC,EAAM,KAGhC,MACJ,KAAK,EACDA,EAAM,IAAkB,EACxBA,EAAM,IAAwB,EAC9BA,EAAM,IAAkBziB,EACpB6iB,GAAe,GACflF,EAAMkF,EACN5C,EAAiBwC,EAAM,IACvBvC,EAAkBuC,EAAM,MAGxBvf,EAAMyf,MACNG,EAAa9iB,IAEjB,MAEJ,KAAK,EAEGkD,EAAMyf,MACNG,EAAa9iB,GAEjB,MACJ,WAIFojB,EAAe,KACjB,MAAMX,EAAQvf,EAAMyf,MACpB,IAAIU,EAAQZ,EAAM,IAElBa,EAAM,OAAa,CAEf,GADAD,IACIA,EAAQ,EACR,MAAM,IAAI9Y,MAAM,wBAEpB,GAAc,IAAV8Y,EAAa,CAGb1F,EAAM8E,EAAM,IACZ,MAAMa,EAEL,CAED,MAAMC,EAAYjD,EAAKpd,GACjB2f,EAAcU,EAAU,GAC9B,GAAIV,GAAe,EAAG,CAElB,OADcU,EAAU,KAEpB,KAAK,EACL,KAAK,EACDA,EAAU,IAAkB,EAC5BA,EAAU,IAAwB,EAClCA,EAAU,IAAkBF,EAC5BE,EAAU,IAAkBd,EAAM,IAClC9E,EAAMkF,EACN,MAAMS,QAKdpgB,EAAMyf,SA0ChBa,EAAuB,IAClBnB,EAAa,GAAoBM,MAEtCc,EAAyBC,GACpBrB,EAAa,GAAoBzgB,KAAK8hB,GAEjD,IACItB,EAAS,OAAQA,GACb,KAAK,EACD,CACI,MAAMpiB,EAAQogB,IAEVqD,EA3eJ,iBADDrZ,EA2emBpK,KA1eA,EAAJoK,KAAWA,GAAgC,IAAxBA,EAAIF,GA2eXlK,EAGAkgB,EAAgBlgB,EAAQkK,IAGtD,MACJ,KAAK,GACDsZ,IACA,MACJ,KAAK,GACD5B,EAAatB,EAAK+B,EAAa,IAC/B,MACJ,KAAK,GACDoB,EAAsBnD,EAAK+B,EAAa,KACxC,MACJ,KAAK,GACDoB,EAAsBpB,GACtB,MACJ,KAAK,EACDoB,EAAsB,MACtB,MACJ,KAAK,EACDA,OAAsBviB,GACtB,MACJ,KAAK,GACD,CACI,MAAMmP,EAAQmT,IACR/T,EAAS+T,IACfC,EAAsB,IAAIrE,EAAO3P,EAAQY,IAE7C,MACJ,KAAK,GACL,KAAK,GACD,CACI,MAAMrQ,EAAQwjB,IACRnjB,EAAOmjB,IACP/B,EAAM+B,IACZ,GAAK/D,EAAa5b,IAAI4d,GAGjB,CACD,MAAM5E,EAAQ2E,EAAUC,EAAKphB,GAC7B,IAAIwc,EAIA,MAAM,IAAI8D,eAAetgB,EAAOif,GAHhCzC,EAAMxc,GAAQL,OALlByhB,EAAIphB,GAAQL,EAYZyjB,EADY,KAAZrB,EACsBpiB,EAGAyhB,GAG9B,MACJ,KAAK,GACD,CACI,MAAMzhB,EAAQwjB,IACRnjB,EAAOmjB,IACP/B,EAAM+B,IACN3G,EAAQ2E,EAAUC,EAAKphB,GACvBqB,EAAOke,EAAoB5b,IAAI6Y,GAAO7Y,IAAI3D,GAChDqB,EAAK,IAAe,EACpBA,EAAK,IAAkB1B,EAE3B,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACD,CACI,MAAM2jB,EAAWH,IACXnjB,EAAOmjB,IACP/B,EAAM+B,IACNI,EAAYre,EAASkc,EAAKphB,GAQ1B4I,EANQ,CACV,GAAuB,CAACmB,EAAGyZ,IAAMzZ,EAAIyZ,EACrC,GAAwB,CAACzZ,EAAGyZ,IAAMzZ,EAAIyZ,EACtC,GAAwB,CAACzZ,EAAGyZ,IAAMzZ,EAAIyZ,EACtC,GAA2B,CAACzZ,EAAGyZ,IAAMzZ,EAAIyZ,GAE7BzB,GAASwB,EAAWD,GACpCne,EAASic,EAAKphB,EAAM4I,GACpBwa,EAAsBxa,GAE1B,MACJ,KAAK,GACD,CACI,MAAMjJ,EAAQwjB,IACRnjB,EAAOmjB,IACP/B,EAAM+B,IACZliB,QAAQxB,eAAe2hB,EAAKphB,EAAM,CAC9B4G,cAAc,EACdvC,YAAY,EACZof,UAAU,EACV9jB,MAAOA,IAEXyhB,EAAIphB,GAAQL,EACZyjB,EAAsBhC,GAE1B,MACJ,KAAK,GACD,CACI,MAAMphB,EAAOmjB,IACP/B,EAAM+B,IACZC,EAAsBle,EAASkc,EAAKphB,IAExC,MACJ,KAAK,GACD,CACI,MAAMohB,EAAM+B,IACNhgB,EAASggB,IACf,IAAK,IAAIjI,EAAI,EAAGA,EAAI/X,EAAQ+X,IAAK,CAC7B,MAAMvM,EAAOwU,IACPxjB,EAAQwjB,IACRnjB,EAAOmjB,IACb,IAAIO,GAAM,EACV,IAAK,IAAIxI,EAAIkG,EAAI,GAAgBje,OAAS,EAAG+X,GAAK,EAAGA,IACjD,GAAIja,QAAQuC,IAAI4d,EAAI,GAAgBlG,GAAIlb,GAAO,CAC3C0jB,GAAM,EACN,MAAMriB,EAAOof,EAAsBW,EAAI,GAAgBlG,GAAIlb,GACvDqB,GAAgB,EAAPsN,IACTtN,EAAK,IAAe,GACxB2gB,EAAa,GAAgB9G,GAAGlb,GAAQL,EACpC0B,GAAgB,EAAPsN,IACTtN,EAAK,KAAsB,GAC/B,MAGR,IAAKqiB,EACD,MAAM,IAAIpD,eAAetgB,EAAOif,IAI5C,MACJ,KAAK,EACD,CACI,MAAM7E,EAAM+I,IACZ7F,EAAMlD,EAEV,MACJ,KAAK,EACD,CACI,MAAMza,EAAQwjB,IACR/I,EAAM+I,IACRxjB,IAIA2d,EAAMlD,GAGd,MACJ,KAAK,EACD,CACI,MAAMza,EAAQwjB,IACR/I,EAAM+I,IACRxjB,IACA2d,EAAMlD,GAMd,MACJ,KAAK,EACD,CACI,MAAMza,EAAQwjB,IACR/I,EAAM+I,IACZC,EAAsBzjB,GAClBA,IACA2d,EAAMlD,GAMd,MACJ,KAAK,GACD,CACI,MAAMza,EAAQwjB,IACR/I,EAAM+I,IACZC,EAAsBzjB,GAClBA,IAIA2d,EAAMlD,GAGd,MACJ,KAAK,GACD,CAEI,MAAMuJ,EAAeR,IACfS,EAAgBT,IAChB7V,EAAY,GAClB,IAAK,IAAI4N,EAAI,EAAGA,EAAI0I,EAAe1I,IAC/B5N,EAAU/L,KAAK,CACX,EAAgB4hB,IAChB,EAAgBA,MAGxB,MAAMU,EAAoBV,IACpBW,EAAgB,GACtB,IAAK,IAAI5I,EAAI,EAAGA,EAAI2I,EAAmB3I,IACnC4I,EAAcviB,KAAK4hB,KAEvB,MAAMY,EAAiBZ,IACjBlJ,EAAa,GACnB,IAAK,IAAIiB,EAAI,EAAGA,EAAI6I,EAAgB7I,IAChCjB,EAAW+J,QAAQb,KAEvB,MAAMc,EAAad,IACbe,EAAoB,CAAC1H,EAAO2H,KAC9B,MAAM5gB,EAxmBD,MACzB,MAAMA,EAAM,IAAImd,EAEhB,OADAzf,QAAQmjB,eAAe7gB,EAAK/D,OAAO0C,WAC5BqB,GAqmByB8gB,GACNC,EAAgBthB,KAAKuF,IAAIsb,EAAmBE,GAClD,IAAK,IAAI7I,EAAI,EAAGA,EAAI6I,EAAgB7I,IAC5BA,EAAIoJ,EACJ9kB,OAAOC,eAAe8D,EAAK2X,EAAG,CAC1B7W,YAAY,EACZuC,cAAc,EACdjD,IAAG,IACQ6Y,EAAMsH,EAAc5I,IAE/B,IAAIrX,GACA2Y,EAAMsH,EAAc5I,IAAMrX,KAKlCN,EAAI2X,GAAKjB,EAAWiB,GAa5B,OAVA1b,OAAOC,eAAe8D,EAAK,SAAU,CACjCc,YAAY,EACZuC,cAAc,EACdjH,MAAOokB,IAEXvkB,OAAOC,eAAe8D,EAAK,SAAU,CACjCc,YAAY,EACZuC,cAAc,EACdjH,MAAOwkB,IAEJ5gB,GAEX,GAAmB,IAAf0gB,EAA8B,CAE9B,MAAMjkB,EAAOmjB,IACPnC,EAAKmC,IACLrR,EAAOqR,IACb,IAAI3G,EAQJ,OAPqB,IAAjBmH,EACAnH,EAAQyD,EAAK+B,EAAa,KAAoBA,EAAa,KAG3DxF,EAAQ0C,IACR8C,EAAa,GAAgBzgB,KAAKib,IAE9BmH,GACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACDnD,EAAehE,EAAO,SAAqB,GAC3CA,EAAM,UAAuB1K,EAC7B0K,EAAiB,UAAI0H,EAAkB1H,EAAOwE,GAEtD,OAAQ2C,GACJ,KAAK,EACL,KAAK,EACY,KAAT3jB,IACAwc,EAAMxc,GAAQghB,GAG1B,IAAK,IAAInd,KAAKyJ,EACVkT,EAAehE,EAAO3Y,EAAE,GAAeA,EAAE,IAE7C,IAAK,IAAKwO,EAAOrS,KAAS8jB,EAAc3iB,UACpCqb,EAAMxc,GAAQia,EAAW5H,QAG5B,GAAmB,IAAf4R,EAAkC,CACvC,MAAMjkB,EAAOmjB,IACPnC,EAAKmC,IACLoB,EAAYpB,IACZ3G,EAAQ0C,IAEd,OADA8C,EAAa,GAAgBzgB,KAAKib,GAC1BmH,GACJ,KAAK,EACL,KAAK,EACL,KAAK,EACD,MAAM,IAAIpD,UAAU,uBACxB,KAAK,EACL,KAAK,EACDC,EAAehE,EAAO,SAAqB,GAC3CA,EAAM,UAAuBhd,OAAOwE,OAAOugB,EAAUriB,WACrDsa,EAAiB,UAAI0H,EAAkB1H,EAAOwE,GAEtD,OAAQ2C,GACJ,KAAK,EACDnH,EAAMxc,GAAQghB,EAEtB,IAAK,IAAInd,KAAKyJ,EACVkT,EAAehE,EAAO3Y,EAAE,GAAeA,EAAE,IAE7C,IAAK,IAAKwO,EAAOrS,KAAS8jB,EAAc3iB,UACpCqb,EAAMxc,GAAQia,EAAW5H,IAIrC,MACJ,KAAK,GACD,CACI,MAAMuR,EAAgBT,IAChB7V,EAAY,GAClB,IAAK,IAAI4N,EAAI,EAAGA,EAAI0I,EAAe1I,IAC/B5N,EAAU/L,KAAK,CACX,EAAgB4hB,IAChB,EAAgBA,MAGxB,MAAM3G,EAAQ0C,IACd8C,EAAa,GAAgBzgB,KAAKib,GAClC,IAAK,IAAI3Y,KAAKyJ,EACVkT,EAAehE,EAAO3Y,EAAE,GAAeA,EAAE,IAGjD,MACJ,KAAK,GAEGme,EAAa,GAAgBM,MAEjC,MACJ,KAAK,GACD,CACI,MAAMjB,EAAMpB,EAAK+B,EAAa,GAAqB,GAC7ChiB,EAAOigB,EAAK+B,EAAa,IAC/BvB,EAAsBR,EAAKoB,EAAI,IAAkBrhB,GAAM,IAAe,EAE1E,MACJ,KAAK,GACD,CACI,MAAMqhB,EAAMpB,EAAK+B,EAAa,GAAqB,GAC7ChiB,EAAOigB,EAAK+B,EAAa,IAC/BvB,EAAsBR,EAAKoB,EAAI,IAAkBrhB,GAAM,KAAsB,EAEjF,MACJ,KAAK,GACD,CACI,MAAMG,EAAOgjB,IACP/V,EAAS+V,IACTnjB,EAAOmjB,IACbC,EAAsBzC,EAAeqB,EAAa,IAAsBA,EAAa,GAAiBhiB,EAAMG,EAAMiN,IAEtH,MACJ,KAAK,GACL,KAAK,GACL,KAAK,GACD,CACI,MAAM2W,EAAiBZ,IACvB,IAAIlJ,EAAa,GACjB,IAAK,IAAIiB,EAAI,EAAGA,EAAI6I,EAAgB7I,IAChCjB,EAAW+J,QAAQb,KAEvB,IAAInC,EAAIwD,EAsCJ1S,EAtCiB9R,EAAO,GAU5B,IATgB,KAAZ+hB,GAAyC,KAAZA,GAC7B/hB,EAAOmjB,IACPqB,EAAcrB,IACdnC,EAAK9b,EAASsf,EAAaxkB,KAG3BwkB,OAAc3jB,EACdmgB,EAAKmC,KAEFnC,IAAOvC,GAAQuC,IAAOrC,GAASW,EAAS9b,IAAIwd,IAAK,CACpD,IAAIyD,EAAOC,EAASC,EACpB,GAAI3D,IAAOvC,EACPgG,EAAQD,EACRE,EAAUzK,EAAW,GACrB0K,EAAgB1K,EAAW7W,MAAM,QAEhC,GAAI4d,IAAOrC,EAAO,CACnB8F,EAAQD,EACRE,EAAUzK,EAAW,GACrB,MAAM2K,EAAmC,MAAd3K,EAAqBA,EAAW,GAAK,GAC1D4K,EAAkBD,EAAmBzhB,OAC3CwhB,EAAgB,GAChB,IAAK,IAAIzJ,EAAI,EAAGA,EAAI2J,EAAiB3J,IACjCyJ,EAAcpjB,KAAKqjB,EAAmB1J,QAGd,CAC5B,MACM4J,EADQxF,EAAS3b,IAAIqd,GAE3B0D,EAAUI,EAAK,IACfH,EAAgB,IAAIG,EAAK,OAAwB7K,GACjDwK,EAAQK,EAAK,IAEjB9D,EAAK5B,EAAa5b,IAAIihB,QAAS5jB,EAAY4jB,EAC3CD,EAAcE,EACdzK,EAAa0K,EAMjB,GAHKvF,EAAa5b,IAAIghB,KAClB1S,EAAO0S,GAEPxD,IAAOnC,EAAM,CAEbuE,EArwBH,EAACpC,EAAIlP,EAAMC,KAC5B,GAAkB,mBAAPiP,EACP,OAEJ,MAAM+D,EAAS,YAAaC,GACxB,OAAO/jB,QAAQ2d,MAAMoC,EAAIlP,EAAM,IAAIC,KAASiT,KAOhD,OALA1F,EAAS5b,IAAIqhB,EAAQ,CACjB,GAAqB/D,EACrB,GAAiBlP,EACjB,GAAsBC,IAEnBgT,GAwvB2BE,CAAanT,EAAMmI,EAAW,GAAIA,EAAW7W,MAAM,UAGhE,GAAK+b,EAAoB3b,IAAIwd,GAyB7B,CACD,MAAMD,EAAM5B,EAAoBxb,IAAIqd,GAC9BkE,EAAW,CACb,EAAgB,EAChB,EAAkB,IAAInE,EAAI,IAC1B,EAAkBzD,EAClB,EAAsB,CAClBxL,EACAkP,EACAD,EAAI,GACJ,KACG9G,EACHA,EAAW9W,QAEf,GAAuB,EACvB,GAA2B4d,EAAI,IAC/B,GAAwBA,EAAI,IAC5B,GAAuBA,EAAI,KAE/B3B,EAAavT,IAAIqZ,GACjBriB,EAAMtB,KAAK2jB,GACX5H,EAAMyD,EAAI,IACVlB,EAAkBkB,EAAI,IACtBnB,EAAiBmB,EAAI,QAhDc,CAEnC,GAAkB,mBAAPC,EACP,MAAgB,KAAZe,GAAyC,KAAZA,EACvB,IAAIxB,UAAU,wBAAwBvgB,uBAGtC,IAAIugB,UAAU,0CAGvB,CACD,MAAM4E,EAAW1D,EAAoBje,IAAIwd,GAAMS,EAAoB9d,IAAIqd,GAAMA,EAGrEoC,EAFJ+B,IAAazD,EAEaE,EAAYrhB,OAAO0Z,EAAW,IADxC,KAAZ8H,GAQkB9gB,QAAQ2d,MAAMuG,EAAUrT,EAAMmI,MA8BpE,MACJ,KAAK,GACD,CACI,MAAM8J,EAAiBZ,IACvB,IAAIlJ,EAAa,GACjB,IAAK,IAAIiB,EAAI,EAAGA,EAAI6I,EAAgB7I,IAChCjB,EAAW+J,QAAQb,KAEvB,IAAInC,EAAKmC,IACT,KAAO7D,EAAS9b,IAAIwd,IAAK,CACrB,IAAIyD,EAAOE,EACX,MACMG,EADQxF,EAAS3b,IAAIqd,GAE3B2D,EAAgB,IAAIG,EAAK,OAAwB7K,GACjDwK,EAAQK,EAAK,IACb9D,EAAK5B,EAAa5b,IAAIihB,QAAS5jB,EAAY4jB,EAC3CxK,EAAa0K,EAEjB,GAAKxF,EAAoB3b,IAAIwd,GAIxB,CACD,MAAMD,EAAM5B,EAAoBxb,IAAIqd,GAC9BkE,EAAW,CACb,EAAgB,EAChB,EAAkB,IAAInE,EAAI,IAC1B,EAAkBzD,EAClB,EAAsB,CAClB0D,EACAA,EACAD,EAAI,GACJ,KACG9G,EACHA,EAAW9W,QAEf,GAAuB,EACvB,GAA2B4d,EAAI,IAC/B,GAAwBA,EAAI,IAC5B,GAAuBA,EAAI,KAE/B3B,EAAavT,IAAIqZ,GACjBriB,EAAMtB,KAAK2jB,GACX5H,EAAMyD,EAAI,IACVlB,EAAkBkB,EAAI,IACtBnB,EAAiBmB,EAAI,SAzBrBqC,EAAsBniB,QAAQmkB,UAAUpE,EAAI/G,EAAY+G,IA4BhE,MACJ,KAAK,GACD,CACI,MAAMxc,EAAS2e,IACf,GAAInB,EAAa,GAAoB7e,OAAS,EAC1C,MAAM,IAAI+G,MAAM,cAGpB,KAAqC,IAA9B+V,EAAKpd,GAAO,IACfA,EAAMyf,MAEV,MAAMD,EAAapC,EAAKpd,GAAO,GACzBwiB,EAAgBpF,EAAKpd,GAC3B,GAAIwf,EAAa,EAAG,CAEhB,GAA2C,IAAvCgD,EAAc,IAAwC,CACtDpD,GAAkB,EAClBC,EAAc1d,EACd,MAAMud,EAGN,GAAsB,mBAAXvd,GAA2C,iBAAXA,EAAqB,CAC5Dyd,GAAkB,EAClBC,EAAc1d,EACd,MAAMud,EAGNE,GAAkB,EAClBC,EAAchd,EAASmgB,EAAe,UACtC,MAAMtD,EAIlBlf,EAAMyf,MACN,MAAMgD,EAAYrF,EAAKpd,GACoB,IAAvCwiB,EAAc,KAIQ,mBAAX7gB,GAA2C,iBAAXA,EAH3C8gB,EAAU,GAAoB/jB,KAAKiD,GAO/B8gB,EAAU,GAAoB/jB,KAAK2D,EAASmgB,EAAe,WAGnE/H,EAAM+E,EACNzC,EAAiB0F,EAAU,IAC3BzF,EAAkByF,EAAU,IAEhC,MACJ,KAAK,GAED,MADYnC,IAGhB,KAAK,GAA8B,CAC/B,MAAMlZ,EAAMkZ,IACZ,MAAM,IAAI7C,eAAerW,GAE7B,KAAK,GACDmZ,EAAsB,IACtB,MACJ,KAAK,GACDA,EAAsB,IACtB,MACJ,KAAK,GACD,CACI,MAAMmC,EAAYpC,IACZX,EAAcW,IACdP,EAAYO,IACZR,EAAWQ,IACXf,EAAQ,CACV,EAAgB,EAChB,EAAuBJ,EAAa,GACpC,EAAkBA,EAAa,GAAgB5e,MAAM,GACrD,EAAsB,GACtB,GAAkB,EAClB,GAAwB,EACxB,QAAkBvC,EAClB,EAAiB+hB,EACjB,EAAmBJ,EACnB,GAAkB,EAClB,GAAkB,EAClB,EAAoB+C,EACpB,GAAiB5C,EACjB,GAAwB9C,EACxB,GAA2BD,EAC3B,GAAuBoC,EAAa,KAExC5C,EAAavT,IAAIuW,GACjBvf,EAAMtB,KAAK6gB,GAEf,MACJ,KAAK,GACDG,IACA,MACJ,KAAK,GACDG,IACA,MACJ,KAAK,GAxpBS,MAClB,MAAMN,EAAQnC,EAAKpd,GACb2iB,EAAYpD,EAAM,GAAoBE,MACtCU,EAAQZ,EAAM,GAAoBE,MAClCE,EAAcJ,EAAM,GAC1BA,EAAM,IAAkBoD,EACxBpD,EAAM,IAAkBY,EAExBZ,EAAM,GAAkBA,EAAM,GAAqBhf,MAAM,GAEzD,OADcgf,EAAM,KAEhB,KAAK,EACL,KAAK,EACGI,GAAe,GACfJ,EAAM,IAAkB,EACxBA,EAAM,IAAwB,EAE9B9E,EAAMkF,EACN5C,EAAiBwC,EAAM,IACvBvC,EAAkBuC,EAAM,KAIxBW,IAEJ,MAEJ,KAAK,EAGGA,MA2nBJ0C,GACA,MACJ,KAAK,GACD,CACI,MAAMrD,EAAQJ,EACR0D,EAAYtD,EAAM,IAClBuD,EAAkBvD,EAAM,IACxBwD,EAAYxD,EAAM,IAClB7O,EAAO6O,EAAM,IACbyD,EAAazD,EAAM,GAGzB,OADAA,EAAM,GAAkBA,EAAM,GAAqBhf,MAAM,GACjDsiB,GACJ,KAAK,EACD,OAAQC,GACJ,KAAK,EACDrI,EAAM/J,EACN,MAAMwO,EACV,KAAK,EACDU,EAAamD,GACb,MAAM7D,EACV,KAAK,EACDI,EAAcyD,GACd,MAAM7D,EACV,KAAK,EACDgB,IACA,MAAMhB,EAElB,KAAK,EACL,KAAK,EACD,GAAIK,EAAM,IAAoB,EAAG,CAC7BA,EAAM,IAAkB,EACxBA,EAAM,IAAwB,EAC9BA,EAAM,SAAkBvhB,EACxByc,EAAMuI,EACN,MAAM9D,EAGNzE,EAAM/J,EACN,MAAMwO,EAEd,UAIR,MACJ,KAAK,GAGGqB,SADcD,KAGlB,MACJ,KAAK,GACD,CACI,MAAMnjB,EAAOmjB,IACP/B,EAAM+B,IACZ,GAAI/D,EAAa5b,IAAI4d,GAAM,CACvB,MAAMgB,EAAQhB,EACd,IAAK,IAAIlG,EAAIkH,EAAM,GAAgBjf,OAAS,EAAG+X,GAAK,EAAGA,IACnD,GAAIja,QAAQK,yBAAyB8gB,EAAM,GAAgBlH,GAAIlb,GAAO,CAClEojB,SAA6BhB,EAAM,GAAgBlH,GAAGlb,IACtD,MAAM+hB,EAGdqB,EAAsB,kBAGtBA,SAA6BhC,EAAIphB,IAGzC,MACJ,KAAK,GACD,CACI,MAAML,EAAQwjB,IAMdC,EALiB,UAAYzjB,GACzB,IAAK,MAAMyB,KAAOzB,QACRyB,EAFG,CAIdzB,IAGP,MACJ,KAAK,GAGGyjB,EADiBD,IACc2C,QAEnC,MACJ,KAAK,GAGG1C,EADcD,IACc3a,MAEhC,MACJ,KAAK,GAGG4a,EADcD,IACcxjB,OAEhC,MACJ,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACD,CACI,MAAM0U,EAAQ8O,IACR/O,EAAO+O,IAyBbC,EAxBY,CACR,GAAuB,CAAChP,EAAMC,IAAUD,EAAOC,EAC/C,GAAiB,CAACD,EAAMC,IAAUD,EAAOC,EACzC,GAAmB,CAACD,EAAMC,IAAUD,EAAOC,EAC3C,GAA0B,CAACD,EAAMC,IAAUD,GAAQC,EACnD,GAAgC,CAACD,EAAMC,IAAUD,IAASC,EAC1D,GAA+B,CAACD,EAAMC,IAAUD,GAAQC,EACxD,GAAqC,CAACD,EAAMC,IAAUD,IAASC,EAC/D,GAAyB,CAACD,EAAMC,IAAUD,EAAOC,EACjD,GAAoC,CAACD,EAAMC,IAAUD,GAAQC,EAC7D,GAA+C,CAACD,EAAMC,IAAUD,IAASC,EACzE,GAA+B,CAACD,EAAMC,IAAUD,GAAQC,EACxD,GAAsB,CAACD,EAAMC,IAAUD,EAAOC,EAC9C,GAA8B,CAACD,EAAMC,IAAUD,GAAQC,EACvD,GAA4B,CAACD,EAAMC,IAAUD,GAAQC,EACrD,GAAkB,CAACD,EAAMC,IAAUD,EAAOC,EAC1C,GAAmB,CAACD,EAAMC,IAAUD,EAAOC,EAC3C,GAAuB,CAACD,EAAMC,IAAUD,aAAgBC,EACxD,GAAgB,CAACD,EAAMC,IAAUD,KAAQC,EACzC,GAAsB,CAACD,EAAMC,IAAUD,EAAOC,EAC9C,GAAmB,CAACD,EAAMC,IAAUD,EAAOC,EAC3C,GAAqB,CAACD,EAAMC,IAAUD,EAAOC,GAE9B0N,GAAS3N,EAAMC,IAGtC,MACJ,KAAK,GACL,KAAK,GACD,CACI,MAAMrU,EAAOmjB,IACP/B,EAAM+B,IACZ,GAAI/D,EAAa5b,IAAI4d,GAAM,CACvB,MACM5E,EAAQ2E,EADFC,EACiBphB,GAC7B,IAAIwc,EAOA,MAAM,IAAI8D,eAAetgB,EAAOif,GAPzB,CACP,MAAM8G,EAAMvJ,EAAMxc,GACZgF,EAAqB,KAAZ+c,EAAuCgE,EAAM,EAAIA,EAAM,EACtEvJ,EAAMxc,GAAQgF,EACdoe,EAAsB2C,QAMzB,CACD,MAAMjU,EAAOsP,EACP2E,EAAMjU,EAAK9R,GACXgF,EAAqB,KAAZ+c,EAAuCgE,EAAM,EAAIA,EAAM,EACtEjU,EAAK9R,GAAQgF,EACboe,EAAsB2C,IAG9B,MACJ,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACD,CACI,MAAMpmB,EAAQwjB,IACd,IAAI3e,EACJ,OAAQud,GACJ,KAAK,GACDvd,GAAU7E,EACV,MACJ,KAAK,GACD6E,GAAU7E,EACV,MACJ,KAAK,GACD6E,GAAU7E,EACV,MACJ,KAAK,GACD6E,GAAU7E,EAGlByjB,EAAsB5e,GAE1B,MAEJ,KAAK,GACL,KAAK,GACD,CACI,MAAMxE,EAAOmjB,IACP/B,EAAM+B,IACN6C,EAAe9gB,EAASkc,EAAKphB,GAC7BgF,EAAqB,KAAZ+c,EAAsCiE,EAAe,EAAIA,EAAe,EACvF7gB,EAASic,EAAKphB,EAAMgF,GAEpBoe,EAAsBpe,GAE1B,MACJ,KAAK,GACD,CACI,MAAMhF,EAAOmjB,IACP/B,EAAM+B,IACZ,GAAK/D,EAAa5b,IAAI4d,GAGjB,CACD,MACM5E,EAAQ2E,EADFC,EACiBphB,GAEzBojB,GADA5G,UAC6BA,EAAMxc,SANvCojB,SAA6BhC,EAAIphB,IAazC,MACJ,KAAK,GACD,CACI,MAAMimB,EAAUvG,IAChB,GAAIuG,EACI3L,EACA2L,IAGA9I,QAAQ+I,KAAK,4EAIjB,SAGR,MACJ,QAEI,MAAM,IAAIhc,MAAM,OAExB,GAAI+X,EACA,MAAO,CACHzZ,MAAM,EACN7I,MAAOuiB,EACPiE,UAAW5E,GAIvB,MAAO5f,GACQ,MAAPA,GAA8B,iBAARA,IACtBA,EAAIyY,IAAM0H,GAEdW,EAAa9gB,GAh2CH,IAACoI,EAk2Cf,MAAO,CACHvB,MAAM,MAgBlB9I,EAAQwJ,aAAeA,EACvB,MAAM+X,EAAO,CAAChY,EAASF,EAAUyW,EAAY1b,EAAYqH,EAAQsU,EAAY1N,EAAM2N,EAAkB0G,GAAoB,EAAOzG,KAC5H,MAAM/X,EAAYsB,EAAaD,EAASF,EAAUyW,EAAY1b,EAAYqH,EAAQsU,EAAY1N,EAAM2N,EAAkBC,GACtH,IAAI/Q,EACJ,GACIA,EAAMhH,EAAU,aACVgH,EAAIpG,MACd,OAAK4d,EAIMxX,EAAIuX,UAHJvX,EAAIjP,OAMb+J,EAAM,CAACT,EAASF,EAAUyW,EAAa,EAAG1b,EAAYqH,EAAS,GAAI2G,EAAkBC,EAAO,GAAI4N,IAE3FsB,EAAKhY,EAASF,EAAUyW,EAAY1b,EAAYqH,EAAQ,CAC3D,EAAgB,EAChB,QAAqBtK,EACrB,EAAgB,GAChB,GAAiBiR,GAClBC,GAAM,IAAM,OAAM,EAAM4N,GAE/BjgB,EAAQgK,IAAMA,G,gFCh5Cd,IAAItK,gBAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,QAAS,aAAc,CAAEC,OAAO,IACtD,MAAM0mB,YAAcjnB,gBAAgB,oBAAQ,OACtCQ,MAAQR,gBAAgB,oBAAQ,MACtC,IACIuiB,KAAK,oCAET,MAAOhgB,GACHwb,QAAQmJ,IAAI,eAEhB,IAAI1mB,MAAME,QAAQ,CACd+K,GAAI0b,SAASC,eAAe,QAC5B1jB,KAAM,GACN2jB,OAASC,GAAMA,EAAEL,YAAYvmB,Y,SChBjC,SAAS6mB,EAAoBC,GAC5B,IAAIC,EAAI,IAAI3c,MAAM,uBAAyB0c,EAAM,KAEjD,MADAC,EAAE7K,KAAO,mBACH6K,EAEPF,EAAoB3lB,KAAO,IAAM,GACjC2lB,EAAoBG,QAAUH,EAC9BA,EAAoBpkB,GAAK,KACzBwkB,EAAOrnB,QAAUinB,G,mJCAbK,GAAY,E,QAAA,GACd,UACA,IACA,KACA,EACA,KACA,WACA,MAuBFA,EAAUlhB,QAAQmhB,OAAS,oCAC3B,QAAeD,E,6JC/BXA,GAAY,E,QAAA,GACd,UACA,IACA,KACA,EACA,KACA,WACA,MAuBFA,EAAUlhB,QAAQmhB,OAAS,8BAC3B,QAAeD,E,6JC/BXA,GAAY,E,QAAA,GACd,UACA,IACA,KACA,EACA,KACA,WACA,MAuBFA,EAAUlhB,QAAQmhB,OAAS,4BAC3B,QAAeD,E,6JC9BXA,GAAY,E,QAAA,GACd,UACA,IACA,KACA,EACA,KACA,WACA,MAuBFA,EAAUlhB,QAAQmhB,OAAS,gBAC3B,QAAeD,E,wJCxC0L,QAAe,K,+ICArB,QAAe,K,8ICAjB,QAAe,K,8ICAtB,QAAe,K,qDCAzM,IAAIP,EAAS,WACX,IAAIS,EAAM7nB,KACN8nB,EAAKD,EAAIE,eACTC,EAAKH,EAAII,MAAMD,IAAMF,EACzB,OAAOE,EAAG,MAAO,CAAEE,YAAa,kBAAoB,CAC/B,OAAnBL,EAAI5mB,WACA+mB,EAAG,OAAQ,CAACH,EAAIM,GAAGN,EAAIO,GAAGP,EAAI5mB,YAAc,OAC5C4mB,EAAIQ,KACRR,EAAIM,GAAG,KACM,UAAbN,EAAI/mB,KACAknB,EAAG,OAAQ,CAAEE,YAAa,SAAW,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIS,eACxDT,EAAIQ,KACRR,EAAIM,GAAG,KACM,WAAbN,EAAI/mB,KACAknB,EAAG,OAAQ,CAAEE,YAAa,UAAY,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIS,eACzDT,EAAIQ,KACRR,EAAIM,GAAG,KACM,WAAbN,EAAI/mB,KACAknB,EAAG,OAAQ,CAAEE,YAAa,UAAY,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIS,eACzDT,EAAIQ,KACRR,EAAIM,GAAG,KACM,YAAbN,EAAI/mB,KACAknB,EAAG,OAAQ,CAAEE,YAAa,WAAa,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIS,eAC1DT,EAAIQ,KACRR,EAAIM,GAAG,KACM,SAAbN,EAAI/mB,KACAknB,EAAG,OAAQ,CAAEE,YAAa,QAAU,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIS,eACvDT,EAAIQ,KACRR,EAAIM,GAAG,KACM,cAAbN,EAAI/mB,KACAknB,EAAG,OAAQ,CAAEE,YAAa,aAAe,CACvCL,EAAIM,GAAGN,EAAIO,GAAGP,EAAIS,eAEpBT,EAAIQ,KACRR,EAAIM,GAAG,KACM,WAAbN,EAAI/mB,KACAknB,EACE,OACA,CACEE,YAAa,SACbK,GAAI,CACFC,MAAO,SAASC,GACdZ,EAAIvmB,QAAUumB,EAAIvmB,UAIxB,CACEumB,EAAIM,GACF,aACEN,EAAIO,GAAGP,EAAIS,YACX,IACAT,EAAIO,GAAGP,EAAIvmB,OAAS,eAAiB,cACrC,YAIRumB,EAAIQ,KACRR,EAAIM,GAAG,KACM,aAAbN,EAAI/mB,KACAknB,EACE,OACA,CACEE,YAAa,WACbK,GAAI,CACFC,MAAO,SAASC,GACdZ,EAAIvmB,QAAUumB,EAAIvmB,UAIxB,CACEumB,EAAIM,GACF,aACEN,EAAIO,GAAGP,EAAIS,YACX,IACAT,EAAIO,GAAGP,EAAIvmB,OAAS,eAAiB,cACrC,YAIRumB,EAAIQ,KACRR,EAAIM,GAAG,KACPN,EAAIvmB,OACA0mB,EACE,MACA,CAAEE,YAAa,cACfL,EAAIa,GAAGb,EAAIc,cAAc,SAASlQ,GAChC,OAAOuP,EACL,MACA,CACEjmB,IAAKN,KAAKC,UAAU,CAAC+W,EAAM,GAAIA,EAAM,KACrCmQ,MAAO,CAAEC,KAAMpnB,KAAKC,UAAU,CAAC+W,EAAM,GAAIA,EAAM,OAEjD,CACEuP,EAAG,iBAAkB,CACnBY,MAAO,CACL5nB,QACEyX,EAAM,KAAOoP,EAAIrnB,UAAU+B,gBAC3BkW,EAAM,KAAOoP,EAAIrnB,UAAUkC,eAC7BtB,WAAYymB,EAAIzmB,WAChBH,WAAYwX,EAAM,GAClBnY,MAAOmY,EAAM,OAInB,MAGJ,GAEFoP,EAAIQ,QAGRS,EAAkB,GACtB1B,EAAO2B,eAAgB,G,qDCjHvB,IAAI3B,EAAS,WACX,IAAIS,EAAM7nB,KACN8nB,EAAKD,EAAIE,eACTC,EAAKH,EAAII,MAAMD,IAAMF,EACzB,OAAOE,EAAG,MAAO,CACfA,EAAG,MAAO,CAAEE,YAAa,UAAY,CAACL,EAAIM,GAAG,4BAC7CN,EAAIM,GAAG,KACPH,EACE,MACA,CAAEE,YAAa,QACfL,EAAIa,GAAGb,EAAI/b,QAAQ,SAASqR,GAC1B,OAAO6K,EACL,MACA,CAAEjmB,IAAK8lB,EAAI5jB,OAAOkZ,GAAQyL,MAAO,CAAEC,KAAMhB,EAAI5jB,OAAOkZ,KACpD,CACE6K,EAAG,gBAAiB,CAClBY,MAAO,CACL3nB,WAAY,QACZJ,eAAgBgnB,EAAItjB,aAAa4Y,GACjC/b,WAAYymB,EAAIzmB,WAAaymB,EAAInkB,mBACjCpD,MAAO6c,EACPhc,YAAY,MAIlB,MAGJ,MAIF2nB,EAAkB,GACtB1B,EAAO2B,eAAgB,G,qDCjCvB,IAAI3B,EAAS,WACX,IACIU,EADM9nB,KACG+nB,eAEb,OAHU/nB,KAEGioB,MAAMD,IAAMF,GACf,MAAO,CAAEkB,IAAK,YAEtBF,EAAkB,GACtB1B,EAAO2B,eAAgB,G,qDCPvB,IAAI3B,EAAS,WACX,IAAIS,EAAM7nB,KACN8nB,EAAKD,EAAIE,eACTC,EAAKH,EAAII,MAAMD,IAAMF,EACzB,OAAOE,EACL,MACA,CAAEE,YAAa,MAAOe,MAAO,CAAEC,QAAuB,SAAdrB,EAAIhgB,QAC5C,CACEmgB,EACE,MACA,CACEmB,WAAY,CACV,CACExoB,KAAM,OACNyoB,QAAS,SACT9oB,MAAqB,SAAdunB,EAAIhgB,MACXuH,WAAY,qBAGhB8Y,YAAa,mBAEf,CACEF,EAAG,MAAO,CAAEE,YAAa,cAAgB,CACvCL,EAAIM,GAAG,mCAETN,EAAIM,GAAG,KACPH,EACE,MACA,CAAEE,YAAa,gBACf,CACEF,EAAG,WAAY,CACbY,MAAO,CACLxnB,WAAYymB,EAAIzmB,WAChB,kBAAmBymB,EAAItkB,mBAI7B,KAINskB,EAAIM,GAAG,KACPH,EACE,MACA,CAAEE,YAAa,kBACf,CACEF,EAAG,MAAO,CAAEE,YAAa,cAAgB,CACvCL,EAAIM,GAAG,kCAETN,EAAIM,GAAG,KACPH,EAAG,SAAU,CACXE,YAAa,eACbU,MAAO,CACLrjB,SAAwB,SAAdsiB,EAAIhgB,MACdrC,WAAYqiB,EAAIriB,YAElB6jB,MAAO,CACL/oB,MAAOunB,EAAIlgB,KACX2hB,SAAU,SAASC,GACjB1B,EAAIlgB,KAAO4hB,GAEbna,WAAY,UAGhByY,EAAIM,GAAG,KACPH,EAAG,MAAO,CAAEE,YAAa,eAAiB,CAC1B,SAAdL,EAAIhgB,MACAmgB,EACE,SACA,CAAEE,YAAa,aAAcK,GAAI,CAAEC,MAAOX,EAAIxd,MAC9C,CAACwd,EAAIM,GAAG,SAEVN,EAAIQ,KACRR,EAAIM,GAAG,KACO,SAAdN,EAAIhgB,MACAmgB,EACE,SACA,CAAEE,YAAa,aAAcK,GAAI,CAAEC,MAAOX,EAAI2B,cAC9C,CAAC3B,EAAIM,GAAG,mBAEVN,EAAIQ,KACRR,EAAIM,GAAG,KACO,WAAdN,EAAIhgB,MACAmgB,EACE,SACA,CAAEE,YAAa,aAAcK,GAAI,CAAEC,MAAOX,EAAI4B,SAC9C,CAAC5B,EAAIM,GAAG,YAEVN,EAAIQ,KACRR,EAAIM,GAAG,KACO,WAAdN,EAAIhgB,MACAmgB,EACE,SACA,CACEE,YAAa,aACbK,GAAI,CACFC,MAAO,SAASC,GACd,OAAOZ,EAAI6B,eAAc,MAI/B,CAAC7B,EAAIM,GAAG,UAEVN,EAAIQ,KACRR,EAAIM,GAAG,KACO,WAAdN,EAAIhgB,MACAmgB,EACE,SACA,CACEE,YAAa,aACbK,GAAI,CACFC,MAAO,SAASC,GACd,OAAOZ,EAAI6B,eAAc,MAI/B,CAAC7B,EAAIM,GAAG,aAEVN,EAAIQ,KACRR,EAAIM,GAAG,KACO,WAAdN,EAAIhgB,MACAmgB,EACE,SACA,CAAEE,YAAa,aAAcK,GAAI,CAAEC,MAAOX,EAAI8B,OAC9C,CAAC9B,EAAIM,GAAG,UAEVN,EAAIQ,KACRR,EAAIM,GAAG,KACO,SAAdN,EAAIhgB,MACAmgB,EACE,SACA,CAAEE,YAAa,aAAcK,GAAI,CAAEC,MAAOX,EAAI3d,QAC9C,CAAC2d,EAAIM,GAAG,WAEVN,EAAIQ,KACRR,EAAIM,GAAG,KACO,SAAdN,EAAIhgB,MACAmgB,EACE,SACA,CAAEE,YAAa,aAAcK,GAAI,CAAEC,MAAOX,EAAI8B,OAC9C,CAAC9B,EAAIM,GAAG,UAEVN,EAAIQ,QAGZ,GAEFR,EAAIM,GAAG,KACPH,EAAG,MAAO,CAAEE,YAAa,oBAAsB,CAC7CF,EAAG,MAAO,CAAEE,YAAa,cAAgB,CACvCL,EAAIM,GAAG,oCAETN,EAAIM,GAAG,KACPH,EAAG,MAAO,CAAEgB,IAAK,SAAUd,YAAa,4BAA8B,CACpEF,EAAG,MAAO,CAAEE,YAAa,UAAY,CAACL,EAAIM,GAAGN,EAAIO,GAAGP,EAAI1iB,aAE1D0iB,EAAIM,GAAG,KACO,WAAdN,EAAIhgB,MACAmgB,EAAG,QAAS,CACVmB,WAAY,CACV,CACExoB,KAAM,QACNyoB,QAAS,UACT9oB,MAAOunB,EAAIjgB,SACXwH,WAAY,aAGhB8Y,YAAa,mBACbU,MAAO,CAAE9nB,KAAM,OAAQ8oB,YAAa,gBACpCC,SAAU,CAAEvpB,MAAOunB,EAAIjgB,UACvB2gB,GAAI,CACFuB,QAAS,SAASrB,GAChB,OACGA,EAAO3nB,KAAK+d,QAAQ,QACrBgJ,EAAIkC,GAAGtB,EAAOuB,QAAS,QAAS,GAAIvB,EAAO1mB,IAAK,SAEzC,KAEF8lB,EAAIoC,QAAQxB,IAErByB,MAAO,SAASzB,GACVA,EAAOnP,OAAO6Q,YAGlBtC,EAAIjgB,SAAW6gB,EAAOnP,OAAOhZ,WAInCunB,EAAIQ,UAKZS,EAAkB,GACtB1B,EAAO2B,eAAgB,G","file":"main.34fba60c.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vue_1 = __importDefault(require(\"vue\"));\nvar EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"stringKeyProp\"] = 0] = \"stringKeyProp\";\n    EntryType[EntryType[\"stringKeyGetSet\"] = 1] = \"stringKeyGetSet\";\n    EntryType[EntryType[\"stringKeyError\"] = 2] = \"stringKeyError\";\n    EntryType[EntryType[\"symbolKeyProp\"] = 3] = \"symbolKeyProp\";\n    EntryType[EntryType[\"symbolKeyGetSet\"] = 4] = \"symbolKeyGetSet\";\n    EntryType[EntryType[\"symbolKeyError\"] = 5] = \"symbolKeyError\";\n    EntryType[EntryType[\"prototype\"] = 6] = \"prototype\";\n})(EntryType || (EntryType = {}));\nexports.default = vue_1.default.extend({\n    name: 'DebuggerValue',\n    props: {\n        initialExpand: {\n            type: Boolean,\n            default: false\n        },\n        isError: {\n            type: Boolean,\n            default: false\n        },\n        displayKey: {\n            type: String,\n            default: null\n        },\n        forcedProp: {\n            type: Boolean,\n            default: false\n        },\n        refreshKey: {\n            type: Number,\n            default: 0\n        },\n        value: {}\n    },\n    data() {\n        return {\n            expand: this.initialExpand,\n            EntryType\n        };\n    },\n    computed: {\n        type() {\n            this.refreshKey;\n            return this.isError ? 'error' : this.value === null ? 'null' : typeof this.value;\n        },\n        serialized() {\n            this.refreshKey;\n            if (this.isError)\n                return String(this.value);\n            if (this.value === undefined)\n                return 'undefined';\n            if (this.value === null)\n                return 'null';\n            if (typeof this.value === 'object')\n                return 'Object {}';\n            if (typeof this.value === 'function')\n                return 'function';\n            if (typeof this.value === 'number')\n                return String(this.value);\n            return JSON.stringify(this.value);\n        },\n        childEntries() {\n            this.refreshKey;\n            if (this.type !== 'object' && this.type !== 'function') {\n                return [];\n            }\n            const keys = Reflect.ownKeys(this.value);\n            const entries = [];\n            for (let key of keys) {\n                const desc = Reflect.getOwnPropertyDescriptor(this.value, key);\n                if (typeof key === 'string') {\n                    try {\n                        if ('value' in desc || this.forcedProp) {\n                            entries.push([EntryType.stringKeyProp, this.wrapIdentifier(key), this.value[key]]);\n                        }\n                        else {\n                            entries.push([EntryType.stringKeyGetSet, 'get/set ' + this.wrapIdentifier(key), desc]);\n                        }\n                    }\n                    catch (err) {\n                        if ('value' in desc || this.forcedProp) {\n                            entries.push([EntryType.stringKeyError, this.wrapIdentifier(key), String(err)]);\n                        }\n                        else {\n                            entries.push([EntryType.stringKeyError, 'get/set ' + this.wrapIdentifier(key), String(err)]);\n                        }\n                    }\n                }\n                else {\n                    try {\n                        if ('value' in desc || this.forcedProp) {\n                            entries.push([EntryType.symbolKeyProp, this.wrapIdentifier(key.toString()), this.value[key]]);\n                        }\n                        else {\n                            entries.push([EntryType.stringKeyGetSet, 'get/set ' + this.wrapIdentifier(key.toString()), desc]);\n                        }\n                    }\n                    catch (err) {\n                        if ('value' in desc || this.forcedProp) {\n                            entries.push([EntryType.symbolKeyError, this.wrapIdentifier(key.toString()), String(err)]);\n                        }\n                        else {\n                            entries.push([EntryType.symbolKeyError, 'get/set ' + this.wrapIdentifier(key.toString()), String(err)]);\n                        }\n                    }\n                }\n            }\n            const proto = Reflect.getPrototypeOf(this.value);\n            if (proto != null) {\n                entries.push([EntryType.prototype, '[[prototype]]', proto]);\n            }\n            return entries;\n        }\n    },\n    methods: {\n        wrapIdentifier(str) {\n            if (!/[\"'\\(\\)\\r\\n]/.test(str)) {\n                return str;\n            }\n            return JSON.stringify(str);\n        }\n    }\n});\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vue_1 = __importDefault(require(\"vue\"));\nconst debugger_value_vue_1 = __importDefault(require(\"./debugger-value.vue\"));\nlet id = 0;\nlet map = new WeakMap();\nconst getKey = (obj) => {\n    if (!map.has(obj)) {\n        const newId = id++;\n        map.set(obj, newId);\n    }\n    return map.get(obj);\n};\nexports.default = vue_1.default.extend({\n    components: {\n        DebuggerValue: debugger_value_vue_1.default\n    },\n    props: {\n        stackContainer: {\n            type: Object,\n            default() {\n                return { stack: [] };\n            }\n        },\n        refreshKey: {\n            type: Number,\n            default: 0\n        }\n    },\n    data() {\n        return {\n            refreshKeyInternal: Math.random()\n        };\n    },\n    computed: {\n        scopes() {\n            const stack = this.stackContainer.stack;\n            const top = stack[stack.length - 1];\n            return top ? top[2 /* scopes */].slice(0).reverse() : [];\n        }\n    },\n    methods: {\n        getKey,\n        isGlobalThis(v) {\n            return v === globalThis;\n        }\n    }\n});\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst monaco = __importStar(require(\"monaco-editor\"));\nconst vue_1 = __importDefault(require(\"vue\"));\nfunction withNonReactive(data) {\n    return () => data;\n}\nexports.default = vue_1.default.extend({\n    props: {\n        value: {\n            type: String,\n            default: ''\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        highlights: {\n            type: Array,\n            default() {\n                return [];\n            }\n        }\n    },\n    data() {\n        return withNonReactive({})();\n    },\n    computed: {\n        highlightSerialized() {\n            return JSON.stringify(this.highlights);\n        }\n    },\n    watch: {\n        value(newVal) {\n            const editor = this.editor;\n            const current = editor.getValue();\n            if (current !== newVal) {\n                editor.setValue(newVal);\n            }\n        },\n        readonly(newVal) {\n            this.editor.updateOptions({\n                readOnly: newVal\n            });\n        },\n        highlightSerialized() {\n            this.currentDecorations = this.editor.deltaDecorations(this.currentDecorations, this.highlights.map(([r1, c1, r2, c2]) => ({\n                range: new monaco.Range(r1, c1, r2, c2),\n                options: { inlineClassName: 'inline-highlight' }\n            })));\n        }\n    },\n    mounted() {\n        this.currentDecorations = [];\n        const editor = this.editor = monaco.editor.create(this.$refs.editor, {\n            value: this.value,\n            language: 'javascript',\n            scrollBeyondLastLine: false,\n            automaticLayout: true\n        });\n        editor.onDidChangeModelContent(ev => {\n            const value = editor.getValue();\n            if (value !== this.value) {\n                this.$emit('input', editor.getValue());\n            }\n        });\n        if (this.readonly) {\n            this.editor.updateOptions({\n                readOnly: true\n            });\n        }\n        if (this.highlights.length > 0) {\n            this.currentDecorations = this.editor.deltaDecorations(this.currentDecorations, this.highlights.map(([r1, c1, r2, c2]) => ({\n                range: new monaco.Range(r1, c1, r2, c2),\n                options: { inlineClassName: 'inline-highlight' }\n            })));\n        }\n    }\n});\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst src_1 = require(\"../src\");\nconst vue_1 = __importDefault(require(\"vue\"));\nconst monaco_vue_1 = __importDefault(require(\"./components/monaco.vue\"));\nconst debugger_vue_1 = __importDefault(require(\"./components/debugger.vue\"));\nfunction withNonReactive(data) {\n    return () => data;\n}\nfunction makeGlobalThis() {\n    const names = [\n        'Infinity',\n        'NaN',\n        'undefined',\n        'Math',\n        'isFinite',\n        'isNaN',\n        'parseFloat',\n        'parseInt',\n        'decodeURI',\n        'decodeURIComponent',\n        'encodeURI',\n        'encodeURIComponent',\n        'Array',\n        'ArrayBuffer',\n        'Boolean',\n        'DataView',\n        'Date',\n        'Error',\n        'EvalError',\n        'Float32Array',\n        'Float64Array',\n        'Function',\n        'Int8Array',\n        'Int16Array',\n        'Int32Array',\n        'Map',\n        'Number',\n        'Object',\n        'Promise',\n        'Proxy',\n        'RangeError',\n        'ReferenceError',\n        'RegExp',\n        'Set',\n        'SharedArrayBuffer',\n        'String',\n        'Symbol',\n        'SyntaxError',\n        'TypeError',\n        'Uint8Array',\n        'Uint8ClampedArray',\n        'Uint16Array',\n        'Uint32Array',\n        'URIError',\n        'WeakMap',\n        'WeakSet',\n        'Atomics',\n        'JSON',\n        'Reflect',\n        'escape',\n        'unescape',\n        'Intl',\n        'eval'\n    ];\n    const obj = {};\n    for (let name of names) {\n        if (Reflect.has(globalThis, name)) {\n            obj[name] = globalThis[name];\n        }\n    }\n    Reflect.defineProperty(obj, 'globalThis', {\n        enumerable: true,\n        configurable: false,\n        value: obj\n    });\n    return obj;\n}\nconst fakeGlobalThis = makeGlobalThis();\nexports.default = vue_1.default.extend({\n    components: {\n        Monaco: monaco_vue_1.default,\n        Debugger: debugger_vue_1.default\n    },\n    data() {\n        return withNonReactive({\n            text: `clear()\nconst start = Date.now()\nlet a = 0\n\nconst fn = (b) => {\n  print(b)\n}\n\nprint(eval('a'))\n\nfor (let i = 0; i < 5; i++) {\n  a = a + 1\n  fn(a)\n}\n\nprint(a)\n\ndo {\n  try {\n    print(1)\n    throw new Error('')\n  } finally {\n    break\n  }\n} while (false)\n\nObject.defineProperty(Object.prototype, '__magic__', {\n\tget: function() {\n\t\treturn this;\n\t},\n\tconfigurable: true\n});\nprint(Object.keys(__magic__));\ndelete Object.prototype.__magic__;\n\ndebugger\nprint('total time: ' + (Date.now() - start) + 'ms')\n\n`,\n            result: '',\n            replText: '',\n            stackContainer: {\n                stack: []\n            },\n            state: 'idle',\n            refreshKey: Math.random(),\n            debugInfo: { sourceMap: [], internals: [] },\n            highlights: []\n        })();\n    },\n    watch: {\n        async result() {\n            const container = this.$refs.result;\n            await this.$nextTick();\n            if (container.scrollHeight - container.offsetHeight > container.scrollTop) {\n                container.scrollTop = container.scrollHeight - container.offsetHeight;\n            }\n        }\n    },\n    methods: {\n        printError(err) {\n            this.result += String(err) + '\\n';\n            if (err != null && typeof err === 'object') {\n                if ('stack' in err) {\n                    this.result += err.stack + '\\n';\n                }\n            }\n        },\n        stepExecution(stepIn = false) {\n            const execution = this.execution;\n            let stack = execution[21 /* stack */];\n            this.stackContainer = {\n                get stack() {\n                    return stack;\n                }\n            };\n            let result;\n            try {\n                const getPos = () => {\n                    const currentPosition = execution[20 /* ptr */];\n                    return this.debugInfo.sourceMap[currentPosition];\n                };\n                const originalPos = getPos().join(',');\n                const getCurrentStackLength = () => execution[21 /* stack */].filter(it => it[0 /* type */] === 0 /* Function */).length;\n                let maxStack = getCurrentStackLength();\n                let skipping = false;\n                let firstIgnored = false;\n                do {\n                    result = execution[23 /* step */](true);\n                    if (!skipping) {\n                        skipping = stepIn ? false : getCurrentStackLength() > maxStack;\n                    }\n                    else /** if (skipping) */ {\n                        if (!firstIgnored && getCurrentStackLength() <= maxStack) {\n                            firstIgnored = true;\n                        }\n                        else if (firstIgnored) {\n                            firstIgnored = false;\n                            skipping = false;\n                        }\n                    }\n                    maxStack = Math.min(maxStack, getCurrentStackLength());\n                } while ((getPos().join(',') === originalPos ||\n                    this.debugInfo.internals[execution[20 /* ptr */]] ||\n                    skipping)\n                    && !result.done);\n                this.refreshKey = Math.random();\n                const [r1, c1, r2, c2] = getPos();\n                this.highlights = [[r1 + 1, c1 + 1, r2 + 1, c2 + 1]];\n                if (result.done) {\n                    this.state = 'idle';\n                }\n                if (this.state === 'idle') {\n                    this.highlights = [];\n                }\n            }\n            catch (err) {\n                this.printError(err);\n                this.state = 'idle';\n                this.highlights = [];\n            }\n        },\n        async runExecution() {\n            this.state = 'play';\n            const execution = this.execution;\n            let stack = this.execution[21 /* stack */];\n            this.stackContainer = {\n                get stack() {\n                    return stack;\n                }\n            };\n            let result;\n            const getPos = () => {\n                const currentPosition = execution[20 /* ptr */];\n                return this.debugInfo.sourceMap[currentPosition];\n            };\n            let prevPos = getPos().join('');\n            try {\n                do {\n                    result = execution[23 /* step */](true);\n                    if (getPos().join('') !== prevPos && !this.debugInfo.internals[execution[20 /* ptr */]]) {\n                        let stack = execution[21 /* stack */];\n                        this.stackContainer = {\n                            get stack() {\n                                return stack;\n                            }\n                        };\n                        this.refreshKey = Math.random();\n                        const [r1, c1, r2, c2] = getPos();\n                        this.highlights = [[r1 + 1, c1 + 1, r2 + 1, c2 + 1]];\n                        await new Promise(r => setTimeout(r, 200));\n                    }\n                    prevPos = getPos().join('');\n                } while (this.state === 'play' && !result.done);\n                if (this.state === 'paused') {\n                    const [r1, c1, r2, c2] = getPos();\n                    this.highlights = [[r1 + 1, c1 + 1, r2 + 1, c2 + 1]];\n                }\n                if (result.done) {\n                    this.state = 'idle';\n                }\n                if (this.state === 'idle') {\n                    this.highlights = [];\n                }\n            }\n            catch (err) {\n                this.printError(err);\n                this.state = 'idle';\n                this.highlights = [];\n            }\n        },\n        run() {\n            const clear = (val) => {\n                this.result = '';\n            };\n            const print = (val) => {\n                this.result += JSON.stringify(val, undefined, 2) + '\\n';\n            };\n            let programData, textData, debugInfo;\n            try {\n                [programData, textData, debugInfo] = src_1.compile(this.text, { range: true });\n            }\n            catch (err) {\n                this.printError(err);\n                return;\n            }\n            this.debugInfo = debugInfo;\n            this.program = programData;\n            this.execution = src_1.getExecution(programData, textData, 0, fakeGlobalThis, [{ print, clear, __proto__: null }], undefined, [], () => () => this.pause(), src_1.compile);\n            this.runExecution();\n        },\n        runAndPause() {\n            const clear = (val) => {\n                this.result = '';\n            };\n            const print = (val) => {\n                this.result += JSON.stringify(val, undefined, 2) + '\\n';\n            };\n            let programData, textData, debugInfo;\n            try {\n                [programData, textData, debugInfo] = src_1.compile(this.text, { range: true });\n            }\n            catch (err) {\n                this.printError(err);\n                return;\n            }\n            this.debugInfo = debugInfo;\n            this.program = programData;\n            this.execution = src_1.getExecution(programData, textData, 0, fakeGlobalThis, [{ print, clear, __proto__: null }], undefined, [], () => () => this.pause(), src_1.compile);\n            this.pause();\n        },\n        pause() {\n            this.state = 'paused';\n            // force non reactive\n            let stack = this.execution[21 /* stack */];\n            this.stackContainer = {\n                get stack() {\n                    return stack;\n                }\n            };\n            this.refreshKey = Math.random();\n        },\n        resume() {\n            this.runExecution();\n        },\n        stop() {\n            this.highlights = [];\n            this.state = 'idle';\n        },\n        runRepl() {\n            const text = this.replText;\n            this.replText = '';\n            let programData, textData;\n            this.result += '> ' + text + '\\n';\n            try {\n                [programData, textData] = src_1.compile(text, { evalMode: true });\n            }\n            catch (err) {\n                this.printError(err);\n                return;\n            }\n            try {\n                const result = src_1.run(programData, textData, 0, fakeGlobalThis, [...this.execution[2 /* scopes */]]);\n                this.result += result + '\\n';\n            }\n            catch (err) {\n                this.printError(err);\n            }\n        }\n    }\n});\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compile = exports.getNameOfKind = exports.isSmallNumber = exports.TEXT_DADA_MASK = void 0;\nconst ts = __importStar(require(\"typescript\"));\nexports.TEXT_DADA_MASK = 0x80000000;\nconst isSmallNumber = (a) => {\n    return typeof a === 'number' && ((a | 0) === a) && ((a & exports.TEXT_DADA_MASK) === 0);\n};\nexports.isSmallNumber = isSmallNumber;\nconst abort = (msg) => {\n    throw new Error(msg);\n};\nfunction findAncient(node, parentMap, predicate) {\n    let parent = parentMap.get(node)?.node;\n    while (parent !== undefined) {\n        if (predicate(parent)) {\n            return parent;\n        }\n        parent = parentMap.get(parent)?.node;\n    }\n}\nfunction markParent(node, parentMap) {\n    function findFunction(node) {\n        for (let [key, v] of Object.entries(node)) {\n            if (key === 'parent')\n                continue;\n            if (Array.isArray(v)) {\n                for (let item of v) {\n                    if (item !== null && typeof item === 'object' && typeof item.kind == 'number') {\n                        parentMap.set(item, { key, node });\n                    }\n                }\n            }\n            else if (v !== null && typeof v === 'object' && typeof v.kind == 'number') {\n                parentMap.set(v, { key, node });\n            }\n        }\n        node.forEachChild(findFunction);\n    }\n    findFunction(node);\n}\nfunction isScopeRoot(node) {\n    return ts.isSourceFile(node) ||\n        (ts.isFunctionLike(node)\n            && !ts.isCallSignatureDeclaration(node)\n            && !ts.isConstructSignatureDeclaration(node)\n            && !ts.isMethodSignature(node)\n            && !ts.isIndexSignatureDeclaration(node)\n            && !ts.isTypeNode(node));\n}\nfunction extractVariable(node) {\n    if (ts.isIdentifier(node)) {\n        return [node];\n    }\n    if (ts.isArrayBindingPattern(node)) {\n        const n = node;\n        let list = [];\n        for (const el of n.elements) {\n            if (ts.isIdentifier(el)) {\n                list.push(el);\n            }\n            if (ts.isObjectBindingPattern(el) || ts.isArrayBindingPattern(el)) {\n                list = [...list, ...extractVariable(el)];\n            }\n        }\n        return list;\n    }\n    if (ts.isObjectBindingPattern(node)) {\n        const n = node;\n        let list = [];\n        for (const el of n.elements) {\n            // includes { ...a }\n            if (ts.isIdentifier(el.name)) {\n                if (el.propertyName === undefined) {\n                    list.push(el.name);\n                }\n            }\n            if (el.propertyName) {\n                if (ts.isIdentifier(el.name)) {\n                    list.push(el.name);\n                }\n                if (ts.isObjectBindingPattern(el.name) || ts.isArrayBindingPattern(el.name)) {\n                    list = [...list, ...extractVariable(el.name)];\n                }\n            }\n        }\n        return list;\n    }\n    return [];\n}\nfunction searchFunctionAndScope(node, parentMap, functions, scopes) {\n    function findFunction(node) {\n        if (isScopeRoot(node)) {\n            functions.add(node);\n            scopes.set(node, new Map());\n        }\n        switch (node.kind) {\n            case ts.SyntaxKind.Block:\n                let pair = parentMap.get(node);\n                if (pair\n                    && pair.key === 'body'\n                    && (ts.isConstructorDeclaration(pair.node) ||\n                        ts.isFunctionDeclaration(pair.node) ||\n                        ts.isFunctionExpression(pair.node) ||\n                        ts.isArrowFunction(pair.node) ||\n                        ts.isMethodDeclaration(pair.node) ||\n                        ts.isAccessor(pair.node))) {\n                    break; // this is the body of function, method, constructor\n                }\n            case ts.SyntaxKind.ForStatement:\n            case ts.SyntaxKind.ForInStatement:\n            case ts.SyntaxKind.SwitchStatement:\n            case ts.SyntaxKind.CaseBlock:\n                scopes.set(node, new Map());\n        }\n        node.forEachChild(findFunction);\n    }\n    findFunction(node);\n}\nfunction resolveScopes(node, parentMap, functions, scopes) {\n    function findFunction(node) {\n        if (ts.isVariableDeclarationList(node)) {\n            const variables = node.declarations.map(d => extractVariable(d.name)).flat();\n            const blockScoped = node.flags & ts.NodeFlags.BlockScoped;\n            let block;\n            if (blockScoped) {\n                block = findAncient(node, parentMap, node => scopes.has(node));\n            }\n            else {\n                block = findAncient(node, parentMap, node => functions.has(node));\n            }\n            if (block === undefined) {\n                throw new Error('unresolvable variable');\n            }\n            for (const v of variables) {\n                scopes.get(block).set(v.text, {\n                    type: node.flags & ts.NodeFlags.Const ? 3 /* Const */ :\n                        node.flags & ts.NodeFlags.Let ? 2 /* Let */ :\n                            1 /* Var */\n                });\n            }\n        }\n        if (ts.isForInStatement(node)) {\n            scopes.get(node).set(\"[iter]\" /* LoopIterator */, {\n                type: 1 /* Var */\n            });\n            scopes.get(node).set(\"[entry]\" /* IteratorEntry */, {\n                type: 1 /* Var */\n            });\n        }\n        if (ts.isFunctionDeclaration(node)) {\n            const parentFn = findAncient(node, parentMap, node => functions.has(node));\n            if (parentFn === undefined) {\n                throw new Error('unresolvable variable');\n            }\n            scopes.get(parentFn).set(node.name.text, {\n                type: 5 /* Function */,\n                node: node\n            });\n        }\n        if (ts.isFunctionLike(node)) {\n            for (const el of node.parameters) {\n                const variables = extractVariable(el.name);\n                const scope = scopes.get(node);\n                if (scope === undefined) {\n                    throw new Error('unresolvable variable');\n                }\n                for (const v of variables) {\n                    scope.set(v.text, {\n                        type: 4 /* Parameter */\n                    });\n                }\n            }\n        }\n        node.forEachChild(findFunction);\n    }\n    findFunction(node);\n}\nfunction linkScopes(node, parentMap, scopes, scopeChild) {\n    function findFunction(node) {\n        const item = scopes.get(node);\n        if (item && item.size > 0) {\n            const parent = findAncient(node, parentMap, node => (scopes.get(node)?.size ?? 0) > 0);\n            if (parent) {\n                scopeChild.set(parent, new Set([node, ...(scopeChild.get(parent) ?? new Set())]));\n            }\n        }\n        node.forEachChild(findFunction);\n    }\n    findFunction(node);\n}\n/* istanbul ignore next */\nconst mapVariables = (scopes, scopeChild) => {\n    const hasParent = new Set();\n    for (let v of scopeChild.values()) {\n        for (let v1 of v)\n            hasParent.add(v1);\n    }\n    const roots = new Set();\n    for (let k of scopeChild.keys()) {\n        if (!hasParent.has(k)) {\n            roots.add(k);\n        }\n    }\n    function map(node) {\n        const scope = scopes.get(node);\n        const names = [...scope.entries()].map(([k, v]) => k + ':' + v.type);\n        const children = [];\n        if (scopeChild.has(node)) {\n            for (const node1 of scopeChild.get(node)) {\n                children.push(map(node1));\n            }\n        }\n        return {\n            names,\n            children\n        };\n    }\n    return [...roots].map(map);\n};\nfunction headOf(arr) {\n    if (arr.length === 0) {\n        throw new Error('empty array');\n    }\n    return arr[0];\n}\nfunction getNameOfKind(kind) {\n    let name = ts.SyntaxKind[kind];\n    if (name.match(/^First|^Last/)) {\n        for (let [k, v] of Object.entries(ts.SyntaxKind)) {\n            if (v === kind && k !== name) {\n                return k;\n            }\n        }\n    }\n    return name;\n}\nexports.getNameOfKind = getNameOfKind;\nfunction op(op, length = 1, preData = []) {\n    return {\n        op,\n        length,\n        preData,\n        data: [],\n        internal: false,\n        offset: -1\n    };\n}\nfunction generateVariableList(node, scopes) {\n    const variables = scopes.get(node);\n    return markInternals([...variables].map(([name, type]) => [\n        op(1 /* Literal */, 2, [name]),\n        op(1 /* Literal */, 2, [type.type])\n    ]).flat().concat([\n        op(1 /* Literal */, 2, [variables.size])\n    ]));\n}\nfunction generateEnterScope(node, scopes) {\n    const result = [\n        ...generateVariableList(node, scopes),\n        op(12 /* EnterScope */)\n    ];\n    if (result.length <= 2) {\n        throw new Error('tries to generate empty block');\n    }\n    return markInternals(result);\n}\nfunction generateLeaveScope(node) {\n    return markInternals([\n        op(13 /* LeaveScope */)\n    ]);\n}\nconst nextOps = new Map();\nconst continueOps = new Map();\nconst markInternals = (ops) => {\n    for (let op of ops) {\n        op.internal = true;\n    }\n    return ops;\n};\nconst markInternal = (op) => {\n    op.internal = true;\n    return op;\n};\nfunction generateSegment(node, scopes, parentMap, functions, { withPos = false, withEval = false, withStrict = false } = {}) {\n    let functionDeclarations = [];\n    function extractQuote(node) {\n        if (ts.isParenthesizedExpression(node)) {\n            return node.expression;\n        }\n        else {\n            return node;\n        }\n    }\n    function generateLeft(node, flag) {\n        const res = generateLeft_(node, flag);\n        if (withPos) {\n            for (const op of res) {\n                if (op.source == null\n                    || op.source.end - op.source.start > node.end - node.getStart()) {\n                    op.source = {\n                        start: node.getStart(),\n                        end: node.end\n                    };\n                }\n            }\n        }\n        return res;\n    }\n    function generateLeft_(node, flag) {\n        const rawNode = extractQuote(node);\n        if (rawNode.kind === ts.SyntaxKind.ThisKeyword) {\n            return [\n                op(17 /* GetRecord */),\n                op(1 /* Literal */, 2, [\"[this]\" /* This */])\n            ];\n        }\n        if (ts.isIdentifier(rawNode)) {\n            return [\n                op(17 /* GetRecord */),\n                op(1 /* Literal */, 2, [rawNode.text])\n            ];\n        }\n        if (ts.isPropertyAccessExpression(rawNode) && ts.isIdentifier(rawNode.name)) {\n            return [\n                ...generate(rawNode.expression, flag),\n                op(1 /* Literal */, 2, [rawNode.name.text])\n            ];\n        }\n        if (ts.isElementAccessExpression(rawNode)) {\n            return [\n                ...generate(rawNode.expression, flag),\n                ...generate(rawNode.argumentExpression, flag)\n            ];\n        }\n        throw new Error('not supported left node: ' + getNameOfKind(rawNode.kind));\n    }\n    function generate(node, flag) {\n        const res = generate_(node, flag);\n        if (withPos) {\n            for (const op of res) {\n                if (op.source == null\n                    || op.source.end - op.source.start > node.end - node.getStart()) {\n                    op.source = {\n                        start: node.getStart(),\n                        end: node.end\n                    };\n                }\n            }\n        }\n        return res;\n    }\n    function generate_(node, flag) {\n        switch (node.kind) {\n            case ts.SyntaxKind.TrueKeyword:\n                return [op(1 /* Literal */, 2, [true])];\n            case ts.SyntaxKind.FalseKeyword:\n                return [op(1 /* Literal */, 2, [false])];\n            case ts.SyntaxKind.NullKeyword:\n                return [op(2 /* NullLiteral */)];\n            case ts.SyntaxKind.EmptyStatement:\n                return [op(0 /* Nop */, 0)];\n            case ts.SyntaxKind.ThisKeyword:\n                return [\n                    op(17 /* GetRecord */),\n                    op(1 /* Literal */, 2, [\"[this]\" /* This */]),\n                    op(23 /* Get */)\n                ];\n        }\n        if (ts.isIdentifier(node) && node.text === 'undefined') {\n            return [op(3 /* UndefinedLiteral */)];\n        }\n        if (ts.isVariableDeclarationList(node)) {\n            const ops = [];\n            for (let declaration of node.declarations) {\n                if (!ts.isIdentifier(declaration.name)) {\n                    throw new Error('not support pattern yet');\n                }\n                if (declaration.initializer) {\n                    ops.push(...generateLeft(declaration.name, flag));\n                    ops.push(...generate(declaration.initializer, flag));\n                    ops.push(op(18 /* SetInitialized */));\n                    ops.push(op(14 /* Pop */));\n                    if (node.flags & ts.NodeFlags.Const) {\n                        ops.push(...markInternals([\n                            ...generateLeft(declaration.name, flag),\n                            op(25 /* FreezeVariable */),\n                            op(14 /* Pop */),\n                            op(14 /* Pop */)\n                        ]));\n                    }\n                }\n                else if (node.flags & ts.NodeFlags.Let) {\n                    // unblock without doing anything\n                    ops.push(...generateLeft(declaration.name, flag), op(24 /* DeTDZ */), op(14 /* Pop */), op(14 /* Pop */));\n                }\n                else {\n                    // a var without value effectively does nothing\n                    // the variable already handled by the scope step\n                }\n            }\n            return ops;\n        }\n        if (ts.isVariableStatement(node)) {\n            return generate(node.declarationList, flag);\n        }\n        if (ts.isStringLiteral(node)) {\n            return [op(1 /* Literal */, 2, [node.text])];\n        }\n        if (ts.isExpressionStatement(node)) {\n            if (flag & 8 /* Eval */ && !(flag & 4 /* Finally */)) {\n                return [\n                    ...generate(node.expression, flag),\n                    op(15 /* SetEvalResult */),\n                    op(14 /* Pop */)\n                ];\n            }\n            else {\n                return [\n                    ...generate(node.expression, flag),\n                    op(14 /* Pop */)\n                ];\n            }\n        }\n        if (ts.isNumericLiteral(node)) {\n            return [op(1 /* Literal */, 2, [Number(node.text)])];\n        }\n        if (ts.isArrowFunction(node)) {\n            return [\n                op(1 /* Literal */, 2, ['']),\n                op(4 /* NodeOffset */, 2, [node]),\n                op(5 /* NodeFunctionType */, 2, [node]),\n                op(26 /* DefineFunction */)\n            ];\n        }\n        if (ts.isConditionalExpression(node)) {\n            const condition = generate(node.condition, flag);\n            const positive = [op(0 /* Nop */, 0), ...generate(node.whenTrue, flag)];\n            const negative = [op(0 /* Nop */, 0), ...generate(node.whenFalse, flag)];\n            const end = [op(0 /* Nop */, 0)];\n            return [\n                op(4 /* NodeOffset */, 2, [headOf(negative)]),\n                ...condition,\n                op(6 /* JumpIfNot */),\n                ...positive,\n                op(4 /* NodeOffset */, 2, [headOf(end)]),\n                op(8 /* Jump */),\n                ...negative,\n                ...end\n            ];\n        }\n        if (ts.isFunctionExpression(node)) {\n            return [\n                op(1 /* Literal */, 2, [node.name?.text ?? '']),\n                op(4 /* NodeOffset */, 2, [node]),\n                op(5 /* NodeFunctionType */, 2, [node]),\n                op(26 /* DefineFunction */)\n            ];\n        }\n        // hoist it\n        if (ts.isFunctionDeclaration(node)) {\n            functionDeclarations.push(node);\n            return [];\n        }\n        if (ts.isBlock(node)) {\n            const variableCount = scopes.get(node)?.size ?? 0;\n            if (variableCount > 0) {\n                return [\n                    ...generateEnterScope(node, scopes),\n                    ...node.statements.map(s => generate(s, flag)).flat(),\n                    ...generateLeaveScope(node)\n                ];\n            }\n            else {\n                return [\n                    op(0 /* Nop */, 0),\n                    ...node.statements.map(s => generate(s, flag)).flat()\n                ];\n            }\n        }\n        if (ts.isIdentifier(node)) {\n            return [\n                op(17 /* GetRecord */),\n                op(1 /* Literal */, 2, [node.text]),\n                op(23 /* Get */)\n            ];\n        }\n        if (ts.isReturnStatement(node)) {\n            if (node.expression !== undefined) {\n                return [\n                    ...generate(node.expression, flag),\n                    (flag & 7 /* TryCatchFlags */) ? op(28 /* ReturnInTryCatchFinally */) : op(27 /* Return */)\n                ];\n            }\n            else {\n                return [\n                    op(3 /* UndefinedLiteral */),\n                    (flag & 7 /* TryCatchFlags */) ? op(28 /* ReturnInTryCatchFinally */) : op(27 /* Return */)\n                ];\n            }\n        }\n        if (ts.isPrefixUnaryExpression(node)) {\n            if (ts.isNumericLiteral(node.operand)) {\n                if (node.operator === ts.SyntaxKind.MinusToken) {\n                    return [\n                        op(1 /* Literal */, 2, [-Number(node.operand.text)]),\n                    ];\n                }\n                else if (node.operator === ts.SyntaxKind.PlusToken) {\n                    return [\n                        op(1 /* Literal */, 2, [+Number(node.operand.text)]),\n                    ];\n                }\n            }\n            // Prefix update\n            switch (node.operator) {\n                case ts.SyntaxKind.PlusPlusToken:\n                    return [\n                        ...generateLeft(node.operand, flag),\n                        op(80 /* PrefixPlusPlus */)\n                    ];\n                case ts.SyntaxKind.MinusMinusToken:\n                    return [\n                        ...generateLeft(node.operand, flag),\n                        op(81 /* PrefixMinusMinus */)\n                    ];\n                default:\n                    const nothing = node.operator;\n            }\n            // Unary\n            const expr = generate(node.operand, flag);\n            switch (node.operator) {\n                case ts.SyntaxKind.PlusToken:\n                    return [...expr, op(76 /* PrefixUnaryPlus */)];\n                case ts.SyntaxKind.MinusToken:\n                    return [...expr, op(77 /* PrefixUnaryMinus */)];\n                case ts.SyntaxKind.ExclamationToken:\n                    return [...expr, op(78 /* PrefixExclamation */)];\n                case ts.SyntaxKind.TildeToken:\n                    return [...expr, op(79 /* PrefixTilde */)];\n                default:\n                    throw new Error('unsupported operator ' + ts.SyntaxKind[node.operator]);\n            }\n        }\n        if (ts.isCallExpression(node)) {\n            const self = extractQuote(node.expression);\n            const args = node.arguments.map(a => generate(a, flag)).flat();\n            if (ts.isElementAccessExpression(self) || ts.isPropertyAccessExpression(self) || ts.isIdentifier(self)) {\n                const leftOps = generateLeft(self, flag);\n                const isEval = ts.isIdentifier(self) && self.text === 'eval';\n                return [\n                    ...leftOps,\n                    ...args,\n                    op(1 /* Literal */, 2, [node.arguments.length]),\n                    isEval ? op(35 /* CallAsEval */) : op(34 /* Call */)\n                ];\n            }\n            else {\n                const leftValue = generate(self, flag);\n                return [\n                    ...leftValue,\n                    ...args,\n                    op(1 /* Literal */, 2, [node.arguments.length]),\n                    op(37 /* CallValue */)\n                ];\n            }\n        }\n        if (ts.isNewExpression(node)) {\n            const self = extractQuote(node.expression);\n            const args = node.arguments?.map(a => generate(a, flag)).flat() ?? [];\n            const leftValue = generate(self, flag);\n            return [\n                ...leftValue,\n                ...args,\n                op(1 /* Literal */, 2, [node.arguments?.length ?? 0]),\n                op(36 /* New */)\n            ];\n        }\n        if (ts.isArrayLiteralExpression(node)) {\n            const res = [\n                op(45 /* ArrayLiteral */)\n            ];\n            const list = node.elements;\n            for (let [index, el] of list.entries()) {\n                if (ts.isSpreadElement(el)) {\n                    throw new Error('no spread support yet');\n                }\n                if (el.kind !== ts.SyntaxKind.OmittedExpression) {\n                    res.push(op(1 /* Literal */, 2, [index]));\n                    res.push(...generate(el, flag));\n                    res.push(op(20 /* SetKeepCtx */));\n                }\n            }\n            return res;\n        }\n        if (ts.isObjectLiteralExpression(node)) {\n            const res = [\n                op(46 /* ObjectLiteral */)\n            ];\n            const list = node.properties;\n            for (let item of list) {\n                if (ts.isShorthandPropertyAssignment(item)) {\n                    res.push(op(1 /* Literal */, 2, [item.name.text]));\n                    res.push(...generate(item.name, flag));\n                    res.push(op(22 /* DefineKeepCtx */));\n                }\n                else {\n                    if (!item.name) {\n                        throw new Error('property must have name');\n                    }\n                    if (ts.isComputedPropertyName(item.name)) {\n                        res.push(...generate(item.name.expression, flag));\n                    }\n                    else if (ts.isIdentifier(item.name)) {\n                        res.push(op(1 /* Literal */, 2, [item.name.text]));\n                    }\n                    else if (ts.isStringLiteral(item.name)\n                        || ts.isNumericLiteral(item.name)) {\n                        res.push(...generate(item.name, flag));\n                    }\n                    else {\n                        throw new Error('not supported');\n                    }\n                    if (ts.isMethodDeclaration(item)) {\n                        res.push(op(16 /* Duplicate */));\n                        res.push(op(4 /* NodeOffset */, 2, [item]));\n                        res.push(op(5 /* NodeFunctionType */, 2, [item]));\n                        res.push(op(26 /* DefineFunction */));\n                        res.push(op(22 /* DefineKeepCtx */));\n                    }\n                    else if (ts.isPropertyAssignment(item)) {\n                        res.push(...generate(item.initializer, flag));\n                        res.push(op(22 /* DefineKeepCtx */));\n                    }\n                    else {\n                        throw new Error('not supported');\n                    }\n                }\n            }\n            return res;\n        }\n        if (ts.isRegularExpressionLiteral(node)) {\n            const source = node.text.replace(/^\\/(.*)\\/(\\w*)$/, '$1');\n            const flags = node.text.replace(/^\\/(.*)\\/(\\w*)$/, '$2');\n            return [\n                op(1 /* Literal */, 2, [source]),\n                op(1 /* Literal */, 2, [flags]),\n                op(47 /* RegexpLiteral */)\n            ];\n        }\n        if (ts.isForStatement(node)) {\n            const nextOp = op(0 /* Nop */, 0);\n            nextOps.set(node, nextOp);\n            const continueOp = op(0 /* Nop */, 0);\n            continueOps.set(node, continueOp);\n            let initializer = node.initializer;\n            let condition = node.condition;\n            let incrementor = node.incrementor;\n            let hasScope = scopes.has(node) && scopes.get(node).size > 0;\n            /**\n             *    entry\n             * |- condition <-\n             * |  body       |\n             * |  update ----|\n             * -> exit\n             */\n            var entry0 = hasScope\n                ? generateEnterScope(node, scopes)\n                : [op(0 /* Nop */, 0)];\n            var entry1 = initializer\n                ? ts.isVariableDeclarationList(initializer)\n                    ? generate(initializer, flag)\n                    : [\n                        ...generate(initializer, flag),\n                        op(14 /* Pop */)\n                    ]\n                : [op(0 /* Nop */, 0)];\n            var exit = hasScope\n                ? generateLeaveScope(node)\n                : [op(0 /* Nop */, 0)];\n            var conditionS = condition\n                ? [\n                    op(4 /* NodeOffset */, 2, [headOf(exit)]),\n                    ...generate(condition, flag),\n                    op(6 /* JumpIfNot */)\n                ]\n                : [\n                    op(0 /* Nop */, 0)\n                ];\n            var update0 = [];\n            if (hasScope && ts.isVariableDeclarationList(initializer)) {\n                for (let item of initializer.declarations) {\n                    if (!ts.isIdentifier(item.name)) {\n                        throw new Error('not support');\n                    }\n                    update0.push(op(1 /* Literal */, 2, [item.name.text]), op(17 /* GetRecord */), op(1 /* Literal */, 2, [item.name.text]), op(23 /* Get */), op(1 /* Literal */, 2, [1 /* DeTDZ */ | ((initializer.flags & ts.NodeFlags.Const) ? 2 /* Freeze */ : 0)]));\n                }\n                update0.push(op(1 /* Literal */, 2, [initializer.declarations.length]), ...generateLeaveScope(node), ...generateEnterScope(node, scopes), op(17 /* GetRecord */), op(21 /* SetMultiple */));\n                for (let item of initializer.declarations) {\n                    if (!ts.isIdentifier(item.name)) {\n                        throw new Error('not support');\n                    }\n                }\n            }\n            var update1 = incrementor\n                ? [\n                    ...generate(incrementor, flag),\n                    op(14 /* Pop */),\n                    op(4 /* NodeOffset */, 2, [headOf(conditionS)]),\n                    op(8 /* Jump */)\n                ]\n                : [\n                    op(4 /* NodeOffset */, 2, [headOf(conditionS)]),\n                    op(8 /* Jump */)\n                ];\n            var body = generate(node.statement, flag);\n            return [\n                ...markInternals(entry0),\n                ...entry1,\n                ...conditionS,\n                ...body,\n                continueOp,\n                ...markInternals(update0),\n                ...update1,\n                ...exit,\n                nextOp\n            ];\n        }\n        if (ts.isIfStatement(node)) {\n            /**\n             * |--condition\n             * |  whenTrue --|\n             * -->whenFalsy  |\n             *    exit     <-|\n             */\n            const exit = [\n                op(0 /* Nop */, 0)\n            ];\n            const whenTrue = [\n                op(0 /* Nop */, 0),\n                ...generate(node.thenStatement, flag),\n                op(4 /* NodeOffset */, 2, [headOf(exit)]),\n                op(8 /* Jump */),\n            ];\n            const whenFalsy = [\n                op(0 /* Nop */, 0),\n                ...(node.elseStatement !== undefined ? generate(node.elseStatement, flag) : [])\n            ];\n            const condition = [\n                op(4 /* NodeOffset */, 2, [headOf(whenFalsy)]),\n                ...generate(node.expression, flag),\n                op(6 /* JumpIfNot */)\n            ];\n            return [...condition, ...whenTrue, ...whenFalsy, ...exit];\n        }\n        // &&\n        if (ts.isBinaryExpression(node)) {\n            switch (node.operatorToken.kind) {\n                case ts.SyntaxKind.AmpersandAmpersandToken:\n                    const left = generate(node.left, flag);\n                    const right = generate(node.right, flag);\n                    const exit = [op(0 /* Nop */, 0)];\n                    /**\n                     *   push evaluate left\n                     *   if not peak() goto Exit\n                     *     pop\n                     *     push evaluate right\n                     *     goto Exit\n                     *   Else:\n                     *     push res\n                     *   Exit:\n                     */\n                    return [\n                        op(4 /* NodeOffset */, 2, [headOf(exit)]),\n                        ...left,\n                        op(10 /* JumpIfNotAndKeep */),\n                        op(14 /* Pop */),\n                        ...right,\n                        ...exit\n                    ];\n                default:\n                // let next block do it\n            }\n        }\n        // ||\n        if (ts.isBinaryExpression(node)) {\n            switch (node.operatorToken.kind) {\n                case ts.SyntaxKind.BarBarToken:\n                    const left = generate(node.left, flag);\n                    const right = generate(node.right, flag);\n                    const exit = [op(0 /* Nop */, 0)];\n                    /**\n                     *   push evaluate left\n                     *   if peak() goto Exit\n                     *     pop\n                     *     push evaluate right\n                     *     goto Exit\n                     *   Else:\n                     *     push res\n                     *   Exit:\n                     */\n                    return [\n                        op(4 /* NodeOffset */, 2, [headOf(exit)]),\n                        ...left,\n                        op(9 /* JumpIfAndKeep */),\n                        op(14 /* Pop */),\n                        ...right,\n                        ...exit\n                    ];\n                default:\n                // let next block do it\n            }\n        }\n        if (ts.isVoidExpression(node)) {\n            return [\n                ...generate(node.expression, flag),\n                op(14 /* Pop */),\n                op(3 /* UndefinedLiteral */)\n            ];\n        }\n        // Comma\n        if (ts.isBinaryExpression(node)) {\n            switch (node.operatorToken.kind) {\n                case ts.SyntaxKind.CommaToken:\n                    return [\n                        ...generate(node.left, flag),\n                        op(14 /* Pop */),\n                        ...generate(node.right, flag)\n                    ];\n                default:\n                // let next block do it\n            }\n        }\n        // Assignments\n        if (ts.isBinaryExpression(node)) {\n            const kind = node.operatorToken.kind;\n            switch (kind) {\n                case ts.SyntaxKind.PlusEqualsToken:\n                case ts.SyntaxKind.MinusEqualsToken:\n                case ts.SyntaxKind.SlashEqualsToken:\n                case ts.SyntaxKind.AsteriskEqualsToken:\n                case ts.SyntaxKind.EqualsToken:\n                    const left = extractQuote(node.left);\n                    if (ts.isPropertyAccessExpression(left) ||\n                        ts.isElementAccessExpression(left) ||\n                        ts.isIdentifier(left) ||\n                        left.kind === ts.SyntaxKind.ThisKeyword) {\n                        return [\n                            ...generateLeft(node.left, flag),\n                            ...generate(node.right, flag),\n                            op(kind === ts.SyntaxKind.EqualsToken ? 19 /* Set */ :\n                                kind === ts.SyntaxKind.PlusEqualsToken ? 68 /* BPlusEqual */ :\n                                    kind === ts.SyntaxKind.MinusEqualsToken ? 69 /* BMinusEqual */ :\n                                        kind === ts.SyntaxKind.SlashEqualsToken ? 70 /* BSlashEqual */ :\n                                            kind === ts.SyntaxKind.AsteriskEqualsToken ? 71 /* BAsteriskEqual */ :\n                                                abort('Why Am I here?'))\n                        ];\n                    }\n                    else {\n                        return [\n                            ...generate(left, flag),\n                            op(1 /* Literal */, 2, ['Invalid left-hand side in assignment']),\n                            op(73 /* ThrowReferenceError */)\n                        ];\n                    }\n                default:\n                // let next block do it\n            }\n        }\n        if (ts.isBinaryExpression(node)) {\n            const ops = [\n                ...generate(node.left, flag),\n                ...generate(node.right, flag),\n            ];\n            switch (node.operatorToken.kind) {\n                case ts.SyntaxKind.InstanceOfKeyword:\n                    ops.push(op(40 /* InstanceOf */));\n                    break;\n                case ts.SyntaxKind.PlusToken:\n                    ops.push(op(49 /* BPlus */));\n                    break;\n                case ts.SyntaxKind.MinusToken:\n                    ops.push(op(50 /* BMinus */));\n                    break;\n                case ts.SyntaxKind.CaretToken:\n                    ops.push(op(51 /* BCaret */));\n                    break;\n                case ts.SyntaxKind.AmpersandToken:\n                    ops.push(op(52 /* BAmpersand */));\n                    break;\n                case ts.SyntaxKind.BarToken:\n                    ops.push(op(53 /* BBar */));\n                    break;\n                case ts.SyntaxKind.GreaterThanToken:\n                    ops.push(op(54 /* BGreaterThan */));\n                    break;\n                case ts.SyntaxKind.GreaterThanGreaterThanToken:\n                    ops.push(op(55 /* BGreaterThanGreaterThan */));\n                    break;\n                case ts.SyntaxKind.GreaterThanGreaterThanGreaterThanToken:\n                    ops.push(op(56 /* BGreaterThanGreaterThanGreaterThan */));\n                    break;\n                case ts.SyntaxKind.GreaterThanEqualsToken:\n                    ops.push(op(57 /* BGreaterThanEquals */));\n                    break;\n                case ts.SyntaxKind.LessThanToken:\n                    ops.push(op(58 /* BLessThan */));\n                    break;\n                case ts.SyntaxKind.LessThanLessThanToken:\n                    ops.push(op(59 /* BLessThanLessThan */));\n                    break;\n                case ts.SyntaxKind.LessThanEqualsToken:\n                    ops.push(op(60 /* BLessThanEquals */));\n                    break;\n                case ts.SyntaxKind.EqualsEqualsToken:\n                    ops.push(op(61 /* BEqualsEquals */));\n                    break;\n                case ts.SyntaxKind.EqualsEqualsEqualsToken:\n                    ops.push(op(62 /* BEqualsEqualsEquals */));\n                    break;\n                case ts.SyntaxKind.ExclamationEqualsToken:\n                    ops.push(op(63 /* BExclamationEquals */));\n                    break;\n                case ts.SyntaxKind.ExclamationEqualsEqualsToken:\n                    ops.push(op(64 /* BExclamationEqualsEquals */));\n                    break;\n                case ts.SyntaxKind.InKeyword:\n                    ops.push(op(48 /* BIn */));\n                    break;\n                case ts.SyntaxKind.AsteriskToken:\n                    ops.push(op(65 /* BAsterisk */));\n                    break;\n                case ts.SyntaxKind.SlashToken:\n                    ops.push(op(66 /* BSlash */));\n                    break;\n                case ts.SyntaxKind.PercentToken:\n                    ops.push(op(67 /* BPercent */));\n                    break;\n                default:\n                    const remain = node.operatorToken.kind;\n                    throw new Error('unknown token ' + getNameOfKind(remain));\n            }\n            return ops;\n        }\n        if (ts.isTypeOfExpression(node)) {\n            const unwrapped = extractQuote(node.expression);\n            if (ts.isIdentifier(unwrapped)) {\n                return [\n                    op(17 /* GetRecord */),\n                    op(1 /* Literal */, 2, [unwrapped.text]),\n                    op(39 /* TypeofReference */)\n                ];\n            }\n            else {\n                return [\n                    ...generate(node.expression, flag),\n                    op(38 /* Typeof */)\n                ];\n            }\n        }\n        if (ts.isPostfixUnaryExpression(node)) {\n            switch (node.operator) {\n                case ts.SyntaxKind.PlusPlusToken:\n                    return [\n                        ...generateLeft(node.operand, flag),\n                        op(75 /* PostFixPlusPLus */)\n                    ];\n                case ts.SyntaxKind.MinusMinusToken:\n                    return [\n                        ...generateLeft(node.operand, flag),\n                        op(74 /* PostFixMinusMinus */)\n                    ];\n                default:\n                    const nothing = node.operator;\n            }\n        }\n        if (ts.isPropertyAccessExpression(node) || ts.isElementAccessExpression(node)) {\n            return [\n                ...generateLeft(node, flag),\n                op(23 /* Get */)\n            ];\n        }\n        if (ts.isParenthesizedExpression(node)) {\n            return generate(node.expression, flag);\n        }\n        if (ts.isDebuggerStatement(node)) {\n            return [op(82 /* Debugger */)];\n        }\n        if (ts.isThrowStatement(node)) {\n            const ops = [];\n            ops.push(...generate(node.expression, flag));\n            if (flag & 7 /* TryCatchFlags */) {\n                ops.push(op(30 /* ThrowInTryCatchFinally */));\n            }\n            else {\n                ops.push(op(29 /* Throw */));\n            }\n            return ops;\n        }\n        if (ts.isTryStatement(node)) {\n            /** TRY START */\n            const tryStatements = generate(node.tryBlock, (flag ^ (flag & 7 /* TryCatchFlags */)) | 1 /* Try */);\n            const exitTry = [\n                op(32 /* ExitTryCatchFinally */)\n            ];\n            /** CATCH START */\n            /** CATCH START */\n            const catchStatement = node.catchClause\n                ? generate(node.catchClause.block, (flag ^ (flag & 7 /* TryCatchFlags */)) | 2 /* Catch */)\n                : [op(0 /* Nop */, 0)];\n            const exitCatch = [\n                op(32 /* ExitTryCatchFinally */)\n            ];\n            /** CATCH END */\n            /** Finally START */\n            const finallyStatement = node.finallyBlock\n                ? generate(node.finallyBlock, (flag ^ (flag & 7 /* TryCatchFlags */)) | 4 /* Finally */)\n                : [op(0 /* Nop */, 0)];\n            const exitFinally = [\n                op(32 /* ExitTryCatchFinally */)\n            ];\n            /** Finally END */\n            const exitAll = [op(0 /* Nop */, 0)];\n            const catchIdentifier = node.catchClause?.variableDeclaration?.name;\n            if (catchIdentifier && catchIdentifier.kind !== ts.SyntaxKind.Identifier) {\n                throw new Error('not support non identifier binding');\n            }\n            const init = [\n                op(4 /* NodeOffset */, 2, [headOf(exitAll)]),\n                node.catchClause\n                    ? op(4 /* NodeOffset */, 2, [headOf(catchStatement)])\n                    : op(1 /* Literal */, 2, [-1]),\n                node.finallyBlock\n                    ? op(4 /* NodeOffset */, 2, [headOf(finallyStatement)])\n                    : op(1 /* Literal */, 2, [-1]),\n                node.catchClause?.variableDeclaration\n                    ? op(1 /* Literal */, 2, [catchIdentifier?.text])\n                    : op(3 /* UndefinedLiteral */),\n                op(33 /* InitTryCatch */)\n            ];\n            return [\n                ...init,\n                ...tryStatements,\n                ...exitTry,\n                ...node.catchClause\n                    ? [\n                        ...catchStatement,\n                        ...exitCatch\n                    ]\n                    : [],\n                ...node.finallyBlock\n                    ? [\n                        ...finallyStatement,\n                        ...exitFinally\n                    ]\n                    : [],\n                ...exitAll\n            ];\n        }\n        if (ts.isSwitchStatement(node)) {\n            var nextOp = op(0 /* Nop */, 0);\n            nextOps.set(node, nextOp);\n            const switchHead = [\n                op(1 /* Literal */, 2, [\"[switch]\" /* SwitchValue */]),\n                op(1 /* Literal */, 2, [1 /* Var */]),\n                op(1 /* Literal */, 2, [1]),\n                op(12 /* EnterScope */),\n                op(17 /* GetRecord */),\n                op(1 /* Literal */, 2, [\"[switch]\" /* SwitchValue */]),\n                ...generate(node.expression, flag),\n                op(19 /* Set */),\n                op(14 /* Pop */)\n            ];\n            const bodies = [];\n            for (let c of node.caseBlock.clauses) {\n                if (ts.isCaseClause(c)) {\n                    const rule = [\n                        op(17 /* GetRecord */),\n                        op(1 /* Literal */, 2, [\"[switch]\" /* SwitchValue */]),\n                        op(23 /* Get */),\n                        ...generate(c.expression, flag),\n                        op(62 /* BEqualsEqualsEquals */)\n                    ];\n                    const body = [\n                        op(0 /* Nop */, 0),\n                        ...c.statements.map(it => generate(it, flag)).flat()\n                    ];\n                    bodies.push({\n                        entry: op(0 /* Nop */, 0),\n                        rule,\n                        body\n                    });\n                }\n                else {\n                    const body = c.statements.map(it => generate(it, flag)).flat();\n                    bodies.push({\n                        entry: op(0 /* Nop */, 0),\n                        body\n                    });\n                }\n            }\n            const hasVariables = scopes.get(node.caseBlock).size > 0;\n            const connectedBodyHead = hasVariables ? generateEnterScope(node.caseBlock, scopes) : [];\n            const connectedBodyRules = [];\n            const connectedBody = [];\n            const connectedBodyExit = op(0 /* Nop */, 0);\n            const connectedBodyEnd = hasVariables ? generateLeaveScope(node.caseBlock) : [op(0 /* Nop */, 0)];\n            for (const [index, item] of bodies.entries()) {\n                connectedBody.push(...item.body);\n            }\n            for (const [index, item] of bodies.entries()) {\n                const nextSegment = bodies[index].body[0];\n                connectedBodyRules.push(op(4 /* NodeOffset */, 2, [nextSegment]));\n                if (item.rule != null) {\n                    connectedBodyRules.push(...item.rule);\n                    connectedBodyRules.push(op(7 /* JumpIf */));\n                }\n                else {\n                    connectedBodyRules.push(op(8 /* Jump */));\n                }\n                connectedBody.push(...item.body);\n            }\n            connectedBodyRules.push(op(4 /* NodeOffset */, 2, [connectedBodyExit]));\n            connectedBodyRules.push(op(8 /* Jump */));\n            const switchTail = [\n                op(13 /* LeaveScope */)\n            ];\n            return [\n                ...switchHead,\n                ...connectedBodyHead,\n                ...connectedBodyRules,\n                ...connectedBody,\n                connectedBodyExit,\n                ...connectedBodyEnd,\n                ...switchTail,\n                nextOp\n            ];\n        }\n        if (ts.isBreakStatement(node) && node.label == null) {\n            // only when cross try catch\n            let crossedTryCatch = 0;\n            let scopeCount = 0;\n            const target = findAncient(node, parentMap, (node) => {\n                if ((scopes.get(node)?.size ?? 0) > 0) {\n                    scopeCount++;\n                }\n                if (nextOps.has(node)) {\n                    return true;\n                }\n                if (functions.has(node)) {\n                    throw new Error('bug check');\n                }\n                if (ts.isTryStatement(node)) {\n                    crossedTryCatch++;\n                    scopeCount = 0;\n                }\n                return false;\n            });\n            if (target == null) {\n                throw new Error('cannot find break target');\n            }\n            const nextNode = nextOps.get(target);\n            if (nextNode == null) {\n                throw new Error('did not get nextNode');\n            }\n            if (crossedTryCatch === 0) {\n                return [\n                    ...new Array(scopeCount).fill(0).map(it => op(13 /* LeaveScope */)),\n                    op(4 /* NodeOffset */, 2, [nextNode]),\n                    op(8 /* Jump */)\n                ];\n            }\n            else {\n                const exitStub = [\n                    op(0 /* Nop */, 0),\n                    ...new Array(scopeCount).fill(0).map(it => op(13 /* LeaveScope */)),\n                    op(4 /* NodeOffset */, 2, [nextNode]),\n                    op(8 /* Jump */)\n                ];\n                const breakCommand = [\n                    op(1 /* Literal */, 2, [crossedTryCatch]),\n                    op(4 /* NodeOffset */, 2, [exitStub[0]]),\n                    op(31 /* BreakInTryCatchFinally */)\n                ];\n                return [\n                    ...breakCommand,\n                    ...exitStub\n                ];\n            }\n        }\n        if (ts.isContinueStatement(node) && node.label == null) {\n            let scopeCount = 0;\n            const target = findAncient(node, parentMap, (node) => {\n                if ((scopes.get(node)?.size ?? 0) > 0) {\n                    scopeCount++;\n                }\n                if (continueOps.has(node)) {\n                    return true;\n                }\n                if (ts.isTryStatement(node))\n                    abort('Not support continue in try catch yet');\n                return false;\n            });\n            if (target == null) {\n                throw new Error('cannot find continue target');\n            }\n            const nextNode = continueOps.get(target);\n            if (nextNode == null) {\n                throw new Error('did not get nextNode');\n            }\n            const forHasScope = (scopes.get(target)?.size ?? 0) !== 0;\n            return [\n                ...new Array(forHasScope ? scopeCount - 1 : scopeCount).fill(0).map(it => op(13 /* LeaveScope */)),\n                op(4 /* NodeOffset */, 2, [nextNode]),\n                op(8 /* Jump */)\n            ];\n        }\n        if (ts.isWhileStatement(node)) {\n            const nextOp = op(0 /* Nop */, 0);\n            nextOps.set(node, nextOp);\n            const continueOp = op(0 /* Nop */, 0);\n            continueOps.set(node, continueOp);\n            const exit = [\n                op(0 /* Nop */, 0)\n            ];\n            const head = [\n                op(4 /* NodeOffset */, 2, [exit[0]]),\n                ...generate(node.expression, flag),\n                op(6 /* JumpIfNot */)\n            ];\n            const body = [\n                ...generate(node.statement, flag),\n                op(4 /* NodeOffset */, 2, [head[0]]),\n                op(8 /* Jump */)\n            ];\n            return [\n                continueOp,\n                ...head,\n                ...body,\n                ...exit,\n                nextOp\n            ];\n        }\n        if (ts.isDoStatement(node)) {\n            const nextOp = op(0 /* Nop */, 0);\n            nextOps.set(node, nextOp);\n            const continueOp = op(0 /* Nop */, 0);\n            continueOps.set(node, continueOp);\n            const body = generate(node.statement, flag);\n            const tail = [\n                op(4 /* NodeOffset */, 2, [body[0]]),\n                ...generate(node.expression, flag),\n                op(7 /* JumpIf */)\n            ];\n            return [\n                continueOp,\n                ...body,\n                ...tail,\n                nextOp\n            ];\n        }\n        if (ts.isForInStatement(node)) {\n            const nextOp = op(0 /* Nop */, 0);\n            nextOps.set(node, nextOp);\n            const continueOp = op(0 /* Nop */, 0);\n            continueOps.set(node, continueOp);\n            const hasVariable = ts.isVariableDeclarationList(node.initializer) && (node.initializer.flags & ts.NodeFlags.BlockScoped);\n            const variableIsConst = ts.isVariableDeclarationList(node.initializer)\n                ? (node.initializer.flags & ts.NodeFlags.Const)\n                : 0;\n            const variableName = ts.isVariableDeclarationList(node.initializer)\n                ? ts.isIdentifier(node.initializer.declarations[0].name)\n                    ? node.initializer.declarations[0].name.text\n                    : abort('Not a identifier')\n                : '';\n            const enter = generateEnterScope(node, scopes);\n            const leave = generateLeaveScope(node);\n            const getLhs = () => {\n                if (ts.isVariableDeclarationList(node.initializer)) {\n                    return generateLeft(node.initializer.declarations[0].name, flag);\n                }\n                else {\n                    return generateLeft(node.initializer, flag);\n                }\n            };\n            const head = [\n                op(17 /* GetRecord */),\n                op(1 /* Literal */, 2, [\"[iter]\" /* LoopIterator */]),\n                ...[\n                    ...generate(node.expression, flag),\n                    op(41 /* GetPropertyIterator */),\n                ],\n                op(19 /* Set */),\n                op(14 /* Pop */)\n            ];\n            const condition = [\n                op(4 /* NodeOffset */, 2, [leave[0]]),\n                ...[\n                    ...[\n                        op(17 /* GetRecord */),\n                        op(1 /* Literal */, 2, [\"[entry]\" /* IteratorEntry */]),\n                        ...[\n                            op(17 /* GetRecord */),\n                            op(1 /* Literal */, 2, [\"[iter]\" /* LoopIterator */]),\n                            op(23 /* Get */),\n                            op(42 /* NextEntry */)\n                        ],\n                        op(19 /* Set */),\n                    ],\n                    op(43 /* EntryIsDone */),\n                ],\n                op(7 /* JumpIf */),\n                ...getLhs(),\n                ...[\n                    op(17 /* GetRecord */),\n                    op(1 /* Literal */, 2, [\"[entry]\" /* IteratorEntry */]),\n                    op(23 /* Get */),\n                    op(44 /* EntryGetValue */),\n                ],\n                op(18 /* SetInitialized */),\n                op(14 /* Pop */),\n                ...(variableIsConst\n                    ? [\n                        ...getLhs(),\n                        op(25 /* FreezeVariable */),\n                        op(14 /* Pop */),\n                        op(14 /* Pop */)\n                    ]\n                    : []),\n            ];\n            const body = generate(node.statement, flag);\n            const continueOrLeave = hasVariable ? [\n                op(1 /* Literal */, 2, [\"[iter]\" /* LoopIterator */]),\n                op(17 /* GetRecord */),\n                op(1 /* Literal */, 2, [\"[iter]\" /* LoopIterator */]),\n                op(23 /* Get */),\n                op(1 /* Literal */, 2, [1 /* DeTDZ */]),\n                op(1 /* Literal */, 2, [variableName]),\n                op(17 /* GetRecord */),\n                op(1 /* Literal */, 2, [variableName]),\n                op(23 /* Get */),\n                op(1 /* Literal */, 2, [1 /* DeTDZ */]),\n                // there is alway two variable (the iterator and initializer) in for in without destructing statement\n                op(1 /* Literal */, 2, [2]),\n                ...generateLeaveScope(node),\n                ...generateEnterScope(node, scopes),\n                op(17 /* GetRecord */),\n                op(21 /* SetMultiple */),\n                op(4 /* NodeOffset */, 2, [headOf(condition)]),\n                op(8 /* Jump */)\n            ]\n                : [\n                    op(1 /* Literal */, 2, [\"[iter]\" /* LoopIterator */]),\n                    op(17 /* GetRecord */),\n                    op(1 /* Literal */, 2, [\"[iter]\" /* LoopIterator */]),\n                    op(23 /* Get */),\n                    op(1 /* Literal */, 2, [1 /* DeTDZ */]),\n                    // there is alway one variable (the iterator and initializer) in for in without destructing statement\n                    op(1 /* Literal */, 2, [1]),\n                    ...generateLeaveScope(node),\n                    ...generateEnterScope(node, scopes),\n                    op(17 /* GetRecord */),\n                    op(21 /* SetMultiple */),\n                    op(4 /* NodeOffset */, 2, [headOf(condition)]),\n                    op(8 /* Jump */)\n                ];\n            return [\n                ...enter,\n                ...head,\n                ...condition,\n                ...body,\n                continueOp,\n                ...continueOrLeave,\n                ...leave,\n                nextOp\n            ];\n        }\n        if (ts.isDeleteExpression(node)) {\n            const unwrapped = extractQuote(node.expression);\n            if (ts.isPropertyAccessExpression(unwrapped) || ts.isElementAccessExpression(unwrapped)) {\n                return [\n                    ...generateLeft(node.expression, flag),\n                    op(72 /* Delete */)\n                ];\n            }\n            else {\n                // This is not delete-able and we don't care\n                return [\n                    ...generate(node.expression, flag),\n                    op(14 /* Pop */),\n                    op(1 /* Literal */, 2, [true])\n                ];\n            }\n        }\n        throw new Error(`Unknown node ${getNameOfKind(node.kind)}`);\n    }\n    let bodyNodes;\n    if (ts.isSourceFile(node)) {\n        const statements = [...node.statements];\n        bodyNodes = statements.map(s => generate(s, withEval ? 8 /* Eval */ : 0)).flat()\n            .concat(markInternals([op(3 /* UndefinedLiteral */), op(27 /* Return */)]));\n    }\n    else if (node.body != undefined && ts.isBlock(node.body)) {\n        const statements = [...node.body.statements];\n        bodyNodes = statements.map(s => generate(s, 0)).flat()\n            .concat(markInternals([op(3 /* UndefinedLiteral */), op(27 /* Return */)]));\n    }\n    else {\n        bodyNodes = [\n            ...generate(node.body, 0),\n            markInternal(op(27 /* Return */))\n        ];\n    }\n    const functionDeclarationNodes = functionDeclarations.map(n => [\n        op(17 /* GetRecord */),\n        op(1 /* Literal */, 2, [n.name?.text]),\n        op(1 /* Literal */, 2, [n.name?.text]),\n        op(4 /* NodeOffset */, 2, [n]),\n        op(5 /* NodeFunctionType */, 2, [n]),\n        op(26 /* DefineFunction */),\n        op(19 /* Set */),\n        op(14 /* Pop */)\n    ]).flat();\n    const entry = [];\n    if (ts.isSourceFile(node)) {\n        entry.push(op(1 /* Literal */, 2, [0]));\n    }\n    else {\n        for (let item of [...node.parameters].reverse()) {\n            if (!ts.isIdentifier(item.name) || item.dotDotDotToken != null) {\n                throw new Error('not support yet');\n            }\n            entry.push(op(1 /* Literal */, 2, [item.name.text]));\n        }\n        entry.push(op(1 /* Literal */, 2, [node.parameters.length]));\n    }\n    entry.push(...generateVariableList(node, scopes));\n    if (ts.isSourceFile(node) && !withStrict) {\n        entry.push(op(1 /* Literal */, 2, [1 /* SourceFileInPlace */]));\n    }\n    else {\n        entry.push(op(5 /* NodeFunctionType */, 2, [node]));\n    }\n    entry.push(op(11 /* EnterFunction */));\n    markInternals(entry);\n    const results = [\n        ...entry,\n        ...functionDeclarationNodes,\n        ...bodyNodes\n    ];\n    if (withPos) {\n        for (const op of results) {\n            if (op.source == null\n                || op.source.end - op.source.start > node.end - node.pos) {\n                op.source = {\n                    start: node.pos,\n                    end: node.end\n                };\n            }\n        }\n    }\n    return results;\n}\nfunction genOffset(nodes) {\n    let offset = 0;\n    for (let seg of nodes) {\n        seg.offset = offset;\n        offset += seg.length;\n    }\n}\nfunction generateData(seg, fnRootToSegment, programData, textData) {\n    for (const op of seg) {\n        if (op.length === 0) {\n            // not generate anything\n        }\n        else if (op.length === 1) {\n            programData.push(op.op);\n        }\n        else if (op.op === 4 /* NodeOffset */) {\n            const ptr = op.preData[0];\n            programData.push(1 /* Literal */);\n            if (ptr.kind !== undefined) {\n                const nodePtr = ptr;\n                programData.push(headOf(fnRootToSegment.get(nodePtr)).offset);\n            }\n            else {\n                const opPtr = ptr;\n                programData.push(opPtr.offset);\n            }\n        }\n        else if (op.op === 5 /* NodeFunctionType */) {\n            const func = op.preData[0];\n            programData.push(1 /* Literal */);\n            const type = {\n                [ts.SyntaxKind.SourceFile]: 0 /* SourceFile */,\n                [ts.SyntaxKind.FunctionDeclaration]: 2 /* FunctionDeclaration */,\n                [ts.SyntaxKind.FunctionExpression]: 3 /* FunctionExpression */,\n                [ts.SyntaxKind.ArrowFunction]: 4 /* ArrowFunction */,\n                [ts.SyntaxKind.GetAccessor]: 6 /* GetAccessor */,\n                [ts.SyntaxKind.SetAccessor]: 7 /* SetAccessor */,\n                [ts.SyntaxKind.Constructor]: 8 /* Constructor */,\n                [ts.SyntaxKind.MethodDeclaration]: 5 /* MethodDeclaration */,\n            };\n            programData.push(type[func.kind]);\n        }\n        else {\n            programData.push(op.op);\n            switch (op.op) {\n                case 1 /* Literal */:\n                    if (exports.isSmallNumber(op.preData[0])) {\n                        programData.push(op.preData[0]);\n                    }\n                    else {\n                        const oldIndex = textData.indexOf(op.preData[0]);\n                        if (oldIndex >= 0) {\n                            programData.push(exports.TEXT_DADA_MASK | oldIndex);\n                        }\n                        else {\n                            programData.push(exports.TEXT_DADA_MASK | (textData.push(op.preData[0]) - 1));\n                        }\n                    }\n                    break;\n                default:\n                    throw new Error(`Unhandled ${op.op}`);\n            }\n        }\n    }\n}\nfunction compile(src, { debug = false, range = false, evalMode = false } = {}) {\n    const parentMap = new Map();\n    const scopes = new Map();\n    const functions = new Set();\n    const scopeChild = new Map();\n    const sourceNode = ts.createSourceFile('output.ts', src, ts.ScriptTarget.ESNext, true, ts.ScriptKind.TS);\n    const locationMap = new Map();\n    {\n        let row = 0;\n        let col = 0;\n        for (let i = 0; i < src.length + 1; i++) {\n            locationMap.set(i, [row, col]);\n            if (src[i] === '\\n') {\n                row += 1;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n    }\n    // diagnostics\n    {\n        const servicesHost = {\n            getScriptFileNames: () => ['output.ts'],\n            getScriptKind: () => ts.ScriptKind.TS,\n            getScriptVersion: () => '0',\n            useCaseSensitiveFileNames: () => true,\n            getDefaultLibFileName: () => 'lib.d.ts',\n            getCurrentDirectory: () => '/fake',\n            getCanonicalFileName: (str) => str,\n            getSourceFile: () => sourceNode\n        };\n        const program = ts.createProgram(['output.ts'], {}, servicesHost);\n        const diagnostics = program.getSyntacticDiagnostics(sourceNode);\n        if (diagnostics.length > 0) {\n            const errorMessages = diagnostics.map(it => `at ${locationMap.get(it.start)?.map(i => i + 1)?.join(', ') ?? 'unknown'} TS${it.code} ${it.messageText}`).join('\\r\\n');\n            throw new SyntaxError(errorMessages);\n        }\n    }\n    markParent(sourceNode, parentMap);\n    searchFunctionAndScope(sourceNode, parentMap, functions, scopes);\n    resolveScopes(sourceNode, parentMap, functions, scopes);\n    linkScopes(sourceNode, parentMap, scopes, scopeChild);\n    const program = [];\n    const functionToSegment = new Map();\n    for (let item of functions) {\n        const generated = generateSegment(item, scopes, parentMap, functions, {\n            withPos: range,\n            withEval: (item.kind === ts.SyntaxKind.SourceFile) && evalMode\n        });\n        program.push(generated);\n        functionToSegment.set(item, generated);\n    }\n    const flattened = program.flat();\n    genOffset(flattened);\n    // @ts-expect-error\n    if (debug && typeof OpCode !== 'undefined') {\n        console.error(flattened.map(it => {\n            // @ts-expect-error\n            let res = `${it.offset < 10 ? '00' + it.offset : it.offset < 100 ? '0' + it.offset : it.offset} ${OpCode[it.op]} `;\n            res += it.preData[0]\n                ? it.preData[0].kind\n                    ? getNameOfKind(it.preData[0].kind)\n                    : JSON.stringify(it.preData[0])\n                : JSON.stringify(it.preData[0]);\n            if (range) {\n                res += ' ' + (it.source ? `@${locationMap.get(it.source.start)}-${locationMap.get(it.source.end)}` : '');\n            }\n            return res;\n        }).join('\\r\\n'));\n    }\n    const textData = [];\n    const programData = [];\n    const sourceMap = [];\n    const internals = [];\n    if (range) {\n        for (let it of flattened) {\n            const start = it.offset;\n            const end = it.offset + it.length;\n            for (let index = start; index < end; index++) {\n                sourceMap[index] = [...locationMap.get(it.source.start), ...locationMap.get(it.source.end)];\n                internals[index] = it.internal\n                    || it.op === 24 /* DeTDZ */\n                    || it.op === 25 /* FreezeVariable */\n                    || it.op === 5 /* NodeFunctionType */\n                    || it.op === 42 /* NextEntry */\n                    || it.op === 14 /* Pop */\n                    || it.op === 8 /* Jump */\n                    || it.op === 7 /* JumpIf */\n                    || it.op === 9 /* JumpIfAndKeep */\n                    || it.op === 6 /* JumpIfNot */\n                    || it.op === 10 /* JumpIfNotAndKeep */\n                    || it.op === 4 /* NodeOffset */;\n            }\n        }\n    }\n    generateData(flattened, functionToSegment, programData, textData);\n    return [programData, textData, { sourceMap, internals }];\n}\nexports.compile = compile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compileAndRun = exports.getExecution = exports.run = exports.compile = void 0;\nconst compiler_1 = require(\"./compiler\");\nvar compiler_2 = require(\"./compiler\");\nObject.defineProperty(exports, \"compile\", { enumerable: true, get: function () { return compiler_2.compile; } });\nconst runtime_1 = require(\"./runtime\");\nvar runtime_2 = require(\"./runtime\");\nObject.defineProperty(exports, \"run\", { enumerable: true, get: function () { return runtime_2.run; } });\nObject.defineProperty(exports, \"getExecution\", { enumerable: true, get: function () { return runtime_2.getExecution; } });\nfunction compileAndRun(src) {\n    const [programData, textData] = compiler_1.compile(src, { evalMode: true });\n    return runtime_1.run(programData, textData, 0, globalThis, []);\n}\nexports.compileAndRun = compileAndRun;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.run = exports.getExecution = void 0;\n// [START_HERE]\n// MUST SYNC WITH COMPILER\nconst TEXT_DADA_MASK = 0x80000000;\n// MUST SYNC WITH COMPILER\nconst isSmallNumber = (a) => {\n    return typeof a === 'number' && ((a | 0) === a) && ((a & TEXT_DADA_MASK) === 0);\n};\nconst CALL = Function.prototype.call;\nconst APPLY = Function.prototype.apply;\nconst BIND = Function.prototype.bind;\nconst REGEXP = RegExp;\nconst is_not_defined = ' is not defined';\nconst is_a_constant = ' is a constant';\nconst getEmptyObject = Object.create.bind(Object, null, {});\nconst functionDescriptors = new WeakMap();\nconst environments = new WeakSet();\nconst bindInfo = new WeakMap();\nconst variableDescriptors = new WeakMap();\nconst getExecution = (program, textData, entryPoint = 0, globalThis, scopes = [], invokeData = {\n    [0 /* type */]: 0 /* Apply */,\n    [16 /* function */]: undefined,\n    [8 /* name */]: '',\n    [17 /* self */]: undefined\n}, args = [], getDebugFunction = () => null, compileFunction = (...args) => { throw new Error('not supported'); }) => {\n    let currentProgram = program;\n    let currentTextData = textData;\n    const initialFrame = {\n        [0 /* type */]: 0 /* Function */,\n        [2 /* scopes */]: scopes,\n        [3 /* valueStack */]: [\n            // @ts-expect-error\n            invokeData[0 /* type */] === 0 /* Apply */ ? invokeData[17 /* self */] : invokeData[27 /* newTarget */],\n            invokeData[16 /* function */],\n            invokeData[8 /* name */],\n            invokeData[0 /* type */],\n            ...args,\n            args.length\n        ],\n        [19 /* invokeType */]: invokeData[0 /* type */],\n        [4 /* return */]: -1,\n        [24 /* programSection */]: currentProgram,\n        [25 /* textSection */]: currentTextData,\n        [30 /* globalThis */]: globalThis\n    };\n    environments.add(initialFrame);\n    const stack = [initialFrame];\n    let ptr = entryPoint;\n    const read = () => currentProgram[ptr++];\n    const getCurrentFrame = () => stack[stack.length - 1];\n    const peak = (arr, offset = 1) => arr[arr.length - offset];\n    const defineVariableInternal = (scope, name, tdz, immutable) => {\n        if (!variableDescriptors.has(scope)) {\n            variableDescriptors.set(scope, new Map());\n        }\n        const descriptor = {\n            [9 /* tdz */]: tdz,\n            [10 /* immutable */]: immutable,\n            [11 /* value */]: undefined\n        };\n        variableDescriptors.get(scope).set(name, descriptor);\n        Reflect.defineProperty(scope, name, {\n            configurable: true,\n            get() {\n                if (descriptor[9 /* tdz */]) {\n                    throw new ReferenceError(name + is_not_defined);\n                }\n                return descriptor[11 /* value */];\n            },\n            set(v) {\n                if (descriptor[9 /* tdz */]) {\n                    throw new ReferenceError(name + is_not_defined);\n                }\n                if (descriptor[10 /* immutable */]) {\n                    throw new TypeError(name + is_a_constant);\n                }\n                descriptor[11 /* value */] = v;\n            }\n        });\n    };\n    const defineVariable = (scope, name, type) => {\n        switch (type) {\n            case 3 /* Const */:\n                // seal it later\n                return defineVariableInternal(scope, name, true, false);\n            case 2 /* Let */:\n                return defineVariableInternal(scope, name, true, false);\n            case 5 /* Function */:\n            case 4 /* Parameter */:\n            case 1 /* Var */:\n                //don't have tdz\n                return defineVariableInternal(scope, name, false, false);\n        }\n    };\n    const getVariableDescriptor = (scope, name) => {\n        const map = variableDescriptors.get(scope);\n        if (map) {\n            return map.get(name);\n        }\n    };\n    const MyArgument = function MyArgument() { };\n    const createArgumentObject = () => {\n        const obj = new MyArgument();\n        Reflect.setPrototypeOf(obj, Object.prototype);\n        return obj;\n    };\n    const defineFunction = (globalThis, scopes, name, type, offset) => {\n        // TODO: types\n        const scopeClone = [...scopes];\n        const pr = currentProgram;\n        const txt = currentTextData;\n        const des = {\n            [8 /* name */]: name,\n            [0 /* type */]: type,\n            [12 /* offset */]: offset,\n            [2 /* scopes */]: scopeClone,\n            [24 /* programSection */]: pr,\n            [25 /* textSection */]: txt,\n            [30 /* globalThis */]: globalThis\n        };\n        const fn = function externalFn(...args) {\n            return run_(pr, txt, offset, des[30 /* globalThis */], [...scopeClone], new.target\n                ? {\n                    [0 /* type */]: 1 /* Construct */,\n                    [16 /* function */]: fn,\n                    [8 /* name */]: name,\n                    [27 /* newTarget */]: new.target\n                }\n                : {\n                    [0 /* type */]: 0 /* Apply */,\n                    [16 /* function */]: fn,\n                    [8 /* name */]: name,\n                    [17 /* self */]: this\n                }, args, getDebugFunction);\n        };\n        fn.__pos__ = offset;\n        functionDescriptors.set(fn, des);\n        return fn;\n    };\n    const bindInternal = (fn, self, args) => {\n        if (typeof fn !== 'function') {\n            return undefined;\n        }\n        const bindFn = function (...additionalArgs) {\n            return Reflect.apply(fn, self, [...args, ...additionalArgs]);\n        };\n        bindInfo.set(bindFn, {\n            [16 /* function */]: fn,\n            [17 /* self */]: self,\n            [18 /* arguments */]: args\n        });\n        return bindFn;\n    };\n    const findScope = (ctx, name) => {\n        for (let i = ctx[2 /* scopes */].length - 1; i >= 0; i--) {\n            if (name in ctx[2 /* scopes */][i]) {\n                return ctx[2 /* scopes */][i];\n            }\n        }\n        if (name in ctx[30 /* globalThis */]) {\n            return ctx[30 /* globalThis */];\n        }\n        return null;\n    };\n    const getValue = (ctx, name) => {\n        if (!environments.has(ctx)) {\n            return ctx[name];\n        }\n        else {\n            const env = ctx;\n            const scope = findScope(env, name);\n            if (scope) {\n                return scope[name];\n            }\n            else {\n                const currentGlobal = env[30 /* globalThis */];\n                if (name === \"[this]\" /* This */) {\n                    return currentGlobal;\n                }\n                else if (name in currentGlobal) {\n                    return currentGlobal[name];\n                }\n                else {\n                    throw new ReferenceError(name + is_not_defined);\n                }\n            }\n        }\n    };\n    const setValue = (ctx, name, value) => {\n        if (!environments.has(ctx)) {\n            return (ctx[name] = value);\n        }\n        else {\n            const env = ctx;\n            const scope = findScope(env, name);\n            if (scope) {\n                return (scope[name] = value);\n            }\n            else {\n                throw new ReferenceError(name + is_not_defined);\n            }\n        }\n    };\n    let evalResult = undefined;\n    let commandPtr = 0;\n    const redirectedFunctions = new WeakMap();\n    // redirectedFunctions.set(eval, (str: string) => {\n    //     str = String(str)\n    //     const [programData, textData] = compileFunction(str, { evalMode: true })\n    //     const result = run(\n    //         programData,\n    //         textData,\n    //         0,\n    //         getCurrentFrame()[Fields.globalThis],\n    //         [...getCurrentFrame()[Fields.scopes]]\n    //     )\n    //     return result\n    // })\n    const EVAL_FUNCTION = eval;\n    const emulateEval = (str, includesLocalScope) => {\n        str = String(str);\n        const [programData, textData] = compileFunction(str, { evalMode: true });\n        const result = run(programData, textData, 0, getCurrentFrame()[30 /* globalThis */], includesLocalScope ? [...getCurrentFrame()[2 /* scopes */]] : []);\n        return result;\n    };\n    const step = (debug = false) => {\n        // console.log(ptr)\n        const currentPtr = commandPtr = ptr;\n        const command = read();\n        const currentFrame = getCurrentFrame();\n        if (currentFrame[24 /* programSection */].length !== currentProgram.length) {\n            debugger;\n        }\n        // if (currentFrame[Fields.scopes].length > 50) {\n        //     debugger\n        // }\n        let returnsExternal = false;\n        let returnValue = null;\n        const addCatchScope = (frame, name, value) => {\n            const newScope = {};\n            defineVariable(newScope, name, 1 /* Var */);\n            newScope[name] = value;\n            frame[2 /* scopes */].push(newScope);\n        };\n        const executeReturn = (value) => {\n            const currentFrame = peak(stack);\n            // try to find upper try frame or return (if any and hand control to it)\n            switch (currentFrame[0 /* type */]) {\n                case 0 /* Function */:\n                    {\n                        const frame = currentFrame;\n                        // exit\n                        const returnAddr = frame[4 /* return */];\n                        if (returnAddr < 0) {\n                            // leave the whole function\n                            returnsExternal = true;\n                            returnValue = value;\n                            return value;\n                        }\n                        else {\n                            stack.pop();\n                            ptr = returnAddr;\n                            currentProgram = peak(stack)[24 /* programSection */];\n                            currentTextData = peak(stack)[25 /* textSection */];\n                            if (frame[19 /* invokeType */] === 0 /* Apply */\n                                || (value !== null && typeof value === 'object')\n                                || typeof value === 'function') {\n                                peak(stack)[3 /* valueStack */].push(value);\n                            }\n                            else {\n                                peak(stack)[3 /* valueStack */].push(getValue(frame, \"[this]\" /* This */));\n                            }\n                        }\n                    }\n                    break;\n                case 1 /* Try */:\n                    {\n                        const frame = currentFrame;\n                        // as if we return on upper try catch\n                        frame[3 /* valueStack */].push(value);\n                        initiateReturn();\n                    }\n                    break;\n            }\n        };\n        const initiateReturn = () => {\n            const frame = peak(stack);\n            const value = frame[3 /* valueStack */].pop();\n            const finallyAddr = frame[6 /* finally */];\n            // restore scopes\n            frame[2 /* scopes */] = frame[1 /* savedScopes */].slice(0);\n            const state = frame[13 /* state */];\n            switch (state) {\n                case 0 /* Try */:\n                case 1 /* Catch */:\n                    {\n                        if (finallyAddr >= 0) {\n                            frame[13 /* state */] = 2 /* Finally */;\n                            frame[14 /* resolveType */] = 2 /* return */;\n                            frame[11 /* value */] = value;\n                            ptr = finallyAddr;\n                        }\n                        else {\n                            stack.pop();\n                            executeReturn(value);\n                            return;\n                        }\n                    }\n                    break;\n                case 2 /* Finally */:\n                    {\n                        stack.pop();\n                        executeReturn(value);\n                        return;\n                    }\n                    break;\n                default:\n                    const nothing = state;\n            }\n        };\n        const executeThrow = (value) => {\n            loop: while (true) {\n                if (stack.length === 0) {\n                    throw value;\n                }\n                const currentFrame = peak(stack);\n                switch (currentFrame[0 /* type */]) {\n                    case 0 /* Function */:\n                        {\n                            stack.pop();\n                        }\n                        break;\n                    case 1 /* Try */: {\n                        const frame = currentFrame;\n                        if (frame[13 /* state */] === 2 /* Finally */) {\n                            stack.pop();\n                        }\n                        else {\n                            // as if we throw on upper try catch\n                            currentFrame[3 /* valueStack */].push(value);\n                            initiateThrow();\n                            return;\n                        }\n                    }\n                }\n            }\n            throw value;\n        };\n        const initiateThrow = () => {\n            const frame = peak(stack);\n            const value = frame[3 /* valueStack */].pop();\n            const exitAddr = frame[15 /* exit */];\n            const finallyAddr = frame[6 /* finally */];\n            const catchAddr = frame[5 /* catch */];\n            // restore scopes\n            frame[2 /* scopes */] = frame[1 /* savedScopes */].slice(0);\n            const state = frame[13 /* state */];\n            switch (state) {\n                case 0 /* Try */:\n                    {\n                        frame[14 /* resolveType */] = 1 /* throw */;\n                        frame[11 /* value */] = value;\n                        if (catchAddr >= 0) {\n                            frame[13 /* state */] = 1 /* Catch */;\n                            if (frame[7 /* variable */] !== undefined) {\n                                addCatchScope(frame, frame[7 /* variable */], value);\n                            }\n                            ptr = catchAddr;\n                            currentProgram = frame[24 /* programSection */];\n                            currentTextData = frame[25 /* textSection */];\n                        }\n                        else if (finallyAddr >= 0) {\n                            frame[13 /* state */] = 2 /* Finally */;\n                            ptr = finallyAddr;\n                            currentProgram = frame[24 /* programSection */];\n                            currentTextData = frame[25 /* textSection */];\n                        }\n                        else {\n                            ptr = exitAddr;\n                            currentProgram = frame[24 /* programSection */];\n                            currentTextData = frame[25 /* textSection */];\n                        }\n                    }\n                    break;\n                case 1 /* Catch */: {\n                    frame[13 /* state */] = 2 /* Finally */;\n                    frame[14 /* resolveType */] = 1 /* throw */;\n                    frame[11 /* value */] = value;\n                    if (finallyAddr >= 0) {\n                        ptr = finallyAddr;\n                        currentProgram = frame[24 /* programSection */];\n                        currentTextData = frame[25 /* textSection */];\n                    }\n                    else {\n                        stack.pop();\n                        executeThrow(value);\n                    }\n                    break;\n                }\n                case 2 /* Finally */:\n                    {\n                        stack.pop();\n                        executeThrow(value);\n                    }\n                    break;\n                default:\n                    const nothing = state;\n            }\n        };\n        const executeBreak = () => {\n            const frame = stack.pop();\n            let depth = frame[29 /* depth */];\n            // stack.pop()\n            loop: while (true) {\n                depth--;\n                if (depth < 0) {\n                    throw new Error('something went wrong');\n                }\n                if (depth === 0) {\n                    // actually break\n                    // break always happens within the same vm\n                    ptr = frame[28 /* break */];\n                    break loop;\n                }\n                else {\n                    // try to jump to next try catch\n                    const nextFrame = peak(stack);\n                    const finallyAddr = nextFrame[6 /* finally */];\n                    if (finallyAddr >= 0) {\n                        const state = nextFrame[13 /* state */];\n                        switch (state) {\n                            case 0 /* Try */:\n                            case 1 /* Catch */: {\n                                nextFrame[13 /* state */] = 2 /* Finally */;\n                                nextFrame[14 /* resolveType */] = 3 /* break */;\n                                nextFrame[29 /* depth */] = depth;\n                                nextFrame[28 /* break */] = frame[28 /* break */];\n                                ptr = finallyAddr;\n                                break loop;\n                            }\n                        }\n                    }\n                    else {\n                        stack.pop();\n                    }\n                }\n            }\n        };\n        const initiateBreak = () => {\n            const frame = peak(stack);\n            const breakAddr = frame[3 /* valueStack */].pop();\n            const depth = frame[3 /* valueStack */].pop();\n            const finallyAddr = frame[6 /* finally */];\n            frame[28 /* break */] = breakAddr;\n            frame[29 /* depth */] = depth;\n            // restore scopes\n            frame[2 /* scopes */] = frame[1 /* savedScopes */].slice(0);\n            const state = frame[13 /* state */];\n            switch (state) {\n                case 0 /* Try */:\n                case 1 /* Catch */: {\n                    if (finallyAddr >= 0) {\n                        frame[13 /* state */] = 2 /* Finally */;\n                        frame[14 /* resolveType */] = 3 /* break */;\n                        // frame[Fields.value] = value\n                        ptr = finallyAddr;\n                        currentProgram = frame[24 /* programSection */];\n                        currentTextData = frame[25 /* textSection */];\n                    }\n                    else {\n                        // stack.pop()\n                        executeBreak();\n                    }\n                    break;\n                }\n                case 2 /* Finally */:\n                    {\n                        // stack.pop()\n                        executeBreak();\n                    }\n                    break;\n                default:\n                    const nothing = state;\n            }\n        };\n        const popCurrentFrameStack = () => {\n            return currentFrame[3 /* valueStack */].pop();\n        };\n        const pushCurrentFrameStack = (arg) => {\n            return currentFrame[3 /* valueStack */].push(arg);\n        };\n        try {\n            command: switch (command) {\n                case 1 /* Literal */:\n                    {\n                        const value = read();\n                        if (isSmallNumber(value)) {\n                            pushCurrentFrameStack(value);\n                        }\n                        else {\n                            pushCurrentFrameStack(currentTextData[value ^ TEXT_DADA_MASK]);\n                        }\n                    }\n                    break;\n                case 14 /* Pop */:\n                    popCurrentFrameStack();\n                    break;\n                case 15 /* SetEvalResult */:\n                    evalResult = peak(currentFrame[3 /* valueStack */]);\n                    break;\n                case 16 /* Duplicate */:\n                    pushCurrentFrameStack(peak(currentFrame[3 /* valueStack */]));\n                    break;\n                case 17 /* GetRecord */:\n                    pushCurrentFrameStack(currentFrame);\n                    break;\n                case 2 /* NullLiteral */:\n                    pushCurrentFrameStack(null);\n                    break;\n                case 3 /* UndefinedLiteral */:\n                    pushCurrentFrameStack(undefined);\n                    break;\n                case 47 /* RegexpLiteral */:\n                    {\n                        const flags = popCurrentFrameStack();\n                        const source = popCurrentFrameStack();\n                        pushCurrentFrameStack(new REGEXP(source, flags));\n                    }\n                    break;\n                case 19 /* Set */:\n                case 20 /* SetKeepCtx */:\n                    {\n                        const value = popCurrentFrameStack();\n                        const name = popCurrentFrameStack();\n                        const ctx = popCurrentFrameStack();\n                        if (!environments.has(ctx)) {\n                            ctx[name] = value;\n                        }\n                        else {\n                            const scope = findScope(ctx, name);\n                            if (scope) {\n                                scope[name] = value;\n                            }\n                            else {\n                                throw new ReferenceError(name + is_not_defined);\n                            }\n                        }\n                        if (command === 19 /* Set */) {\n                            pushCurrentFrameStack(value);\n                        }\n                        else /* if (command === OpCode.SetKeepCtx) */ {\n                            pushCurrentFrameStack(ctx);\n                        }\n                    }\n                    break;\n                case 18 /* SetInitialized */:\n                    {\n                        const value = popCurrentFrameStack();\n                        const name = popCurrentFrameStack();\n                        const ctx = popCurrentFrameStack();\n                        const scope = findScope(ctx, name);\n                        const desc = variableDescriptors.get(scope).get(name);\n                        desc[9 /* tdz */] = false;\n                        desc[11 /* value */] = value;\n                    }\n                    break;\n                // Assign and update\n                case 68 /* BPlusEqual */:\n                case 69 /* BMinusEqual */:\n                case 70 /* BSlashEqual */:\n                case 71 /* BAsteriskEqual */:\n                    {\n                        const rightVal = popCurrentFrameStack();\n                        const name = popCurrentFrameStack();\n                        const ctx = popCurrentFrameStack();\n                        const leftValue = getValue(ctx, name);\n                        const commandCurrent = command;\n                        const exprs = {\n                            [68 /* BPlusEqual */]: (a, b) => a + b,\n                            [69 /* BMinusEqual */]: (a, b) => a - b,\n                            [70 /* BSlashEqual */]: (a, b) => a / b,\n                            [71 /* BAsteriskEqual */]: (a, b) => a * b\n                        };\n                        const r = exprs[command](leftValue, rightVal);\n                        setValue(ctx, name, r);\n                        pushCurrentFrameStack(r);\n                    }\n                    break;\n                case 22 /* DefineKeepCtx */:\n                    {\n                        const value = popCurrentFrameStack();\n                        const name = popCurrentFrameStack();\n                        const ctx = popCurrentFrameStack();\n                        Reflect.defineProperty(ctx, name, {\n                            configurable: true,\n                            enumerable: true,\n                            writable: true,\n                            value: value\n                        });\n                        ctx[name] = value;\n                        pushCurrentFrameStack(ctx);\n                    }\n                    break;\n                case 23 /* Get */:\n                    {\n                        const name = popCurrentFrameStack();\n                        const ctx = popCurrentFrameStack();\n                        pushCurrentFrameStack(getValue(ctx, name));\n                    }\n                    break;\n                case 21 /* SetMultiple */:\n                    {\n                        const ctx = popCurrentFrameStack();\n                        const length = popCurrentFrameStack();\n                        for (let i = 0; i < length; i++) {\n                            const flag = popCurrentFrameStack();\n                            const value = popCurrentFrameStack();\n                            const name = popCurrentFrameStack();\n                            let hit = false;\n                            for (let i = ctx[2 /* scopes */].length - 1; i >= 0; i--) {\n                                if (Reflect.has(ctx[2 /* scopes */][i], name)) {\n                                    hit = true;\n                                    const desc = getVariableDescriptor(ctx[2 /* scopes */][i], name);\n                                    if (desc && (flag & 1 /* DeTDZ */))\n                                        desc[9 /* tdz */] = false;\n                                    currentFrame[2 /* scopes */][i][name] = value;\n                                    if (desc && (flag & 2 /* Freeze */))\n                                        desc[10 /* immutable */] = true;\n                                    break;\n                                }\n                            }\n                            if (!hit) {\n                                throw new ReferenceError(name + is_not_defined);\n                            }\n                        }\n                    }\n                    break;\n                case 8 /* Jump */:\n                    {\n                        const pos = popCurrentFrameStack();\n                        ptr = pos;\n                    }\n                    break;\n                case 6 /* JumpIfNot */:\n                    {\n                        const value = popCurrentFrameStack();\n                        const pos = popCurrentFrameStack();\n                        if (value) {\n                            // intentional blank\n                        }\n                        else {\n                            ptr = pos;\n                        }\n                    }\n                    break;\n                case 7 /* JumpIf */:\n                    {\n                        const value = popCurrentFrameStack();\n                        const pos = popCurrentFrameStack();\n                        if (value) {\n                            ptr = pos;\n                        }\n                        else {\n                            // intentional blank\n                        }\n                    }\n                    break;\n                case 9 /* JumpIfAndKeep */:\n                    {\n                        const value = popCurrentFrameStack();\n                        const pos = popCurrentFrameStack();\n                        pushCurrentFrameStack(value);\n                        if (value) {\n                            ptr = pos;\n                        }\n                        else {\n                            // intentional blank\n                        }\n                    }\n                    break;\n                case 10 /* JumpIfNotAndKeep */:\n                    {\n                        const value = popCurrentFrameStack();\n                        const pos = popCurrentFrameStack();\n                        pushCurrentFrameStack(value);\n                        if (value) {\n                            // intentional blank\n                        }\n                        else {\n                            ptr = pos;\n                        }\n                    }\n                    break;\n                case 11 /* EnterFunction */:\n                    {\n                        // TODO: arguments and this/self reference\n                        const functionType = popCurrentFrameStack();\n                        const variableCount = popCurrentFrameStack();\n                        const variables = [];\n                        for (let i = 0; i < variableCount; i++) {\n                            variables.push({\n                                [0 /* type */]: popCurrentFrameStack(),\n                                [8 /* name */]: popCurrentFrameStack()\n                            });\n                        }\n                        const argumentNameCount = popCurrentFrameStack();\n                        const argumentNames = [];\n                        for (let i = 0; i < argumentNameCount; i++) {\n                            argumentNames.push(popCurrentFrameStack());\n                        }\n                        const parameterCount = popCurrentFrameStack();\n                        const parameters = [];\n                        for (let i = 0; i < parameterCount; i++) {\n                            parameters.unshift(popCurrentFrameStack());\n                        }\n                        const invokeType = popCurrentFrameStack();\n                        const getArgumentObject = (scope, callee) => {\n                            const obj = createArgumentObject();\n                            const bindingLength = Math.min(argumentNameCount, parameterCount);\n                            for (let i = 0; i < parameterCount; i++) {\n                                if (i < bindingLength) {\n                                    Object.defineProperty(obj, i, {\n                                        enumerable: true,\n                                        configurable: true,\n                                        get() {\n                                            return scope[argumentNames[i]];\n                                        },\n                                        set(v) {\n                                            scope[argumentNames[i]] = v;\n                                        }\n                                    });\n                                }\n                                else {\n                                    obj[i] = parameters[i];\n                                }\n                            }\n                            Object.defineProperty(obj, 'length', {\n                                enumerable: false,\n                                configurable: true,\n                                value: parameterCount\n                            });\n                            Object.defineProperty(obj, 'callee', {\n                                enumerable: false,\n                                configurable: true,\n                                value: callee\n                            });\n                            return obj;\n                        };\n                        if (invokeType === 0 /* Apply */) {\n                            // TODO: arguments and this/self reference\n                            const name = popCurrentFrameStack();\n                            const fn = popCurrentFrameStack();\n                            const self = popCurrentFrameStack();\n                            let scope;\n                            if (functionType === 1 /* SourceFileInPlace */) {\n                                scope = peak(currentFrame[2 /* scopes */]) || currentFrame[30 /* globalThis */];\n                            }\n                            else {\n                                scope = getEmptyObject();\n                                currentFrame[2 /* scopes */].push(scope);\n                            }\n                            switch (functionType) {\n                                case 2 /* FunctionDeclaration */:\n                                case 3 /* FunctionExpression */:\n                                case 5 /* MethodDeclaration */:\n                                case 6 /* GetAccessor */:\n                                case 7 /* SetAccessor */:\n                                    defineVariable(scope, \"[this]\" /* This */, 1 /* Var */);\n                                    scope[\"[this]\" /* This */] = self;\n                                    scope['arguments'] = getArgumentObject(scope, fn);\n                            }\n                            switch (functionType) {\n                                case 3 /* FunctionExpression */:\n                                case 5 /* MethodDeclaration */:\n                                    if (name !== '') {\n                                        scope[name] = fn;\n                                    }\n                            }\n                            for (let v of variables) {\n                                defineVariable(scope, v[8 /* name */], v[0 /* type */]);\n                            }\n                            for (let [index, name] of argumentNames.entries()) {\n                                scope[name] = parameters[index];\n                            }\n                        }\n                        else if (invokeType === 1 /* Construct */) {\n                            const name = popCurrentFrameStack();\n                            const fn = popCurrentFrameStack();\n                            const newTarget = popCurrentFrameStack();\n                            const scope = getEmptyObject();\n                            currentFrame[2 /* scopes */].push(scope);\n                            switch (functionType) {\n                                case 5 /* MethodDeclaration */:\n                                case 6 /* GetAccessor */:\n                                case 7 /* SetAccessor */:\n                                    throw new TypeError('- not a constructor');\n                                case 2 /* FunctionDeclaration */:\n                                case 3 /* FunctionExpression */:\n                                    defineVariable(scope, \"[this]\" /* This */, 1 /* Var */);\n                                    scope[\"[this]\" /* This */] = Object.create(newTarget.prototype);\n                                    scope['arguments'] = getArgumentObject(scope, fn);\n                            }\n                            switch (functionType) {\n                                case 3 /* FunctionExpression */:\n                                    scope[name] = fn;\n                            }\n                            for (let v of variables) {\n                                defineVariable(scope, v[8 /* name */], v[0 /* type */]);\n                            }\n                            for (let [index, name] of argumentNames.entries()) {\n                                scope[name] = parameters[index];\n                            }\n                        }\n                    }\n                    break;\n                case 12 /* EnterScope */:\n                    {\n                        const variableCount = popCurrentFrameStack();\n                        const variables = [];\n                        for (let i = 0; i < variableCount; i++) {\n                            variables.push({\n                                [0 /* type */]: popCurrentFrameStack(),\n                                [8 /* name */]: popCurrentFrameStack()\n                            });\n                        }\n                        const scope = getEmptyObject();\n                        currentFrame[2 /* scopes */].push(scope);\n                        for (let v of variables) {\n                            defineVariable(scope, v[8 /* name */], v[0 /* type */]);\n                        }\n                    }\n                    break;\n                case 13 /* LeaveScope */:\n                    {\n                        currentFrame[2 /* scopes */].pop();\n                    }\n                    break;\n                case 24 /* DeTDZ */:\n                    {\n                        const env = peak(currentFrame[3 /* valueStack */], 2);\n                        const name = peak(currentFrame[3 /* valueStack */]);\n                        getVariableDescriptor(peak(env[2 /* scopes */]), name)[9 /* tdz */] = false;\n                    }\n                    break;\n                case 25 /* FreezeVariable */:\n                    {\n                        const env = peak(currentFrame[3 /* valueStack */], 2);\n                        const name = peak(currentFrame[3 /* valueStack */]);\n                        getVariableDescriptor(peak(env[2 /* scopes */]), name)[10 /* immutable */] = true;\n                    }\n                    break;\n                case 26 /* DefineFunction */:\n                    {\n                        const type = popCurrentFrameStack();\n                        const offset = popCurrentFrameStack();\n                        const name = popCurrentFrameStack();\n                        pushCurrentFrameStack(defineFunction(currentFrame[30 /* globalThis */], currentFrame[2 /* scopes */], name, type, offset));\n                    }\n                    break;\n                case 37 /* CallValue */:\n                case 34 /* Call */:\n                case 35 /* CallAsEval */:\n                    {\n                        const parameterCount = popCurrentFrameStack();\n                        let parameters = [];\n                        for (let i = 0; i < parameterCount; i++) {\n                            parameters.unshift(popCurrentFrameStack());\n                        }\n                        let fn, envOrRecord, name = '';\n                        if (command === 34 /* Call */ || command === 35 /* CallAsEval */) {\n                            name = popCurrentFrameStack();\n                            envOrRecord = popCurrentFrameStack();\n                            fn = getValue(envOrRecord, name);\n                        }\n                        else /** if (command === OpCode.CallValue) */ {\n                            envOrRecord = undefined;\n                            fn = popCurrentFrameStack();\n                        }\n                        while (fn === CALL || fn === APPLY || bindInfo.has(fn)) {\n                            let newFn, newSelf, newParameters;\n                            if (fn === CALL) {\n                                newFn = envOrRecord;\n                                newSelf = parameters[0];\n                                newParameters = parameters.slice(1);\n                            }\n                            else if (fn === APPLY) {\n                                newFn = envOrRecord;\n                                newSelf = parameters[0];\n                                const parameterArrayLike = parameters != null ? parameters[1] : [];\n                                const parameterLength = parameterArrayLike.length;\n                                newParameters = [];\n                                for (let i = 0; i < parameterLength; i++) {\n                                    newParameters.push(parameterArrayLike[i]);\n                                }\n                            }\n                            else /* if (bindInfo.has(fn))*/ {\n                                const info0 = bindInfo.get(fn);\n                                const info = info0;\n                                newSelf = info[17 /* self */];\n                                newParameters = [...info[18 /* arguments */], ...parameters];\n                                newFn = info[16 /* function */];\n                            }\n                            fn = environments.has(newFn) ? undefined : newFn;\n                            envOrRecord = newSelf;\n                            parameters = newParameters;\n                        }\n                        let self = undefined;\n                        if (!environments.has(envOrRecord)) {\n                            self = envOrRecord;\n                        }\n                        if (fn === BIND) {\n                            const bound = bindInternal(self, parameters[0], parameters.slice(1));\n                            pushCurrentFrameStack(bound);\n                        }\n                        else if (!functionDescriptors.has(fn)) {\n                            // extern\n                            if (typeof fn !== 'function') {\n                                if (command === 34 /* Call */ || command === 35 /* CallAsEval */) {\n                                    throw new TypeError(`(intermediate value).${name} is not a function`);\n                                }\n                                else /* if (command === OpCode.CallValue) */ {\n                                    throw new TypeError(`(intermediate value) is not a function`);\n                                }\n                            }\n                            else {\n                                const fnToCall = redirectedFunctions.has(fn) ? redirectedFunctions.get(fn) : fn;\n                                if (fnToCall === EVAL_FUNCTION) {\n                                    if (command === 35 /* CallAsEval */) {\n                                        pushCurrentFrameStack(emulateEval(String(parameters[0]), true));\n                                    }\n                                    else {\n                                        pushCurrentFrameStack(emulateEval(String(parameters[0]), false));\n                                    }\n                                }\n                                else {\n                                    pushCurrentFrameStack(Reflect.apply(fnToCall, self, parameters));\n                                }\n                            }\n                        }\n                        else {\n                            const des = functionDescriptors.get(fn);\n                            const newFrame = {\n                                [0 /* type */]: 0 /* Function */,\n                                [2 /* scopes */]: [...des[2 /* scopes */]],\n                                [4 /* return */]: ptr,\n                                [3 /* valueStack */]: [\n                                    self,\n                                    fn,\n                                    des[8 /* name */],\n                                    0 /* Apply */,\n                                    ...parameters,\n                                    parameters.length\n                                ],\n                                [19 /* invokeType */]: 0 /* Apply */,\n                                [24 /* programSection */]: des[24 /* programSection */],\n                                [25 /* textSection */]: des[25 /* textSection */],\n                                [30 /* globalThis */]: des[30 /* globalThis */]\n                            };\n                            environments.add(newFrame);\n                            stack.push(newFrame);\n                            ptr = des[12 /* offset */];\n                            currentTextData = des[25 /* textSection */];\n                            currentProgram = des[24 /* programSection */];\n                        }\n                    }\n                    break;\n                case 36 /* New */:\n                    {\n                        const parameterCount = popCurrentFrameStack();\n                        let parameters = [];\n                        for (let i = 0; i < parameterCount; i++) {\n                            parameters.unshift(popCurrentFrameStack());\n                        }\n                        let fn = popCurrentFrameStack();\n                        while (bindInfo.has(fn)) {\n                            let newFn, newParameters;\n                            const info0 = bindInfo.get(fn);\n                            const info = info0;\n                            newParameters = [...info[18 /* arguments */], ...parameters];\n                            newFn = info[16 /* function */];\n                            fn = environments.has(newFn) ? undefined : newFn;\n                            parameters = newParameters;\n                        }\n                        if (!functionDescriptors.has(fn)) {\n                            // extern\n                            pushCurrentFrameStack(Reflect.construct(fn, parameters, fn));\n                        }\n                        else {\n                            const des = functionDescriptors.get(fn);\n                            const newFrame = {\n                                [0 /* type */]: 0 /* Function */,\n                                [2 /* scopes */]: [...des[2 /* scopes */]],\n                                [4 /* return */]: ptr,\n                                [3 /* valueStack */]: [\n                                    fn,\n                                    fn,\n                                    des[8 /* name */],\n                                    1 /* Construct */,\n                                    ...parameters,\n                                    parameters.length\n                                ],\n                                [19 /* invokeType */]: 1 /* Construct */,\n                                [24 /* programSection */]: des[24 /* programSection */],\n                                [25 /* textSection */]: des[25 /* textSection */],\n                                [30 /* globalThis */]: des[30 /* globalThis */]\n                            };\n                            environments.add(newFrame);\n                            stack.push(newFrame);\n                            ptr = des[12 /* offset */];\n                            currentTextData = des[25 /* textSection */];\n                            currentProgram = des[24 /* programSection */];\n                        }\n                    }\n                    break;\n                case 27 /* Return */:\n                    {\n                        const result = popCurrentFrameStack();\n                        if (currentFrame[3 /* valueStack */].length > 0) {\n                            throw new Error('bad return');\n                        }\n                        // remove all try frames\n                        while (peak(stack)[0 /* type */] !== 0 /* Function */) {\n                            stack.pop();\n                        }\n                        const returnAddr = peak(stack)[4 /* return */];\n                        const functionFrame = peak(stack);\n                        if (returnAddr < 0) {\n                            // leave the whole function\n                            if (functionFrame[19 /* invokeType */] === 0 /* Apply */) {\n                                returnsExternal = true;\n                                returnValue = result;\n                                break command;\n                            }\n                            else {\n                                if (typeof result === 'function' || typeof result === 'object') {\n                                    returnsExternal = true;\n                                    returnValue = result;\n                                    break command;\n                                }\n                                else {\n                                    returnsExternal = true;\n                                    returnValue = getValue(functionFrame, \"[this]\" /* This */);\n                                    break command;\n                                }\n                            }\n                        }\n                        stack.pop();\n                        const prevFrame = peak(stack);\n                        if (functionFrame[19 /* invokeType */] === 0 /* Apply */) {\n                            prevFrame[3 /* valueStack */].push(result);\n                        }\n                        else {\n                            if (typeof result === 'function' || typeof result === 'object') {\n                                prevFrame[3 /* valueStack */].push(result);\n                            }\n                            else {\n                                prevFrame[3 /* valueStack */].push(getValue(functionFrame, \"[this]\" /* This */));\n                            }\n                        }\n                        ptr = returnAddr;\n                        currentProgram = prevFrame[24 /* programSection */];\n                        currentTextData = prevFrame[25 /* textSection */];\n                    }\n                    break;\n                case 29 /* Throw */: {\n                    const err = popCurrentFrameStack();\n                    throw err;\n                }\n                case 73 /* ThrowReferenceError */: {\n                    const msg = popCurrentFrameStack();\n                    throw new ReferenceError(msg);\n                }\n                case 45 /* ArrayLiteral */:\n                    pushCurrentFrameStack([]);\n                    break;\n                case 46 /* ObjectLiteral */:\n                    pushCurrentFrameStack({});\n                    break;\n                case 33 /* InitTryCatch */:\n                    {\n                        const catchName = popCurrentFrameStack();\n                        const finallyAddr = popCurrentFrameStack();\n                        const catchAddr = popCurrentFrameStack();\n                        const exitAddr = popCurrentFrameStack();\n                        const frame = {\n                            [0 /* type */]: 1 /* Try */,\n                            [1 /* savedScopes */]: currentFrame[2 /* scopes */],\n                            [2 /* scopes */]: currentFrame[2 /* scopes */].slice(0),\n                            [3 /* valueStack */]: [],\n                            [13 /* state */]: 0 /* Try */,\n                            [14 /* resolveType */]: 0 /* normal */,\n                            [11 /* value */]: undefined,\n                            [5 /* catch */]: catchAddr,\n                            [6 /* finally */]: finallyAddr,\n                            [28 /* break */]: 0,\n                            [29 /* depth */]: 0,\n                            [7 /* variable */]: catchName,\n                            [15 /* exit */]: exitAddr,\n                            [25 /* textSection */]: currentTextData,\n                            [24 /* programSection */]: currentProgram,\n                            [30 /* globalThis */]: currentFrame[30 /* globalThis */]\n                        };\n                        environments.add(frame);\n                        stack.push(frame);\n                    }\n                    break;\n                case 28 /* ReturnInTryCatchFinally */:\n                    initiateReturn();\n                    break;\n                case 30 /* ThrowInTryCatchFinally */:\n                    initiateThrow();\n                    break;\n                case 31 /* BreakInTryCatchFinally */:\n                    initiateBreak();\n                    break;\n                case 32 /* ExitTryCatchFinally */:\n                    {\n                        const frame = currentFrame;\n                        const prevState = frame[13 /* state */];\n                        const prevResolveType = frame[14 /* resolveType */];\n                        const prevValue = frame[11 /* value */];\n                        const exit = frame[15 /* exit */];\n                        const finallyPtr = frame[6 /* finally */];\n                        // restore scopes\n                        frame[2 /* scopes */] = frame[1 /* savedScopes */].slice(0);\n                        switch (prevState) {\n                            case 2 /* Finally */:\n                                switch (prevResolveType) {\n                                    case 0 /* normal */:\n                                        ptr = exit;\n                                        break command;\n                                    case 1 /* throw */:\n                                        executeThrow(prevValue);\n                                        break command;\n                                    case 2 /* return */:\n                                        executeReturn(prevValue);\n                                        break command;\n                                    case 3 /* break */:\n                                        executeBreak();\n                                        break command;\n                                }\n                            case 0 /* Try */:\n                            case 1 /* Catch */:\n                                if (frame[6 /* finally */] >= 0) {\n                                    frame[13 /* state */] = 2 /* Finally */;\n                                    frame[14 /* resolveType */] = 0 /* normal */;\n                                    frame[11 /* value */] = undefined;\n                                    ptr = finallyPtr;\n                                    break command;\n                                }\n                                else {\n                                    ptr = exit;\n                                    break command;\n                                }\n                            default:\n                                const nothing = prevState;\n                        }\n                    }\n                    break;\n                case 38 /* Typeof */:\n                    {\n                        const value = popCurrentFrameStack();\n                        pushCurrentFrameStack(typeof value);\n                    }\n                    break;\n                case 39 /* TypeofReference */:\n                    {\n                        const name = popCurrentFrameStack();\n                        const ctx = popCurrentFrameStack();\n                        if (environments.has(ctx)) {\n                            const frame = ctx;\n                            for (let i = frame[2 /* scopes */].length - 1; i >= 0; i--) {\n                                if (Reflect.getOwnPropertyDescriptor(frame[2 /* scopes */][i], name)) {\n                                    pushCurrentFrameStack(typeof frame[2 /* scopes */][i][name]);\n                                    break command;\n                                }\n                            }\n                            pushCurrentFrameStack('undefined');\n                        }\n                        else {\n                            pushCurrentFrameStack(typeof ctx[name]);\n                        }\n                    }\n                    break;\n                case 41 /* GetPropertyIterator */:\n                    {\n                        const value = popCurrentFrameStack();\n                        const iterator = (function* (value) {\n                            for (const key in value) {\n                                yield key;\n                            }\n                        })(value);\n                        pushCurrentFrameStack(iterator);\n                    }\n                    break;\n                case 42 /* NextEntry */:\n                    {\n                        const iterator = popCurrentFrameStack();\n                        pushCurrentFrameStack(iterator.next());\n                    }\n                    break;\n                case 43 /* EntryIsDone */:\n                    {\n                        const entry = popCurrentFrameStack();\n                        pushCurrentFrameStack(entry.done);\n                    }\n                    break;\n                case 44 /* EntryGetValue */:\n                    {\n                        const entry = popCurrentFrameStack();\n                        pushCurrentFrameStack(entry.value);\n                    }\n                    break;\n                case 40 /* InstanceOf */:\n                case 52 /* BAmpersand */:\n                case 53 /* BBar */:\n                case 51 /* BCaret */:\n                case 61 /* BEqualsEquals */:\n                case 62 /* BEqualsEqualsEquals */:\n                case 54 /* BGreaterThan */:\n                case 55 /* BGreaterThanGreaterThan */:\n                case 56 /* BGreaterThanGreaterThanGreaterThan */:\n                case 57 /* BGreaterThanEquals */:\n                case 58 /* BLessThan */:\n                case 59 /* BLessThanLessThan */:\n                case 60 /* BLessThanEquals */:\n                case 61 /* BEqualsEquals */:\n                case 62 /* BEqualsEqualsEquals */:\n                case 63 /* BExclamationEquals */:\n                case 64 /* BExclamationEqualsEquals */:\n                case 50 /* BMinus */:\n                case 49 /* BPlus */:\n                case 48 /* BIn */:\n                case 65 /* BAsterisk */:\n                case 66 /* BSlash */:\n                case 67 /* BPercent */:\n                    {\n                        const right = popCurrentFrameStack();\n                        const left = popCurrentFrameStack();\n                        const ops = {\n                            [52 /* BAmpersand */]: (left, right) => left & right,\n                            [53 /* BBar */]: (left, right) => left | right,\n                            [51 /* BCaret */]: (left, right) => left ^ right,\n                            [61 /* BEqualsEquals */]: (left, right) => left == right,\n                            [62 /* BEqualsEqualsEquals */]: (left, right) => left === right,\n                            [63 /* BExclamationEquals */]: (left, right) => left != right,\n                            [64 /* BExclamationEqualsEquals */]: (left, right) => left !== right,\n                            [54 /* BGreaterThan */]: (left, right) => left > right,\n                            [55 /* BGreaterThanGreaterThan */]: (left, right) => left >> right,\n                            [56 /* BGreaterThanGreaterThanGreaterThan */]: (left, right) => left >>> right,\n                            [57 /* BGreaterThanEquals */]: (left, right) => left >= right,\n                            [58 /* BLessThan */]: (left, right) => left < right,\n                            [59 /* BLessThanLessThan */]: (left, right) => left << right,\n                            [60 /* BLessThanEquals */]: (left, right) => left <= right,\n                            [49 /* BPlus */]: (left, right) => left + right,\n                            [50 /* BMinus */]: (left, right) => left - right,\n                            [40 /* InstanceOf */]: (left, right) => left instanceof right,\n                            [48 /* BIn */]: (left, right) => left in right,\n                            [65 /* BAsterisk */]: (left, right) => left * right,\n                            [66 /* BSlash */]: (left, right) => left / right,\n                            [67 /* BPercent */]: (left, right) => left % right\n                        };\n                        const result = ops[command](left, right);\n                        pushCurrentFrameStack(result);\n                    }\n                    break;\n                case 75 /* PostFixPlusPLus */:\n                case 74 /* PostFixMinusMinus */:\n                    {\n                        const name = popCurrentFrameStack();\n                        const ctx = popCurrentFrameStack();\n                        if (environments.has(ctx)) {\n                            const env = ctx;\n                            const scope = findScope(env, name);\n                            if (scope) {\n                                const old = scope[name];\n                                const newVal = command === 75 /* PostFixPlusPLus */ ? old + 1 : old - 1;\n                                scope[name] = newVal;\n                                pushCurrentFrameStack(old);\n                            }\n                            else {\n                                throw new ReferenceError(name + is_not_defined);\n                            }\n                        }\n                        else {\n                            const self = ctx;\n                            const old = self[name];\n                            const newVal = command === 75 /* PostFixPlusPLus */ ? old + 1 : old - 1;\n                            self[name] = newVal;\n                            pushCurrentFrameStack(old);\n                        }\n                    }\n                    break;\n                case 76 /* PrefixUnaryPlus */:\n                case 77 /* PrefixUnaryMinus */:\n                case 78 /* PrefixExclamation */:\n                case 79 /* PrefixTilde */:\n                    {\n                        const value = popCurrentFrameStack();\n                        let result;\n                        switch (command) {\n                            case 76 /* PrefixUnaryPlus */:\n                                result = +value;\n                                break;\n                            case 77 /* PrefixUnaryMinus */:\n                                result = -value;\n                                break;\n                            case 78 /* PrefixExclamation */:\n                                result = !value;\n                                break;\n                            case 79 /* PrefixTilde */:\n                                result = ~value;\n                                break;\n                        }\n                        pushCurrentFrameStack(result);\n                    }\n                    break;\n                // Prefix updates\n                case 80 /* PrefixPlusPlus */:\n                case 81 /* PrefixMinusMinus */:\n                    {\n                        const name = popCurrentFrameStack();\n                        const ctx = popCurrentFrameStack();\n                        const currentValue = getValue(ctx, name);\n                        const newVal = command === 80 /* PrefixPlusPlus */ ? currentValue + 1 : currentValue - 1;\n                        setValue(ctx, name, newVal);\n                        // Just don't care and push the new value\n                        pushCurrentFrameStack(newVal);\n                    }\n                    break;\n                case 72 /* Delete */:\n                    {\n                        const name = popCurrentFrameStack();\n                        const ctx = popCurrentFrameStack();\n                        if (!environments.has(ctx)) {\n                            pushCurrentFrameStack(delete ctx[name]);\n                        }\n                        else {\n                            const env = ctx;\n                            const scope = findScope(env, name);\n                            if (scope) {\n                                pushCurrentFrameStack(delete scope[name]);\n                            }\n                            else {\n                                pushCurrentFrameStack(true);\n                            }\n                        }\n                    }\n                    break;\n                case 82 /* Debugger */:\n                    {\n                        const debugFn = getDebugFunction();\n                        if (debugFn) {\n                            if (debug) {\n                                debugFn();\n                            }\n                            else {\n                                console.warn('Custom debug function did not work when called from native function');\n                            }\n                        }\n                        else {\n                            debugger;\n                        }\n                    }\n                    break;\n                default:\n                    const nothing = command;\n                    throw new Error('Um?');\n            }\n            if (returnsExternal) {\n                return {\n                    done: true,\n                    value: returnValue,\n                    evalValue: evalResult\n                };\n            }\n        }\n        catch (err) {\n            if (err != null && typeof err === 'object') {\n                err.pos = currentPtr;\n            }\n            executeThrow(err);\n        }\n        return {\n            done: false\n        };\n    };\n    return {\n        get [20 /* ptr */]() {\n            return commandPtr;\n        },\n        get [21 /* stack */]() {\n            return stack;\n        },\n        get [2 /* scopes */]() {\n            return peak(stack)[2 /* scopes */];\n        },\n        [23 /* step */]: step\n    };\n};\nexports.getExecution = getExecution;\nconst run_ = (program, textData, entryPoint, globalThis, scopes, invokeData, args, getDebugFunction, evalResultInstead = false, compileFunction = undefined) => {\n    const execution = getExecution(program, textData, entryPoint, globalThis, scopes, invokeData, args, getDebugFunction, compileFunction);\n    let res;\n    do {\n        res = execution[23 /* step */]();\n    } while (!res.done);\n    if (!evalResultInstead) {\n        return res.value;\n    }\n    else {\n        return res.evalValue;\n    }\n};\nconst run = (program, textData, entryPoint = 0, globalThis, scopes = [], self = undefined, args = [], compileFunction = undefined) => {\n    // The debug function is always null because it did not work in one shot\n    return run_(program, textData, entryPoint, globalThis, scopes, {\n        [0 /* type */]: 0 /* Apply */,\n        [16 /* function */]: undefined,\n        [8 /* name */]: '',\n        [17 /* self */]: self\n    }, args, () => null, true, compileFunction);\n};\nexports.run = run;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst index_vue_1 = __importDefault(require(\"./index.vue\"));\nconst vue_1 = __importDefault(require(\"vue\"));\ntry {\n    eval('console.log(\"CSP does not work\")');\n}\ncatch (err) {\n    console.log(\"CSP do work\");\n}\nnew vue_1.default({\n    el: document.getElementById('main'),\n    data: {},\n    render: (h) => h(index_vue_1.default)\n});\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 3411;\nmodule.exports = webpackEmptyContext;","import { render, staticRenderFns } from \"./debugger-value.vue?vue&type=template&id=24f9e476&scoped=true&\"\nimport script from \"./debugger-value.vue?vue&type=script&lang=ts&\"\nexport * from \"./debugger-value.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./debugger-value.vue?vue&type=style&index=0&id=24f9e476&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"24f9e476\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/flat-js/flat-js/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('24f9e476')) {\n      api.createRecord('24f9e476', component.options)\n    } else {\n      api.reload('24f9e476', component.options)\n    }\n    module.hot.accept(\"./debugger-value.vue?vue&type=template&id=24f9e476&scoped=true&\", function () {\n      api.rerender('24f9e476', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"web/components/debugger-value.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./debugger.vue?vue&type=template&id=35158521&scoped=true&\"\nimport script from \"./debugger.vue?vue&type=script&lang=ts&\"\nexport * from \"./debugger.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./debugger.vue?vue&type=style&index=0&id=35158521&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"35158521\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/flat-js/flat-js/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('35158521')) {\n      api.createRecord('35158521', component.options)\n    } else {\n      api.reload('35158521', component.options)\n    }\n    module.hot.accept(\"./debugger.vue?vue&type=template&id=35158521&scoped=true&\", function () {\n      api.rerender('35158521', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"web/components/debugger.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./monaco.vue?vue&type=template&id=19cb2101&scoped=true&\"\nimport script from \"./monaco.vue?vue&type=script&lang=ts&\"\nexport * from \"./monaco.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./monaco.vue?vue&type=style&index=0&id=19cb2101&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"19cb2101\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/flat-js/flat-js/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('19cb2101')) {\n      api.createRecord('19cb2101', component.options)\n    } else {\n      api.reload('19cb2101', component.options)\n    }\n    module.hot.accept(\"./monaco.vue?vue&type=template&id=19cb2101&scoped=true&\", function () {\n      api.rerender('19cb2101', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"web/components/monaco.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2af2a58e&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=ts&\"\nexport * from \"./index.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=css&\"\nimport style1 from \"./index.vue?vue&type=style&index=1&id=2af2a58e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2af2a58e\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/runner/work/flat-js/flat-js/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2af2a58e')) {\n      api.createRecord('2af2a58e', component.options)\n    } else {\n      api.reload('2af2a58e', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=2af2a58e&scoped=true&\", function () {\n      api.rerender('2af2a58e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"web/index.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-3[0].rules[0].use!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debugger-value.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-3[0].rules[0].use!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debugger-value.vue?vue&type=script&lang=ts&\"","import mod from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-3[0].rules[0].use!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debugger.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-3[0].rules[0].use!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./debugger.vue?vue&type=script&lang=ts&\"","import mod from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-3[0].rules[0].use!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./monaco.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/ts-loader/index.js??clonedRuleSet-3[0].rules[0].use!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./monaco.vue?vue&type=script&lang=ts&\"","import mod from \"-!../node_modules/ts-loader/index.js??clonedRuleSet-3[0].rules[0].use!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/ts-loader/index.js??clonedRuleSet-3[0].rules[0].use!../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=ts&\"","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"debugger-value\" }, [\n    _vm.displayKey !== null\n      ? _c(\"span\", [_vm._v(_vm._s(_vm.displayKey) + \":\")])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.type === \"error\"\n      ? _c(\"span\", { staticClass: \"error\" }, [_vm._v(_vm._s(_vm.serialized))])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.type === \"number\"\n      ? _c(\"span\", { staticClass: \"number\" }, [_vm._v(_vm._s(_vm.serialized))])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.type === \"string\"\n      ? _c(\"span\", { staticClass: \"string\" }, [_vm._v(_vm._s(_vm.serialized))])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.type === \"boolean\"\n      ? _c(\"span\", { staticClass: \"boolean\" }, [_vm._v(_vm._s(_vm.serialized))])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.type === \"null\"\n      ? _c(\"span\", { staticClass: \"null\" }, [_vm._v(_vm._s(_vm.serialized))])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.type === \"undefined\"\n      ? _c(\"span\", { staticClass: \"undefined\" }, [\n          _vm._v(_vm._s(_vm.serialized))\n        ])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.type === \"object\"\n      ? _c(\n          \"span\",\n          {\n            staticClass: \"object\",\n            on: {\n              click: function($event) {\n                _vm.expand = !_vm.expand\n              }\n            }\n          },\n          [\n            _vm._v(\n              \"\\n        \" +\n                _vm._s(_vm.serialized) +\n                \" \" +\n                _vm._s(_vm.expand ? \"[-] Collapse\" : \"[+] Expand\") +\n                \"\\n    \"\n            )\n          ]\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.type === \"function\"\n      ? _c(\n          \"span\",\n          {\n            staticClass: \"function\",\n            on: {\n              click: function($event) {\n                _vm.expand = !_vm.expand\n              }\n            }\n          },\n          [\n            _vm._v(\n              \"\\n        \" +\n                _vm._s(_vm.serialized) +\n                \" \" +\n                _vm._s(_vm.expand ? \"[-] Collapse\" : \"[+] Expand\") +\n                \"\\n    \"\n            )\n          ]\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.expand\n      ? _c(\n          \"div\",\n          { staticClass: \"properties\" },\n          _vm._l(_vm.childEntries, function(entry) {\n            return _c(\n              \"div\",\n              {\n                key: JSON.stringify([entry[0], entry[1]]),\n                attrs: { key1: JSON.stringify([entry[0], entry[1]]) }\n              },\n              [\n                _c(\"debugger-value\", {\n                  attrs: {\n                    isError:\n                      entry[0] === _vm.EntryType.stringKeyError ||\n                      entry[0] === _vm.EntryType.symbolKeyError,\n                    refreshKey: _vm.refreshKey,\n                    displayKey: entry[1],\n                    value: entry[2]\n                  }\n                })\n              ],\n              1\n            )\n          }),\n          0\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"header\" }, [_vm._v(\"\\n        Scopes\\n    \")]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      { staticClass: \"area\" },\n      _vm._l(_vm.scopes, function(scope) {\n        return _c(\n          \"div\",\n          { key: _vm.getKey(scope), attrs: { key1: _vm.getKey(scope) } },\n          [\n            _c(\"debuggerValue\", {\n              attrs: {\n                displayKey: \"Scope\",\n                initialExpand: !_vm.isGlobalThis(scope),\n                refreshKey: _vm.refreshKey + _vm.refreshKeyInternal,\n                value: scope,\n                forcedProp: true\n              }\n            })\n          ],\n          1\n        )\n      }),\n      0\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { ref: \"editor\" })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app\", class: { running: _vm.state !== \"idle\" } },\n    [\n      _c(\n        \"div\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.state !== \"idle\",\n              expression: \"state !== 'idle'\"\n            }\n          ],\n          staticClass: \"area-debug pane\"\n        },\n        [\n          _c(\"div\", { staticClass: \"pane-title\" }, [\n            _vm._v(\"\\n            debug\\n        \")\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"pane-content\" },\n            [\n              _c(\"debugger\", {\n                attrs: {\n                  refreshKey: _vm.refreshKey,\n                  \"stack-container\": _vm.stackContainer\n                }\n              })\n            ],\n            1\n          )\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"area-code pane\" },\n        [\n          _c(\"div\", { staticClass: \"pane-title\" }, [\n            _vm._v(\"\\n            Code\\n        \")\n          ]),\n          _vm._v(\" \"),\n          _c(\"monaco\", {\n            staticClass: \"pane-content\",\n            attrs: {\n              readonly: _vm.state !== \"idle\",\n              highlights: _vm.highlights\n            },\n            model: {\n              value: _vm.text,\n              callback: function($$v) {\n                _vm.text = $$v\n              },\n              expression: \"text\"\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"pane-footer\" }, [\n            _vm.state === \"idle\"\n              ? _c(\n                  \"button\",\n                  { staticClass: \"run-button\", on: { click: _vm.run } },\n                  [_vm._v(\"Run\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.state === \"idle\"\n              ? _c(\n                  \"button\",\n                  { staticClass: \"run-button\", on: { click: _vm.runAndPause } },\n                  [_vm._v(\"Run and pause\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.state === \"paused\"\n              ? _c(\n                  \"button\",\n                  { staticClass: \"run-button\", on: { click: _vm.resume } },\n                  [_vm._v(\"Resume\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.state === \"paused\"\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"run-button\",\n                    on: {\n                      click: function($event) {\n                        return _vm.stepExecution(false)\n                      }\n                    }\n                  },\n                  [_vm._v(\"Step\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.state === \"paused\"\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"run-button\",\n                    on: {\n                      click: function($event) {\n                        return _vm.stepExecution(true)\n                      }\n                    }\n                  },\n                  [_vm._v(\"Step in\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.state === \"paused\"\n              ? _c(\n                  \"button\",\n                  { staticClass: \"run-button\", on: { click: _vm.stop } },\n                  [_vm._v(\"Kill\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.state === \"play\"\n              ? _c(\n                  \"button\",\n                  { staticClass: \"run-button\", on: { click: _vm.pause } },\n                  [_vm._v(\"Pause\")]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.state === \"play\"\n              ? _c(\n                  \"button\",\n                  { staticClass: \"run-button\", on: { click: _vm.stop } },\n                  [_vm._v(\"Kill\")]\n                )\n              : _vm._e()\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"area-result pane\" }, [\n        _c(\"div\", { staticClass: \"pane-title\" }, [\n          _vm._v(\"\\n            Result\\n        \")\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { ref: \"result\", staticClass: \"result-pane pane-content\" }, [\n          _c(\"pre\", { staticClass: \"result\" }, [_vm._v(_vm._s(_vm.result))])\n        ]),\n        _vm._v(\" \"),\n        _vm.state === \"paused\"\n          ? _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.replText,\n                  expression: \"replText\"\n                }\n              ],\n              staticClass: \"pane-footer repl\",\n              attrs: { type: \"text\", placeholder: \"Code here...\" },\n              domProps: { value: _vm.replText },\n              on: {\n                keydown: function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                  ) {\n                    return null\n                  }\n                  return _vm.runRepl($event)\n                },\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.replText = $event.target.value\n                }\n              }\n            })\n          : _vm._e()\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"sourceRoot":""}